{"version":3,"file":"tinyglobby.js","sources":["../../node_modules/fdir/dist/utils.js","../../node_modules/fdir/dist/api/functions/join-path.js","../../node_modules/fdir/dist/api/functions/push-directory.js","../../node_modules/fdir/dist/api/functions/push-file.js","../../node_modules/fdir/dist/api/functions/get-array.js","../../node_modules/fdir/dist/api/functions/group-files.js","../../node_modules/fdir/dist/api/functions/resolve-symlink.js","../../node_modules/fdir/dist/api/functions/invoke-callback.js","../../node_modules/fdir/dist/api/functions/walk-directory.js","../../node_modules/fdir/dist/api/queue.js","../../node_modules/fdir/dist/api/counter.js","../../node_modules/fdir/dist/api/walker.js","../../node_modules/fdir/dist/api/async.js","../../node_modules/fdir/dist/api/sync.js","../../node_modules/fdir/dist/builder/api-builder.js","../../node_modules/picomatch/lib/constants.js","../../node_modules/picomatch/lib/utils.js","../../node_modules/picomatch/lib/scan.js","../../node_modules/picomatch/lib/parse.js","../../node_modules/picomatch/lib/picomatch.js","../../node_modules/picomatch/index.js","../../node_modules/fdir/dist/builder/index.js","../../node_modules/fdir/dist/types.js","../../node_modules/fdir/dist/index.js","../../node_modules/tinyglobby/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizePath = exports.isRootDirectory = exports.convertSlashes = exports.cleanPath = void 0;\nconst path_1 = require(\"path\");\nfunction cleanPath(path) {\n    let normalized = (0, path_1.normalize)(path);\n    // we have to remove the last path separator\n    // to account for / root path\n    if (normalized.length > 1 && normalized[normalized.length - 1] === path_1.sep)\n        normalized = normalized.substring(0, normalized.length - 1);\n    return normalized;\n}\nexports.cleanPath = cleanPath;\nconst SLASHES_REGEX = /[\\\\/]/g;\nfunction convertSlashes(path, separator) {\n    return path.replace(SLASHES_REGEX, separator);\n}\nexports.convertSlashes = convertSlashes;\nfunction isRootDirectory(path) {\n    return path === \"/\" || /^[a-z]:\\\\$/i.test(path);\n}\nexports.isRootDirectory = isRootDirectory;\nfunction normalizePath(path, options) {\n    const { resolvePaths, normalizePath, pathSeparator } = options;\n    const pathNeedsCleaning = (process.platform === \"win32\" && path.includes(\"/\")) ||\n        path.startsWith(\".\");\n    if (resolvePaths)\n        path = (0, path_1.resolve)(path);\n    if (normalizePath || pathNeedsCleaning)\n        path = cleanPath(path);\n    if (path === \".\")\n        return \"\";\n    const needsSeperator = path[path.length - 1] !== pathSeparator;\n    return convertSlashes(needsSeperator ? path + pathSeparator : path, pathSeparator);\n}\nexports.normalizePath = normalizePath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = exports.joinDirectoryPath = exports.joinPathWithBasePath = void 0;\nconst path_1 = require(\"path\");\nconst utils_1 = require(\"../../utils\");\nfunction joinPathWithBasePath(filename, directoryPath) {\n    return directoryPath + filename;\n}\nexports.joinPathWithBasePath = joinPathWithBasePath;\nfunction joinPathWithRelativePath(root, options) {\n    return function (filename, directoryPath) {\n        const sameRoot = directoryPath.startsWith(root);\n        if (sameRoot)\n            return directoryPath.replace(root, \"\") + filename;\n        else\n            return ((0, utils_1.convertSlashes)((0, path_1.relative)(root, directoryPath), options.pathSeparator) +\n                options.pathSeparator +\n                filename);\n    };\n}\nfunction joinPath(filename) {\n    return filename;\n}\nfunction joinDirectoryPath(filename, directoryPath, separator) {\n    return directoryPath + filename + separator;\n}\nexports.joinDirectoryPath = joinDirectoryPath;\nfunction build(root, options) {\n    const { relativePaths, includeBasePath } = options;\n    return relativePaths && root\n        ? joinPathWithRelativePath(root, options)\n        : includeBasePath\n            ? joinPathWithBasePath\n            : joinPath;\n}\nexports.build = build;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = void 0;\nfunction pushDirectoryWithRelativePath(root) {\n    return function (directoryPath, paths) {\n        paths.push(directoryPath.substring(root.length) || \".\");\n    };\n}\nfunction pushDirectoryFilterWithRelativePath(root) {\n    return function (directoryPath, paths, filters) {\n        const relativePath = directoryPath.substring(root.length) || \".\";\n        if (filters.every((filter) => filter(relativePath, true))) {\n            paths.push(relativePath);\n        }\n    };\n}\nconst pushDirectory = (directoryPath, paths) => {\n    paths.push(directoryPath || \".\");\n};\nconst pushDirectoryFilter = (directoryPath, paths, filters) => {\n    const path = directoryPath || \".\";\n    if (filters.every((filter) => filter(path, true))) {\n        paths.push(path);\n    }\n};\nconst empty = () => { };\nfunction build(root, options) {\n    const { includeDirs, filters, relativePaths } = options;\n    if (!includeDirs)\n        return empty;\n    if (relativePaths)\n        return filters && filters.length\n            ? pushDirectoryFilterWithRelativePath(root)\n            : pushDirectoryWithRelativePath(root);\n    return filters && filters.length ? pushDirectoryFilter : pushDirectory;\n}\nexports.build = build;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = void 0;\nconst pushFileFilterAndCount = (filename, _paths, counts, filters) => {\n    if (filters.every((filter) => filter(filename, false)))\n        counts.files++;\n};\nconst pushFileFilter = (filename, paths, _counts, filters) => {\n    if (filters.every((filter) => filter(filename, false)))\n        paths.push(filename);\n};\nconst pushFileCount = (_filename, _paths, counts, _filters) => {\n    counts.files++;\n};\nconst pushFile = (filename, paths) => {\n    paths.push(filename);\n};\nconst empty = () => { };\nfunction build(options) {\n    const { excludeFiles, filters, onlyCounts } = options;\n    if (excludeFiles)\n        return empty;\n    if (filters && filters.length) {\n        return onlyCounts ? pushFileFilterAndCount : pushFileFilter;\n    }\n    else if (onlyCounts) {\n        return pushFileCount;\n    }\n    else {\n        return pushFile;\n    }\n}\nexports.build = build;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = void 0;\nconst getArray = (paths) => {\n    return paths;\n};\nconst getArrayGroup = () => {\n    return [\"\"].slice(0, 0);\n};\nfunction build(options) {\n    return options.group ? getArrayGroup : getArray;\n}\nexports.build = build;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = void 0;\nconst groupFiles = (groups, directory, files) => {\n    groups.push({ directory, files, dir: directory });\n};\nconst empty = () => { };\nfunction build(options) {\n    return options.group ? groupFiles : empty;\n}\nexports.build = build;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = void 0;\nconst fs_1 = __importDefault(require(\"fs\"));\nconst path_1 = require(\"path\");\nconst resolveSymlinksAsync = function (path, state, callback) {\n    const { queue, options: { suppressErrors }, } = state;\n    queue.enqueue();\n    fs_1.default.realpath(path, (error, resolvedPath) => {\n        if (error)\n            return queue.dequeue(suppressErrors ? null : error, state);\n        fs_1.default.stat(resolvedPath, (error, stat) => {\n            if (error)\n                return queue.dequeue(suppressErrors ? null : error, state);\n            if (stat.isDirectory() && isRecursive(path, resolvedPath, state))\n                return queue.dequeue(null, state);\n            callback(stat, resolvedPath);\n            queue.dequeue(null, state);\n        });\n    });\n};\nconst resolveSymlinks = function (path, state, callback) {\n    const { queue, options: { suppressErrors }, } = state;\n    queue.enqueue();\n    try {\n        const resolvedPath = fs_1.default.realpathSync(path);\n        const stat = fs_1.default.statSync(resolvedPath);\n        if (stat.isDirectory() && isRecursive(path, resolvedPath, state))\n            return;\n        callback(stat, resolvedPath);\n    }\n    catch (e) {\n        if (!suppressErrors)\n            throw e;\n    }\n};\nfunction build(options, isSynchronous) {\n    if (!options.resolveSymlinks || options.excludeSymlinks)\n        return null;\n    return isSynchronous ? resolveSymlinks : resolveSymlinksAsync;\n}\nexports.build = build;\nfunction isRecursive(path, resolved, state) {\n    if (state.options.useRealPaths)\n        return isRecursiveUsingRealPaths(resolved, state);\n    let parent = (0, path_1.dirname)(path);\n    let depth = 1;\n    while (parent !== state.root && depth < 2) {\n        const resolvedPath = state.symlinks.get(parent);\n        const isSameRoot = !!resolvedPath &&\n            (resolvedPath === resolved ||\n                resolvedPath.startsWith(resolved) ||\n                resolved.startsWith(resolvedPath));\n        if (isSameRoot)\n            depth++;\n        else\n            parent = (0, path_1.dirname)(parent);\n    }\n    state.symlinks.set(path, resolved);\n    return depth > 1;\n}\nfunction isRecursiveUsingRealPaths(resolved, state) {\n    return state.visited.includes(resolved + state.options.pathSeparator);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = void 0;\nconst onlyCountsSync = (state) => {\n    return state.counts;\n};\nconst groupsSync = (state) => {\n    return state.groups;\n};\nconst defaultSync = (state) => {\n    return state.paths;\n};\nconst limitFilesSync = (state) => {\n    return state.paths.slice(0, state.options.maxFiles);\n};\nconst onlyCountsAsync = (state, error, callback) => {\n    report(error, callback, state.counts, state.options.suppressErrors);\n    return null;\n};\nconst defaultAsync = (state, error, callback) => {\n    report(error, callback, state.paths, state.options.suppressErrors);\n    return null;\n};\nconst limitFilesAsync = (state, error, callback) => {\n    report(error, callback, state.paths.slice(0, state.options.maxFiles), state.options.suppressErrors);\n    return null;\n};\nconst groupsAsync = (state, error, callback) => {\n    report(error, callback, state.groups, state.options.suppressErrors);\n    return null;\n};\nfunction report(error, callback, output, suppressErrors) {\n    if (error && !suppressErrors)\n        callback(error, output);\n    else\n        callback(null, output);\n}\nfunction build(options, isSynchronous) {\n    const { onlyCounts, group, maxFiles } = options;\n    if (onlyCounts)\n        return isSynchronous\n            ? onlyCountsSync\n            : onlyCountsAsync;\n    else if (group)\n        return isSynchronous\n            ? groupsSync\n            : groupsAsync;\n    else if (maxFiles)\n        return isSynchronous\n            ? limitFilesSync\n            : limitFilesAsync;\n    else\n        return isSynchronous\n            ? defaultSync\n            : defaultAsync;\n}\nexports.build = build;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = void 0;\nconst fs_1 = __importDefault(require(\"fs\"));\nconst readdirOpts = { withFileTypes: true };\nconst walkAsync = (state, crawlPath, directoryPath, currentDepth, callback) => {\n    if (currentDepth < 0)\n        return state.queue.dequeue(null, state);\n    state.visited.push(crawlPath);\n    state.counts.directories++;\n    state.queue.enqueue();\n    // Perf: Node >= 10 introduced withFileTypes that helps us\n    // skip an extra fs.stat call.\n    fs_1.default.readdir(crawlPath || \".\", readdirOpts, (error, entries = []) => {\n        callback(entries, directoryPath, currentDepth);\n        state.queue.dequeue(state.options.suppressErrors ? null : error, state);\n    });\n};\nconst walkSync = (state, crawlPath, directoryPath, currentDepth, callback) => {\n    if (currentDepth < 0)\n        return;\n    state.visited.push(crawlPath);\n    state.counts.directories++;\n    let entries = [];\n    try {\n        entries = fs_1.default.readdirSync(crawlPath || \".\", readdirOpts);\n    }\n    catch (e) {\n        if (!state.options.suppressErrors)\n            throw e;\n    }\n    callback(entries, directoryPath, currentDepth);\n};\nfunction build(isSynchronous) {\n    return isSynchronous ? walkSync : walkAsync;\n}\nexports.build = build;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Queue = void 0;\n/**\n * This is a custom stateless queue to track concurrent async fs calls.\n * It increments a counter whenever a call is queued and decrements it\n * as soon as it completes. When the counter hits 0, it calls onQueueEmpty.\n */\nclass Queue {\n    onQueueEmpty;\n    count = 0;\n    constructor(onQueueEmpty) {\n        this.onQueueEmpty = onQueueEmpty;\n    }\n    enqueue() {\n        this.count++;\n    }\n    dequeue(error, output) {\n        if (--this.count <= 0 || error)\n            this.onQueueEmpty(error, output);\n    }\n}\nexports.Queue = Queue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Counter = void 0;\nclass Counter {\n    _files = 0;\n    _directories = 0;\n    set files(num) {\n        this._files = num;\n    }\n    get files() {\n        return this._files;\n    }\n    set directories(num) {\n        this._directories = num;\n    }\n    get directories() {\n        return this._directories;\n    }\n    /**\n     * @deprecated use `directories` instead\n     */\n    /* c8 ignore next 3 */\n    get dirs() {\n        return this._directories;\n    }\n}\nexports.Counter = Counter;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Walker = void 0;\nconst path_1 = require(\"path\");\nconst utils_1 = require(\"../utils\");\nconst joinPath = __importStar(require(\"./functions/join-path\"));\nconst pushDirectory = __importStar(require(\"./functions/push-directory\"));\nconst pushFile = __importStar(require(\"./functions/push-file\"));\nconst getArray = __importStar(require(\"./functions/get-array\"));\nconst groupFiles = __importStar(require(\"./functions/group-files\"));\nconst resolveSymlink = __importStar(require(\"./functions/resolve-symlink\"));\nconst invokeCallback = __importStar(require(\"./functions/invoke-callback\"));\nconst walkDirectory = __importStar(require(\"./functions/walk-directory\"));\nconst queue_1 = require(\"./queue\");\nconst counter_1 = require(\"./counter\");\nclass Walker {\n    root;\n    isSynchronous;\n    state;\n    joinPath;\n    pushDirectory;\n    pushFile;\n    getArray;\n    groupFiles;\n    resolveSymlink;\n    walkDirectory;\n    callbackInvoker;\n    constructor(root, options, callback) {\n        this.isSynchronous = !callback;\n        this.callbackInvoker = invokeCallback.build(options, this.isSynchronous);\n        this.root = (0, utils_1.normalizePath)(root, options);\n        this.state = {\n            root: (0, utils_1.isRootDirectory)(this.root) ? this.root : this.root.slice(0, -1),\n            // Perf: we explicitly tell the compiler to optimize for String arrays\n            paths: [\"\"].slice(0, 0),\n            groups: [],\n            counts: new counter_1.Counter(),\n            options,\n            queue: new queue_1.Queue((error, state) => this.callbackInvoker(state, error, callback)),\n            symlinks: new Map(),\n            visited: [\"\"].slice(0, 0),\n        };\n        /*\n         * Perf: We conditionally change functions according to options. This gives a slight\n         * performance boost. Since these functions are so small, they are automatically inlined\n         * by the javascript engine so there's no function call overhead (in most cases).\n         */\n        this.joinPath = joinPath.build(this.root, options);\n        this.pushDirectory = pushDirectory.build(this.root, options);\n        this.pushFile = pushFile.build(options);\n        this.getArray = getArray.build(options);\n        this.groupFiles = groupFiles.build(options);\n        this.resolveSymlink = resolveSymlink.build(options, this.isSynchronous);\n        this.walkDirectory = walkDirectory.build(this.isSynchronous);\n    }\n    start() {\n        this.walkDirectory(this.state, this.root, this.root, this.state.options.maxDepth, this.walk);\n        return this.isSynchronous ? this.callbackInvoker(this.state, null) : null;\n    }\n    walk = (entries, directoryPath, depth) => {\n        const { paths, options: { filters, resolveSymlinks, excludeSymlinks, exclude, maxFiles, signal, useRealPaths, pathSeparator, }, } = this.state;\n        if ((signal && signal.aborted) || (maxFiles && paths.length > maxFiles))\n            return;\n        this.pushDirectory(directoryPath, paths, filters);\n        const files = this.getArray(this.state.paths);\n        for (let i = 0; i < entries.length; ++i) {\n            const entry = entries[i];\n            if (entry.isFile() ||\n                (entry.isSymbolicLink() && !resolveSymlinks && !excludeSymlinks)) {\n                const filename = this.joinPath(entry.name, directoryPath);\n                this.pushFile(filename, files, this.state.counts, filters);\n            }\n            else if (entry.isDirectory()) {\n                let path = joinPath.joinDirectoryPath(entry.name, directoryPath, this.state.options.pathSeparator);\n                if (exclude && exclude(entry.name, path))\n                    continue;\n                this.walkDirectory(this.state, path, path, depth - 1, this.walk);\n            }\n            else if (entry.isSymbolicLink() && this.resolveSymlink) {\n                let path = joinPath.joinPathWithBasePath(entry.name, directoryPath);\n                this.resolveSymlink(path, this.state, (stat, resolvedPath) => {\n                    if (stat.isDirectory()) {\n                        resolvedPath = (0, utils_1.normalizePath)(resolvedPath, this.state.options);\n                        if (exclude &&\n                            exclude(entry.name, useRealPaths ? resolvedPath : path + pathSeparator))\n                            return;\n                        this.walkDirectory(this.state, resolvedPath, useRealPaths ? resolvedPath : path + pathSeparator, depth - 1, this.walk);\n                    }\n                    else {\n                        resolvedPath = useRealPaths ? resolvedPath : path;\n                        const filename = (0, path_1.basename)(resolvedPath);\n                        const directoryPath = (0, utils_1.normalizePath)((0, path_1.dirname)(resolvedPath), this.state.options);\n                        resolvedPath = this.joinPath(filename, directoryPath);\n                        this.pushFile(resolvedPath, files, this.state.counts, filters);\n                    }\n                });\n            }\n        }\n        this.groupFiles(this.state.groups, directoryPath, files);\n    };\n}\nexports.Walker = Walker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callback = exports.promise = void 0;\nconst walker_1 = require(\"./walker\");\nfunction promise(root, options) {\n    return new Promise((resolve, reject) => {\n        callback(root, options, (err, output) => {\n            if (err)\n                return reject(err);\n            resolve(output);\n        });\n    });\n}\nexports.promise = promise;\nfunction callback(root, options, callback) {\n    let walker = new walker_1.Walker(root, options, callback);\n    walker.start();\n}\nexports.callback = callback;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sync = void 0;\nconst walker_1 = require(\"./walker\");\nfunction sync(root, options) {\n    const walker = new walker_1.Walker(root, options);\n    return walker.start();\n}\nexports.sync = sync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.APIBuilder = void 0;\nconst async_1 = require(\"../api/async\");\nconst sync_1 = require(\"../api/sync\");\nclass APIBuilder {\n    root;\n    options;\n    constructor(root, options) {\n        this.root = root;\n        this.options = options;\n    }\n    withPromise() {\n        return (0, async_1.promise)(this.root, this.options);\n    }\n    withCallback(cb) {\n        (0, async_1.callback)(this.root, this.options, cb);\n    }\n    sync() {\n        return (0, sync_1.sync)(this.root, this.options);\n    }\n}\nexports.APIBuilder = APIBuilder;\n","'use strict';\n\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\nconst SEP = '/';\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR,\n  SEP\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`,\n  SEP: '\\\\'\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","/*global navigator*/\n'use strict';\n\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.isWindows = () => {\n  if (typeof navigator !== 'undefined' && navigator.platform) {\n    const platform = navigator.platform.toLowerCase();\n    return platform === 'win32' || platform === 'windows';\n  }\n\n  if (typeof process !== 'undefined' && process.platform) {\n    return process.platform === 'win32';\n  }\n\n  return false;\n};\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n\nexports.basename = (path, { windows } = {}) => {\n  const segs = path.split(windows ? /[\\\\/]/ : '/');\n  const last = segs[segs.length - 1];\n\n  if (last === '') {\n    return segs[segs.length - 2];\n  }\n\n  return last;\n};\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(opts.windows);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.output = (prev.output || prev.value) + tok.value;\n      prev.value += tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(opts.windows);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = opts.windows;\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(utils.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nconst pico = require('./lib/picomatch');\nconst utils = require('./lib/utils');\n\nfunction picomatch(glob, options, returnState = false) {\n  // default to os.platform()\n  if (options && (options.windows === null || options.windows === undefined)) {\n    // don't mutate the original options object\n    options = { ...options, windows: utils.isWindows() };\n  }\n\n  return pico(glob, options, returnState);\n}\n\nObject.assign(picomatch, pico);\nmodule.exports = picomatch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Builder = void 0;\nconst path_1 = require(\"path\");\nconst api_builder_1 = require(\"./api-builder\");\nvar pm = null;\n/* c8 ignore next 6 */\ntry {\n    require.resolve(\"picomatch\");\n    pm = require(\"picomatch\");\n}\ncatch (_e) {\n    // do nothing\n}\nclass Builder {\n    globCache = {};\n    options = {\n        maxDepth: Infinity,\n        suppressErrors: true,\n        pathSeparator: path_1.sep,\n        filters: [],\n    };\n    globFunction;\n    constructor(options) {\n        this.options = { ...this.options, ...options };\n        this.globFunction = this.options.globFunction;\n    }\n    group() {\n        this.options.group = true;\n        return this;\n    }\n    withPathSeparator(separator) {\n        this.options.pathSeparator = separator;\n        return this;\n    }\n    withBasePath() {\n        this.options.includeBasePath = true;\n        return this;\n    }\n    withRelativePaths() {\n        this.options.relativePaths = true;\n        return this;\n    }\n    withDirs() {\n        this.options.includeDirs = true;\n        return this;\n    }\n    withMaxDepth(depth) {\n        this.options.maxDepth = depth;\n        return this;\n    }\n    withMaxFiles(limit) {\n        this.options.maxFiles = limit;\n        return this;\n    }\n    withFullPaths() {\n        this.options.resolvePaths = true;\n        this.options.includeBasePath = true;\n        return this;\n    }\n    withErrors() {\n        this.options.suppressErrors = false;\n        return this;\n    }\n    withSymlinks({ resolvePaths = true } = {}) {\n        this.options.resolveSymlinks = true;\n        this.options.useRealPaths = resolvePaths;\n        return this.withFullPaths();\n    }\n    withAbortSignal(signal) {\n        this.options.signal = signal;\n        return this;\n    }\n    normalize() {\n        this.options.normalizePath = true;\n        return this;\n    }\n    filter(predicate) {\n        this.options.filters.push(predicate);\n        return this;\n    }\n    onlyDirs() {\n        this.options.excludeFiles = true;\n        this.options.includeDirs = true;\n        return this;\n    }\n    exclude(predicate) {\n        this.options.exclude = predicate;\n        return this;\n    }\n    onlyCounts() {\n        this.options.onlyCounts = true;\n        return this;\n    }\n    crawl(root) {\n        return new api_builder_1.APIBuilder(root || \".\", this.options);\n    }\n    withGlobFunction(fn) {\n        // cast this since we don't have the new type params yet\n        this.globFunction = fn;\n        return this;\n    }\n    /**\n     * @deprecated Pass options using the constructor instead:\n     * ```ts\n     * new fdir(options).crawl(\"/path/to/root\");\n     * ```\n     * This method will be removed in v7.0\n     */\n    /* c8 ignore next 4 */\n    crawlWithOptions(root, options) {\n        this.options = { ...this.options, ...options };\n        return new api_builder_1.APIBuilder(root || \".\", this.options);\n    }\n    glob(...patterns) {\n        if (this.globFunction) {\n            return this.globWithOptions(patterns);\n        }\n        return this.globWithOptions(patterns, ...[{ dot: true }]);\n    }\n    globWithOptions(patterns, ...options) {\n        const globFn = (this.globFunction || pm);\n        /* c8 ignore next 5 */\n        if (!globFn) {\n            throw new Error(\"Please specify a glob function to use glob matching.\");\n        }\n        var isMatch = this.globCache[patterns.join(\"\\0\")];\n        if (!isMatch) {\n            isMatch = globFn(patterns, ...options);\n            this.globCache[patterns.join(\"\\0\")] = isMatch;\n        }\n        this.options.filters.push((path) => isMatch(path));\n        return this;\n    }\n}\nexports.Builder = Builder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fdir = void 0;\nconst builder_1 = require(\"./builder\");\nObject.defineProperty(exports, \"fdir\", { enumerable: true, get: function () { return builder_1.Builder; } });\n__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  convertPathToPattern: () => convertPathToPattern,\n  escapePath: () => escapePath,\n  glob: () => glob,\n  globSync: () => globSync,\n  isDynamicPattern: () => isDynamicPattern\n});\nmodule.exports = __toCommonJS(index_exports);\nvar import_node_path = __toESM(require(\"path\"));\nvar import_fdir = require(\"fdir\");\nvar import_picomatch2 = __toESM(require(\"picomatch\"));\n\n// src/utils.ts\nvar import_picomatch = __toESM(require(\"picomatch\"));\nvar ONLY_PARENT_DIRECTORIES = /^(\\/?\\.\\.)+$/;\nfunction getPartialMatcher(patterns, options) {\n  const patternsCount = patterns.length;\n  const patternsParts = Array(patternsCount);\n  const regexes = Array(patternsCount);\n  for (let i = 0; i < patternsCount; i++) {\n    const parts = splitPattern(patterns[i]);\n    patternsParts[i] = parts;\n    const partsCount = parts.length;\n    const partRegexes = Array(partsCount);\n    for (let j = 0; j < partsCount; j++) {\n      partRegexes[j] = import_picomatch.default.makeRe(parts[j], options);\n    }\n    regexes[i] = partRegexes;\n  }\n  return (input) => {\n    const inputParts = input.split(\"/\");\n    if (inputParts[0] === \"..\" && ONLY_PARENT_DIRECTORIES.test(input)) {\n      return true;\n    }\n    for (let i = 0; i < patterns.length; i++) {\n      const patternParts = patternsParts[i];\n      const regex = regexes[i];\n      const inputPatternCount = inputParts.length;\n      const minParts = Math.min(inputPatternCount, patternParts.length);\n      let j = 0;\n      while (j < minParts) {\n        const part = patternParts[j];\n        if (part.includes(\"/\")) {\n          return true;\n        }\n        const match = regex[j].test(inputParts[j]);\n        if (!match) {\n          break;\n        }\n        if (part === \"**\") {\n          return true;\n        }\n        j++;\n      }\n      if (j === inputPatternCount) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\nvar splitPatternOptions = { parts: true };\nfunction splitPattern(path2) {\n  var _a;\n  const result = import_picomatch.default.scan(path2, splitPatternOptions);\n  return ((_a = result.parts) == null ? void 0 : _a.length) ? result.parts : [path2];\n}\nvar isWin = process.platform === \"win32\";\nvar ESCAPED_WIN32_BACKSLASHES = /\\\\(?![()[\\]{}!+@])/g;\nfunction convertPosixPathToPattern(path2) {\n  return escapePosixPath(path2);\n}\nfunction convertWin32PathToPattern(path2) {\n  return escapeWin32Path(path2).replace(ESCAPED_WIN32_BACKSLASHES, \"/\");\n}\nvar convertPathToPattern = isWin ? convertWin32PathToPattern : convertPosixPathToPattern;\nvar POSIX_UNESCAPED_GLOB_SYMBOLS = /(?<!\\\\)([()[\\]{}*?|]|^!|[!+@](?=\\()|\\\\(?![()[\\]{}!*+?@|]))/g;\nvar WIN32_UNESCAPED_GLOB_SYMBOLS = /(?<!\\\\)([()[\\]{}]|^!|[!+@](?=\\())/g;\nvar escapePosixPath = (path2) => path2.replace(POSIX_UNESCAPED_GLOB_SYMBOLS, \"\\\\$&\");\nvar escapeWin32Path = (path2) => path2.replace(WIN32_UNESCAPED_GLOB_SYMBOLS, \"\\\\$&\");\nvar escapePath = isWin ? escapeWin32Path : escapePosixPath;\nfunction isDynamicPattern(pattern, options) {\n  if ((options == null ? void 0 : options.caseSensitiveMatch) === false) {\n    return true;\n  }\n  const scan = import_picomatch.default.scan(pattern);\n  return scan.isGlob || scan.negated;\n}\nfunction log(...tasks) {\n  console.log(`[tinyglobby ${(/* @__PURE__ */ new Date()).toLocaleTimeString(\"es\")}]`, ...tasks);\n}\n\n// src/index.ts\nvar PARENT_DIRECTORY = /^(\\/?\\.\\.)+/;\nvar ESCAPING_BACKSLASHES = /\\\\(?=[()[\\]{}!*+?@|])/g;\nvar BACKSLASHES = /\\\\/g;\nfunction normalizePattern(pattern, expandDirectories, cwd, props, isIgnore) {\n  var _a;\n  let result = pattern;\n  if (pattern.endsWith(\"/\")) {\n    result = pattern.slice(0, -1);\n  }\n  if (!result.endsWith(\"*\") && expandDirectories) {\n    result += \"/**\";\n  }\n  if (import_node_path.default.isAbsolute(result.replace(ESCAPING_BACKSLASHES, \"\"))) {\n    result = import_node_path.posix.relative(escapePath(cwd), result);\n  } else {\n    result = import_node_path.posix.normalize(result);\n  }\n  const parentDirectoryMatch = PARENT_DIRECTORY.exec(result);\n  if (parentDirectoryMatch == null ? void 0 : parentDirectoryMatch[0]) {\n    const potentialRoot = import_node_path.posix.join(cwd, parentDirectoryMatch[0]);\n    if (props.root.length > potentialRoot.length) {\n      props.root = potentialRoot;\n      props.depthOffset = -(parentDirectoryMatch[0].length + 1) / 3;\n    }\n  } else if (!isIgnore && props.depthOffset >= 0) {\n    const parts = splitPattern(result);\n    (_a = props.commonPath) != null ? _a : props.commonPath = parts;\n    const newCommonPath = [];\n    const length = Math.min(props.commonPath.length, parts.length);\n    for (let i = 0; i < length; i++) {\n      const part = parts[i];\n      if (part === \"**\" && !parts[i + 1]) {\n        newCommonPath.pop();\n        break;\n      }\n      if (part !== props.commonPath[i] || isDynamicPattern(part) || i === parts.length - 1) {\n        break;\n      }\n      newCommonPath.push(part);\n    }\n    props.depthOffset = newCommonPath.length;\n    props.commonPath = newCommonPath;\n    props.root = newCommonPath.length > 0 ? import_node_path.default.posix.join(cwd, ...newCommonPath) : cwd;\n  }\n  return result;\n}\nfunction processPatterns({ patterns, ignore = [], expandDirectories = true }, cwd, props) {\n  if (typeof patterns === \"string\") {\n    patterns = [patterns];\n  } else if (!patterns) {\n    patterns = [\"**/*\"];\n  }\n  if (typeof ignore === \"string\") {\n    ignore = [ignore];\n  }\n  const matchPatterns = [];\n  const ignorePatterns = [];\n  for (const pattern of ignore) {\n    if (!pattern) {\n      continue;\n    }\n    if (pattern[0] !== \"!\" || pattern[1] === \"(\") {\n      ignorePatterns.push(normalizePattern(pattern, expandDirectories, cwd, props, true));\n    }\n  }\n  for (const pattern of patterns) {\n    if (!pattern) {\n      continue;\n    }\n    if (pattern[0] !== \"!\" || pattern[1] === \"(\") {\n      matchPatterns.push(normalizePattern(pattern, expandDirectories, cwd, props, false));\n    } else if (pattern[1] !== \"!\" || pattern[2] === \"(\") {\n      ignorePatterns.push(normalizePattern(pattern.slice(1), expandDirectories, cwd, props, true));\n    }\n  }\n  return { match: matchPatterns, ignore: ignorePatterns };\n}\nfunction getRelativePath(path2, cwd, root) {\n  return import_node_path.posix.relative(cwd, `${root}/${path2}`) || \".\";\n}\nfunction processPath(path2, cwd, root, isDirectory, absolute) {\n  const relativePath = absolute ? path2.slice(root === \"/\" ? 1 : root.length + 1) || \".\" : path2;\n  if (root === cwd) {\n    return isDirectory && relativePath !== \".\" ? relativePath.slice(0, -1) : relativePath;\n  }\n  return getRelativePath(relativePath, cwd, root);\n}\nfunction formatPaths(paths, cwd, root) {\n  for (let i = paths.length - 1; i >= 0; i--) {\n    const path2 = paths[i];\n    paths[i] = getRelativePath(path2, cwd, root) + (!path2 || path2.endsWith(\"/\") ? \"/\" : \"\");\n  }\n  return paths;\n}\nfunction crawl(options, cwd, sync) {\n  if (process.env.TINYGLOBBY_DEBUG) {\n    options.debug = true;\n  }\n  if (options.debug) {\n    log(\"globbing with options:\", options, \"cwd:\", cwd);\n  }\n  if (Array.isArray(options.patterns) && options.patterns.length === 0) {\n    return sync ? [] : Promise.resolve([]);\n  }\n  const props = {\n    root: cwd,\n    commonPath: null,\n    depthOffset: 0\n  };\n  const processed = processPatterns(options, cwd, props);\n  const nocase = options.caseSensitiveMatch === false;\n  if (options.debug) {\n    log(\"internal processing patterns:\", processed);\n  }\n  const matcher = (0, import_picomatch2.default)(processed.match, {\n    dot: options.dot,\n    nocase,\n    ignore: processed.ignore\n  });\n  const ignore = (0, import_picomatch2.default)(processed.ignore, {\n    dot: options.dot,\n    nocase\n  });\n  const partialMatcher = getPartialMatcher(processed.match, {\n    dot: options.dot,\n    nocase\n  });\n  const fdirOptions = {\n    // use relative paths in the matcher\n    filters: [\n      options.debug ? (p, isDirectory) => {\n        const path2 = processPath(p, cwd, props.root, isDirectory, options.absolute);\n        const matches = matcher(path2);\n        if (matches) {\n          log(`matched ${path2}`);\n        }\n        return matches;\n      } : (p, isDirectory) => matcher(processPath(p, cwd, props.root, isDirectory, options.absolute))\n    ],\n    exclude: options.debug ? (_, p) => {\n      const relativePath = processPath(p, cwd, props.root, true, true);\n      const skipped = relativePath !== \".\" && !partialMatcher(relativePath) || ignore(relativePath);\n      if (skipped) {\n        log(`skipped ${p}`);\n      } else {\n        log(`crawling ${p}`);\n      }\n      return skipped;\n    } : (_, p) => {\n      const relativePath = processPath(p, cwd, props.root, true, true);\n      return relativePath !== \".\" && !partialMatcher(relativePath) || ignore(relativePath);\n    },\n    pathSeparator: \"/\",\n    relativePaths: true,\n    resolveSymlinks: true\n  };\n  if (options.deep) {\n    fdirOptions.maxDepth = Math.round(options.deep - props.depthOffset);\n  }\n  if (options.absolute) {\n    fdirOptions.relativePaths = false;\n    fdirOptions.resolvePaths = true;\n    fdirOptions.includeBasePath = true;\n  }\n  if (options.followSymbolicLinks === false) {\n    fdirOptions.resolveSymlinks = false;\n    fdirOptions.excludeSymlinks = true;\n  }\n  if (options.onlyDirectories) {\n    fdirOptions.excludeFiles = true;\n    fdirOptions.includeDirs = true;\n  } else if (options.onlyFiles === false) {\n    fdirOptions.includeDirs = true;\n  }\n  props.root = props.root.replace(BACKSLASHES, \"\");\n  const root = props.root;\n  if (options.debug) {\n    log(\"internal properties:\", props);\n  }\n  const api = new import_fdir.fdir(fdirOptions).crawl(root);\n  if (cwd === root || options.absolute) {\n    return sync ? api.sync() : api.withPromise();\n  }\n  return sync ? formatPaths(api.sync(), cwd, root) : api.withPromise().then((paths) => formatPaths(paths, cwd, root));\n}\nasync function glob(patternsOrOptions, options) {\n  if (patternsOrOptions && (options == null ? void 0 : options.patterns)) {\n    throw new Error(\"Cannot pass patterns as both an argument and an option\");\n  }\n  const opts = Array.isArray(patternsOrOptions) || typeof patternsOrOptions === \"string\" ? { ...options, patterns: patternsOrOptions } : patternsOrOptions;\n  const cwd = opts.cwd ? import_node_path.default.resolve(opts.cwd).replace(BACKSLASHES, \"/\") : process.cwd().replace(BACKSLASHES, \"/\");\n  return crawl(opts, cwd, false);\n}\nfunction globSync(patternsOrOptions, options) {\n  if (patternsOrOptions && (options == null ? void 0 : options.patterns)) {\n    throw new Error(\"Cannot pass patterns as both an argument and an option\");\n  }\n  const opts = Array.isArray(patternsOrOptions) || typeof patternsOrOptions === \"string\" ? { ...options, patterns: patternsOrOptions } : patternsOrOptions;\n  const cwd = opts.cwd ? import_node_path.default.resolve(opts.cwd).replace(BACKSLASHES, \"/\") : process.cwd().replace(BACKSLASHES, \"/\");\n  return crawl(opts, cwd, true);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  convertPathToPattern,\n  escapePath,\n  glob,\n  globSync,\n  isDynamicPattern\n});\n"],"names":["Object","defineProperty","utils","value","normalizePath","convertSlashes","cleanPath","path_1","require$$0","path","normalized","normalize","length","sep","substring","SLASHES_REGEX","separator","replace","isRootDirectory","test","options","resolvePaths","pathSeparator","pathNeedsCleaning","process","platform","includes","startsWith","resolve","needsSeperator","joinPath_1","build","joinDirectoryPath","joinPathWithBasePath","utils_1","require$$1","filename","directoryPath","joinPathWithRelativePath","root","sameRoot","relative","joinPath","relativePaths","includeBasePath","pushDirectory_1","pushDirectoryWithRelativePath","paths","push","pushDirectoryFilterWithRelativePath","filters","relativePath","every","filter","pushDirectory","pushDirectoryFilter","empty","includeDirs","pushFile_1","pushFileFilterAndCount","_paths","counts","files","pushFileFilter","_counts","pushFileCount","_filename","_filters","pushFile","excludeFiles","onlyCounts","getArray_1","getArray","getArrayGroup","slice","group","groupFiles_1","groupFiles","groups","directory","dir","__importDefault","mod","__esModule","resolveSymlink","fs_1","resolveSymlinksAsync","state","callback","queue","suppressErrors","enqueue","default","realpath","error","resolvedPath","dequeue","stat","isDirectory","isRecursive","resolveSymlinks","realpathSync","statSync","e","isSynchronous","excludeSymlinks","resolved","useRealPaths","isRecursiveUsingRealPaths","parent","dirname","depth","symlinks","get","isSameRoot","set","visited","invokeCallback","onlyCountsSync","groupsSync","defaultSync","limitFilesSync","maxFiles","onlyCountsAsync","report","defaultAsync","limitFilesAsync","groupsAsync","output","walkDirectory","readdirOpts","withFileTypes","walkAsync","crawlPath","currentDepth","directories","readdir","entries","walkSync","readdirSync","Queue","onQueueEmpty","count","constructor","counter","Counter","_files","_directories","num","dirs","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","__setModuleDefault","v","__importStar","result","prototype","hasOwnProperty","call","walker","Walker","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","queue_1","require$$10","counter_1","require$$11","callbackInvoker","Map","start","maxDepth","walk","exclude","signal","aborted","i","entry","isFile","isSymbolicLink","name","basename","async","promise","walker_1","Promise","reject","err","sync_1","sync","apiBuilder","APIBuilder","async_1","withPromise","withCallback","cb","WIN_SLASH","WIN_NO_SLASH","DOT_LITERAL","PLUS_LITERAL","QMARK_LITERAL","SLASH_LITERAL","ONE_CHAR","QMARK","END_ANCHOR","START_ANCHOR","DOTS_SLASH","NO_DOT","NO_DOTS","NO_DOT_SLASH","NO_DOTS_SLASH","QMARK_NO_DOT","STAR","SEP","POSIX_CHARS","WINDOWS_CHARS","POSIX_REGEX_SOURCE","alnum","alpha","ascii","blank","cntrl","digit","graph","lower","print","punct","space","upper","word","xdigit","constants","MAX_LENGTH","REGEX_BACKSLASH","REGEX_NON_SPECIAL_CHARS","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_BACKREF","REGEX_SPECIAL_CHARS_GLOBAL","REGEX_REMOVE_BACKSLASH","REPLACEMENTS","CHAR_0","CHAR_9","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_LEFT_PARENTHESES","CHAR_RIGHT_PARENTHESES","CHAR_ASTERISK","CHAR_AMPERSAND","CHAR_AT","CHAR_BACKWARD_SLASH","CHAR_CARRIAGE_RETURN","CHAR_CIRCUMFLEX_ACCENT","CHAR_COLON","CHAR_COMMA","CHAR_DOT","CHAR_DOUBLE_QUOTE","CHAR_EQUAL","CHAR_EXCLAMATION_MARK","CHAR_FORM_FEED","CHAR_FORWARD_SLASH","CHAR_GRAVE_ACCENT","CHAR_HASH","CHAR_HYPHEN_MINUS","CHAR_LEFT_ANGLE_BRACKET","CHAR_LEFT_CURLY_BRACE","CHAR_LEFT_SQUARE_BRACKET","CHAR_LINE_FEED","CHAR_NO_BREAK_SPACE","CHAR_PERCENT","CHAR_PLUS","CHAR_QUESTION_MARK","CHAR_RIGHT_ANGLE_BRACKET","CHAR_RIGHT_CURLY_BRACE","CHAR_RIGHT_SQUARE_BRACKET","CHAR_SEMICOLON","CHAR_SINGLE_QUOTE","CHAR_SPACE","CHAR_TAB","CHAR_UNDERSCORE","CHAR_VERTICAL_LINE","CHAR_ZERO_WIDTH_NOBREAK_SPACE","extglobChars","chars","type","open","close","globChars","win32","exports","isObject","val","Array","isArray","hasRegexChars","str","isRegexChar","escapeRegex","toPosixSlashes","isWindows","navigator","toLowerCase","removeBackslashes","match","escapeLast","input","char","lastIdx","idx","lastIndexOf","removePrefix","prefix","wrapOutput","prepend","contains","append","negated","windows","segs","split","last","isPathSeparator","code","token","isPrefix","isGlobstar","Infinity","scan","opts","scanToEnd","parts","slashes","tokens","index","lastIndex","isBrace","isBracket","isGlob","isExtglob","braceEscaped","backslashes","negatedExtglob","finished","braces","prev","eos","peek","charCodeAt","advance","next","noext","isExtglobChar","nonegate","noparen","base","glob","unescape","prevIndex","n","scan_1","expandRange","args","sort","join","RegExp","ex","map","syntaxError","parse","TypeError","max","maxLength","Math","min","len","SyntaxError","bos","capture","PLATFORM_CHARS","EXTGLOB_CHARS","globstar","dot","nodot","qmarkNoDot","star","bash","noextglob","consumed","backtrack","brackets","parens","quotes","extglobs","stack","remaining","consume","negate","increment","decrement","pop","tok","extglob","inner","extglobOpen","conditions","extglobClose","rest","extglobStar","expression","fastpaths","esc","first","repeat","exec","posix","pre","indexOf","keepQuotes","strictBrackets","nobracket","prevValue","literalBrackets","escaped","nobrace","outputIndex","tokensIndex","brace","dots","arr","range","unshift","comma","out","toks","t","isGroup","regex","noglobstar","prior","before","isStart","afterStar","after","strictSlashes","end","suffix","slashDot","source","parse_1","picomatch","returnState","fns","arrayMatcher","isMatch","isState","compileRe","makeRe","isIgnored","ignore","ignoreOpts","onMatch","onResult","matcher","returnObject","onIgnore","format","matchBase","Boolean","patterns","pattern","p","returnOutput","toRegex","parsed","flags","nocase","debug","picomatch_1","pico","assign","builder","Builder","api_builder_1","pm","require","_e","globCache","globFunction","withPathSeparator","withBasePath","withRelativePaths","withDirs","withMaxDepth","withMaxFiles","limit","withFullPaths","withErrors","withSymlinks","withAbortSignal","predicate","onlyDirs","crawl","withGlobFunction","fn","crawlWithOptions","globWithOptions","globFn","Error","types","__exportStar","fdir","builder_1","__create","__defProp","__getOwnPropDesc","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","__export","target","all","__copyProps","to","from","except","key","__toESM","isNodeMode","__toCommonJS","index_exports","convertPathToPattern","escapePath","globSync","isDynamicPattern","dist","import_node_path","import_fdir","import_picomatch2","import_picomatch","ONLY_PARENT_DIRECTORIES","getPartialMatcher","patternsCount","patternsParts","regexes","splitPattern","partsCount","partRegexes","j","inputParts","patternParts","inputPatternCount","minParts","part","splitPatternOptions","path2","_a","isWin","ESCAPED_WIN32_BACKSLASHES","convertPosixPathToPattern","escapePosixPath","convertWin32PathToPattern","escapeWin32Path","POSIX_UNESCAPED_GLOB_SYMBOLS","WIN32_UNESCAPED_GLOB_SYMBOLS","caseSensitiveMatch","log","tasks","console","Date","toLocaleTimeString","PARENT_DIRECTORY","ESCAPING_BACKSLASHES","BACKSLASHES","normalizePattern","expandDirectories","cwd","props","isIgnore","endsWith","isAbsolute","parentDirectoryMatch","potentialRoot","depthOffset","commonPath","newCommonPath","processPatterns","matchPatterns","ignorePatterns","getRelativePath","processPath","absolute","formatPaths","env","TINYGLOBBY_DEBUG","processed","partialMatcher","fdirOptions","matches","_","skipped","deep","round","followSymbolicLinks","onlyDirectories","onlyFiles","api","then","patternsOrOptions"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACAA,EAAAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AACxCD,EAAAA,OAAA,CAAAE,aAAA,GAAGF,uBAAuB,GAAGA,OAAA,CAAAG,cAAsB,GAAGH,OAAiB,CAAAI,SAAA,GAAG,MAAM;EACrG,MAAMC,MAAM,GAAGC,UAAe;EAC9B,SAASF,SAASA,CAACG,IAAI,EAAE;IACrB,IAAIC,UAAU,GAAG,IAAIH,MAAM,CAACI,SAAS,EAAEF,IAAI,CAAC;AAChD;AACA;AACI,IAAA,IAAIC,UAAU,CAACE,MAAM,GAAG,CAAC,IAAIF,UAAU,CAACA,UAAU,CAACE,MAAM,GAAG,CAAC,CAAC,KAAKL,MAAM,CAACM,GAAG,EACzEH,UAAU,GAAGA,UAAU,CAACI,SAAS,CAAC,CAAC,EAAEJ,UAAU,CAACE,MAAM,GAAG,CAAC,CAAC;AAC/D,IAAA,OAAOF,UAAU;AACrB;EACAR,OAAA,CAAAI,SAAiB,GAAGA,SAAS;EAC7B,MAAMS,aAAa,GAAG,QAAQ;AAC9B,EAAA,SAASV,cAAcA,CAACI,IAAI,EAAEO,SAAS,EAAE;AACrC,IAAA,OAAOP,IAAI,CAACQ,OAAO,CAACF,aAAa,EAAEC,SAAS,CAAC;AACjD;EACAd,OAAA,CAAAG,cAAsB,GAAGA,cAAc;EACvC,SAASa,eAAeA,CAACT,IAAI,EAAE;IAC3B,OAAOA,IAAI,KAAK,GAAG,IAAI,aAAa,CAACU,IAAI,CAACV,IAAI,CAAC;AACnD;EACAP,OAAA,CAAAgB,eAAuB,GAAGA,eAAe;AACzC,EAAA,SAASd,aAAaA,CAACK,IAAI,EAAEW,OAAO,EAAE;IAClC,MAAM;MAAEC,YAAY;MAAEjB,aAAa;AAAEkB,MAAAA;AAAe,KAAA,GAAGF,OAAO;IAC9D,MAAMG,iBAAiB,GAAIC,OAAO,CAACC,QAAQ,KAAK,OAAO,IAAIhB,IAAI,CAACiB,QAAQ,CAAC,GAAG,CAAC,IACzEjB,IAAI,CAACkB,UAAU,CAAC,GAAG,CAAC;AACxB,IAAA,IAAIN,YAAY,EACZZ,IAAI,GAAG,IAAIF,MAAM,CAACqB,OAAO,EAAEnB,IAAI,CAAC;IACpC,IAAIL,aAAa,IAAImB,iBAAiB,EAClCd,IAAI,GAAGH,SAAS,CAACG,IAAI,CAAC;AAC1B,IAAA,IAAIA,IAAI,KAAK,GAAG,EACZ,OAAO,EAAE;IACb,MAAMoB,cAAc,GAAGpB,IAAI,CAACA,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC,KAAKU,aAAa;IAC9D,OAAOjB,cAAc,CAACwB,cAAc,GAAGpB,IAAI,GAAGa,aAAa,GAAGb,IAAI,EAAEa,aAAa,CAAC;AACtF;EACApB,OAAA,CAAAE,aAAqB,GAAGA,aAAa;;;;;;;;;;AClCrCJ,EAAAA,MAAM,CAACC,cAAc,CAAC6B,QAAO,EAAE,YAAY,EAAE;AAAE3B,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAC7D2B,EAAAA,QAAA,CAAAC,KAAa,GAAGD,QAAyB,CAAAE,iBAAA,GAAGF,QAA4B,CAAAG,oBAAA,GAAG,MAAM;EACjF,MAAM1B,MAAM,GAAGC,UAAe;AAC9B,EAAA,MAAM0B,OAAO,GAAGC,cAAsB,EAAA;AACtC,EAAA,SAASF,oBAAoBA,CAACG,QAAQ,EAAEC,aAAa,EAAE;IACnD,OAAOA,aAAa,GAAGD,QAAQ;AACnC;EACAN,QAAA,CAAAG,oBAA4B,GAAGA,oBAAoB;AACnD,EAAA,SAASK,wBAAwBA,CAACC,IAAI,EAAEnB,OAAO,EAAE;AAC7C,IAAA,OAAO,UAAUgB,QAAQ,EAAEC,aAAa,EAAE;AACtC,MAAA,MAAMG,QAAQ,GAAGH,aAAa,CAACV,UAAU,CAACY,IAAI,CAAC;MAC/C,IAAIC,QAAQ,EACR,OAAOH,aAAa,CAACpB,OAAO,CAACsB,IAAI,EAAE,EAAE,CAAC,GAAGH,QAAQ,CAAA,KAEjD,OAAQ,IAAIF,OAAO,CAAC7B,cAAc,EAAE,IAAIE,MAAM,CAACkC,QAAQ,EAAEF,IAAI,EAAEF,aAAa,CAAC,EAAEjB,OAAO,CAACE,aAAa,CAAC,GACjGF,OAAO,CAACE,aAAa,GACrBc,QAAQ;KACnB;AACL;EACA,SAASM,UAAQA,CAACN,QAAQ,EAAE;AACxB,IAAA,OAAOA,QAAQ;AACnB;AACA,EAAA,SAASJ,iBAAiBA,CAACI,QAAQ,EAAEC,aAAa,EAAErB,SAAS,EAAE;AAC3D,IAAA,OAAOqB,aAAa,GAAGD,QAAQ,GAAGpB,SAAS;AAC/C;EACAc,QAAA,CAAAE,iBAAyB,GAAGA,iBAAiB;AAC7C,EAAA,SAASD,KAAKA,CAACQ,IAAI,EAAEnB,OAAO,EAAE;IAC1B,MAAM;MAAEuB,aAAa;AAAEC,MAAAA;AAAe,KAAE,GAAGxB,OAAO;AAClD,IAAA,OAAOuB,aAAa,IAAIJ,IAAA,GAClBD,wBAAwB,CAACC,IAAI,EAAEnB,OAAO,CAAA,GACtCwB,eAAA,GACIX,oBAAA,GACAS,UAAQ;AACtB;EACAZ,QAAA,CAAAC,KAAa,GAAGA,KAAK;;;;;;;;;;AClCrB/B,EAAAA,MAAM,CAACC,cAAc,CAAC4C,aAAO,EAAE,YAAY,EAAE;AAAE1C,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAChD0C,EAAAA,aAAA,CAAAd,KAAA,GAAG,MAAM;EACtB,SAASe,6BAA6BA,CAACP,IAAI,EAAE;AACzC,IAAA,OAAO,UAAUF,aAAa,EAAEU,KAAK,EAAE;AACnCA,MAAAA,KAAK,CAACC,IAAI,CAACX,aAAa,CAACvB,SAAS,CAACyB,IAAI,CAAC3B,MAAM,CAAC,IAAI,GAAG,CAAC;KAC1D;AACL;EACA,SAASqC,mCAAmCA,CAACV,IAAI,EAAE;AAC/C,IAAA,OAAO,UAAUF,aAAa,EAAEU,KAAK,EAAEG,OAAO,EAAE;MAC5C,MAAMC,YAAY,GAAGd,aAAa,CAACvB,SAAS,CAACyB,IAAI,CAAC3B,MAAM,CAAC,IAAI,GAAG;AAChE,MAAA,IAAIsC,OAAO,CAACE,KAAK,CAAEC,MAAM,IAAKA,MAAM,CAACF,YAAY,EAAE,IAAI,CAAC,CAAC,EAAE;AACvDJ,QAAAA,KAAK,CAACC,IAAI,CAACG,YAAY,CAAC;AACpC;KACK;AACL;AACA,EAAA,MAAMG,eAAa,GAAGA,CAACjB,aAAa,EAAEU,KAAK,KAAK;AAC5CA,IAAAA,KAAK,CAACC,IAAI,CAACX,aAAa,IAAI,GAAG,CAAC;GACnC;EACD,MAAMkB,mBAAmB,GAAGA,CAAClB,aAAa,EAAEU,KAAK,EAAEG,OAAO,KAAK;AAC3D,IAAA,MAAMzC,IAAI,GAAG4B,aAAa,IAAI,GAAG;AACjC,IAAA,IAAIa,OAAO,CAACE,KAAK,CAAEC,MAAM,IAAKA,MAAM,CAAC5C,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;AAC/CsC,MAAAA,KAAK,CAACC,IAAI,CAACvC,IAAI,CAAC;AACxB;GACC;AACD,EAAA,MAAM+C,KAAK,GAAGA,MAAM,EAAG;AACvB,EAAA,SAASzB,KAAKA,CAACQ,IAAI,EAAEnB,OAAO,EAAE;IAC1B,MAAM;MAAEqC,WAAW;MAAEP,OAAO;AAAEP,MAAAA;AAAe,KAAA,GAAGvB,OAAO;AACvD,IAAA,IAAI,CAACqC,WAAW,EACZ,OAAOD,KAAK;AAChB,IAAA,IAAIb,aAAa,EACb,OAAOO,OAAO,IAAIA,OAAO,CAACtC,MAAA,GACpBqC,mCAAmC,CAACV,IAAI,CAAA,GACxCO,6BAA6B,CAACP,IAAI,CAAC;IAC7C,OAAOW,OAAO,IAAIA,OAAO,CAACtC,MAAM,GAAG2C,mBAAmB,GAAGD,eAAa;AAC1E;EACAT,aAAA,CAAAd,KAAa,GAAGA,KAAK;;;;;;;;;;ACnCrB/B,EAAAA,MAAM,CAACC,cAAc,CAACyD,QAAO,EAAE,YAAY,EAAE;AAAEvD,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAChDuD,EAAAA,QAAA,CAAA3B,KAAA,GAAG,MAAM;EACtB,MAAM4B,sBAAsB,GAAGA,CAACvB,QAAQ,EAAEwB,MAAM,EAAEC,MAAM,EAAEX,OAAO,KAAK;AAClE,IAAA,IAAIA,OAAO,CAACE,KAAK,CAAEC,MAAM,IAAKA,MAAM,CAACjB,QAAQ,EAAE,KAAK,CAAC,CAAC,EAClDyB,MAAM,CAACC,KAAK,EAAE;GACrB;EACD,MAAMC,cAAc,GAAGA,CAAC3B,QAAQ,EAAEW,KAAK,EAAEiB,OAAO,EAAEd,OAAO,KAAK;AAC1D,IAAA,IAAIA,OAAO,CAACE,KAAK,CAAEC,MAAM,IAAKA,MAAM,CAACjB,QAAQ,EAAE,KAAK,CAAC,CAAC,EAClDW,KAAK,CAACC,IAAI,CAACZ,QAAQ,CAAC;GAC3B;EACD,MAAM6B,aAAa,GAAGA,CAACC,SAAS,EAAEN,MAAM,EAAEC,MAAM,EAAEM,QAAQ,KAAK;IAC3DN,MAAM,CAACC,KAAK,EAAE;GACjB;AACD,EAAA,MAAMM,UAAQ,GAAGA,CAAChC,QAAQ,EAAEW,KAAK,KAAK;AAClCA,IAAAA,KAAK,CAACC,IAAI,CAACZ,QAAQ,CAAC;GACvB;AACD,EAAA,MAAMoB,KAAK,GAAGA,MAAM,EAAG;EACvB,SAASzB,KAAKA,CAACX,OAAO,EAAE;IACpB,MAAM;MAAEiD,YAAY;MAAEnB,OAAO;AAAEoB,MAAAA;AAAY,KAAA,GAAGlD,OAAO;IACrD,IAAIiD,YAAY,EACZ,OAAOb,KAAK;AAChB,IAAA,IAAIN,OAAO,IAAIA,OAAO,CAACtC,MAAM,EAAE;AAC3B,MAAA,OAAO0D,UAAU,GAAGX,sBAAsB,GAAGI,cAAc;KACnE,MACS,IAAIO,UAAU,EAAE;AACjB,MAAA,OAAOL,aAAa;AAC5B,KAAA,MACS;AACD,MAAA,OAAOG,UAAQ;AACvB;AACA;EACAV,QAAA,CAAA3B,KAAa,GAAGA,KAAK;;;;;;;;;;AC/BrB/B,EAAAA,MAAM,CAACC,cAAc,CAACsE,QAAO,EAAE,YAAY,EAAE;AAAEpE,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAChDoE,EAAAA,QAAA,CAAAxC,KAAA,GAAG,MAAM;EACtB,MAAMyC,UAAQ,GAAIzB,KAAK,IAAK;AACxB,IAAA,OAAOA,KAAK;GACf;EACD,MAAM0B,aAAa,GAAGA,MAAM;IACxB,OAAO,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;GAC1B;EACD,SAAS3C,KAAKA,CAACX,OAAO,EAAE;AACpB,IAAA,OAAOA,OAAO,CAACuD,KAAK,GAAGF,aAAa,GAAGD,UAAQ;AACnD;EACAD,QAAA,CAAAxC,KAAa,GAAGA,KAAK;;;;;;;;;;ACXrB/B,EAAAA,MAAM,CAACC,cAAc,CAAC2E,UAAO,EAAE,YAAY,EAAE;AAAEzE,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAChDyE,EAAAA,UAAA,CAAA7C,KAAA,GAAG,MAAM;EACtB,MAAM8C,YAAU,GAAGA,CAACC,MAAM,EAAEC,SAAS,EAAEjB,KAAK,KAAK;IAC7CgB,MAAM,CAAC9B,IAAI,CAAC;MAAE+B,SAAS;MAAEjB,KAAK;AAAEkB,MAAAA,GAAG,EAAED;KAAW,CAAC;GACpD;AACD,EAAA,MAAMvB,KAAK,GAAGA,MAAM,EAAG;EACvB,SAASzB,KAAKA,CAACX,OAAO,EAAE;AACpB,IAAA,OAAOA,OAAO,CAACuD,KAAK,GAAGE,YAAU,GAAGrB,KAAK;AAC7C;EACAoB,UAAA,CAAA7C,KAAa,GAAGA,KAAK;;;;;;;;;;ECTrB,IAAIkD,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;AACnE,IAAA,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;AAAE,MAAA,SAAS,EAAEA;KAAK;GAC5D;AACDlF,EAAAA,MAAM,CAACC,cAAc,CAACmF,cAAO,EAAE,YAAY,EAAE;AAAEjF,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAChDiF,EAAAA,cAAA,CAAArD,KAAA,GAAG,MAAM;AACtB,EAAA,MAAMsD,IAAI,GAAGJ,eAAe,CAACzE,YAAa,CAAC;EAC3C,MAAMD,MAAM,GAAG4B,UAAe;EAC9B,MAAMmD,oBAAoB,GAAG,UAAU7E,IAAI,EAAE8E,KAAK,EAAEC,QAAQ,EAAE;IAC1D,MAAM;MAAEC,KAAK;AAAErE,MAAAA,OAAO,EAAE;AAAEsE,QAAAA;AAAc;AAAK,KAAA,GAAGH,KAAK;IACrDE,KAAK,CAACE,OAAO,EAAE;IACfN,IAAI,CAACO,OAAO,CAACC,QAAQ,CAACpF,IAAI,EAAE,CAACqF,KAAK,EAAEC,YAAY,KAAK;AACjD,MAAA,IAAID,KAAK,EACL,OAAOL,KAAK,CAACO,OAAO,CAACN,cAAc,GAAG,IAAI,GAAGI,KAAK,EAAEP,KAAK,CAAC;MAC9DF,IAAI,CAACO,OAAO,CAACK,IAAI,CAACF,YAAY,EAAE,CAACD,KAAK,EAAEG,IAAI,KAAK;AAC7C,QAAA,IAAIH,KAAK,EACL,OAAOL,KAAK,CAACO,OAAO,CAACN,cAAc,GAAG,IAAI,GAAGI,KAAK,EAAEP,KAAK,CAAC;QAC9D,IAAIU,IAAI,CAACC,WAAW,EAAE,IAAIC,WAAW,CAAC1F,IAAI,EAAEsF,YAAY,EAAER,KAAK,CAAC,EAC5D,OAAOE,KAAK,CAACO,OAAO,CAAC,IAAI,EAAET,KAAK,CAAC;AACrCC,QAAAA,QAAQ,CAACS,IAAI,EAAEF,YAAY,CAAC;AAC5BN,QAAAA,KAAK,CAACO,OAAO,CAAC,IAAI,EAAET,KAAK,CAAC;AACtC,OAAS,CAAC;AACV,KAAK,CAAC;GACL;EACD,MAAMa,eAAe,GAAG,UAAU3F,IAAI,EAAE8E,KAAK,EAAEC,QAAQ,EAAE;IACrD,MAAM;MAAEC,KAAK;AAAErE,MAAAA,OAAO,EAAE;AAAEsE,QAAAA;AAAc;AAAK,KAAA,GAAGH,KAAK;IACrDE,KAAK,CAACE,OAAO,EAAE;IACf,IAAI;MACA,MAAMI,YAAY,GAAGV,IAAI,CAACO,OAAO,CAACS,YAAY,CAAC5F,IAAI,CAAC;MACpD,MAAMwF,IAAI,GAAGZ,IAAI,CAACO,OAAO,CAACU,QAAQ,CAACP,YAAY,CAAC;AAChD,MAAA,IAAIE,IAAI,CAACC,WAAW,EAAE,IAAIC,WAAW,CAAC1F,IAAI,EAAEsF,YAAY,EAAER,KAAK,CAAC,EAC5D;AACJC,MAAAA,QAAQ,CAACS,IAAI,EAAEF,YAAY,CAAC;KACpC,CACI,OAAOQ,CAAC,EAAE;AACN,MAAA,IAAI,CAACb,cAAc,EACf,MAAMa,CAAC;AACnB;GACC;AACD,EAAA,SAASxE,KAAKA,CAACX,OAAO,EAAEoF,aAAa,EAAE;IACnC,IAAI,CAACpF,OAAO,CAACgF,eAAe,IAAIhF,OAAO,CAACqF,eAAe,EACnD,OAAO,IAAI;AACf,IAAA,OAAOD,aAAa,GAAGJ,eAAe,GAAGd,oBAAoB;AACjE;EACAF,cAAA,CAAArD,KAAa,GAAGA,KAAK;AACrB,EAAA,SAASoE,WAAWA,CAAC1F,IAAI,EAAEiG,QAAQ,EAAEnB,KAAK,EAAE;AACxC,IAAA,IAAIA,KAAK,CAACnE,OAAO,CAACuF,YAAY,EAC1B,OAAOC,yBAAyB,CAACF,QAAQ,EAAEnB,KAAK,CAAC;IACrD,IAAIsB,MAAM,GAAG,IAAItG,MAAM,CAACuG,OAAO,EAAErG,IAAI,CAAC;IACtC,IAAIsG,KAAK,GAAG,CAAC;IACb,OAAOF,MAAM,KAAKtB,KAAK,CAAChD,IAAI,IAAIwE,KAAK,GAAG,CAAC,EAAE;MACvC,MAAMhB,YAAY,GAAGR,KAAK,CAACyB,QAAQ,CAACC,GAAG,CAACJ,MAAM,CAAC;MAC/C,MAAMK,UAAU,GAAG,CAAC,CAACnB,YAAY,KAC5BA,YAAY,KAAKW,QAAQ,IACtBX,YAAY,CAACpE,UAAU,CAAC+E,QAAQ,CAAC,IACjCA,QAAQ,CAAC/E,UAAU,CAACoE,YAAY,CAAC,CAAC;AAC1C,MAAA,IAAImB,UAAU,EACVH,KAAK,EAAE,CAAA,KAEPF,MAAM,GAAG,IAAItG,MAAM,CAACuG,OAAO,EAAED,MAAM,CAAC;AAChD;IACItB,KAAK,CAACyB,QAAQ,CAACG,GAAG,CAAC1G,IAAI,EAAEiG,QAAQ,CAAC;IAClC,OAAOK,KAAK,GAAG,CAAC;AACpB;AACA,EAAA,SAASH,yBAAyBA,CAACF,QAAQ,EAAEnB,KAAK,EAAE;AAChD,IAAA,OAAOA,KAAK,CAAC6B,OAAO,CAAC1F,QAAQ,CAACgF,QAAQ,GAAGnB,KAAK,CAACnE,OAAO,CAACE,aAAa,CAAC;AACzE;;;;;;;;;;ACjEAtB,EAAAA,MAAM,CAACC,cAAc,CAACoH,cAAO,EAAE,YAAY,EAAE;AAAElH,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAChDkH,EAAAA,cAAA,CAAAtF,KAAA,GAAG,MAAM;EACtB,MAAMuF,cAAc,GAAI/B,KAAK,IAAK;IAC9B,OAAOA,KAAK,CAAC1B,MAAM;GACtB;EACD,MAAM0D,UAAU,GAAIhC,KAAK,IAAK;IAC1B,OAAOA,KAAK,CAACT,MAAM;GACtB;EACD,MAAM0C,WAAW,GAAIjC,KAAK,IAAK;IAC3B,OAAOA,KAAK,CAACxC,KAAK;GACrB;EACD,MAAM0E,cAAc,GAAIlC,KAAK,IAAK;AAC9B,IAAA,OAAOA,KAAK,CAACxC,KAAK,CAAC2B,KAAK,CAAC,CAAC,EAAEa,KAAK,CAACnE,OAAO,CAACsG,QAAQ,CAAC;GACtD;EACD,MAAMC,eAAe,GAAGA,CAACpC,KAAK,EAAEO,KAAK,EAAEN,QAAQ,KAAK;AAChDoC,IAAAA,MAAM,CAAC9B,KAAK,EAAEN,QAAQ,EAAED,KAAK,CAAC1B,MAAM,EAAE0B,KAAK,CAACnE,OAAO,CAACsE,cAAc,CAAC;AACnE,IAAA,OAAO,IAAI;GACd;EACD,MAAMmC,YAAY,GAAGA,CAACtC,KAAK,EAAEO,KAAK,EAAEN,QAAQ,KAAK;AAC7CoC,IAAAA,MAAM,CAAC9B,KAAK,EAAEN,QAAQ,EAAED,KAAK,CAACxC,KAAK,EAAEwC,KAAK,CAACnE,OAAO,CAACsE,cAAc,CAAC;AAClE,IAAA,OAAO,IAAI;GACd;EACD,MAAMoC,eAAe,GAAGA,CAACvC,KAAK,EAAEO,KAAK,EAAEN,QAAQ,KAAK;IAChDoC,MAAM,CAAC9B,KAAK,EAAEN,QAAQ,EAAED,KAAK,CAACxC,KAAK,CAAC2B,KAAK,CAAC,CAAC,EAAEa,KAAK,CAACnE,OAAO,CAACsG,QAAQ,CAAC,EAAEnC,KAAK,CAACnE,OAAO,CAACsE,cAAc,CAAC;AACnG,IAAA,OAAO,IAAI;GACd;EACD,MAAMqC,WAAW,GAAGA,CAACxC,KAAK,EAAEO,KAAK,EAAEN,QAAQ,KAAK;AAC5CoC,IAAAA,MAAM,CAAC9B,KAAK,EAAEN,QAAQ,EAAED,KAAK,CAACT,MAAM,EAAES,KAAK,CAACnE,OAAO,CAACsE,cAAc,CAAC;AACnE,IAAA,OAAO,IAAI;GACd;EACD,SAASkC,MAAMA,CAAC9B,KAAK,EAAEN,QAAQ,EAAEwC,MAAM,EAAEtC,cAAc,EAAE;AACrD,IAAA,IAAII,KAAK,IAAI,CAACJ,cAAc,EACxBF,QAAQ,CAACM,KAAK,EAAEkC,MAAM,CAAC,CAAA,KAEvBxC,QAAQ,CAAC,IAAI,EAAEwC,MAAM,CAAC;AAC9B;AACA,EAAA,SAASjG,KAAKA,CAACX,OAAO,EAAEoF,aAAa,EAAE;IACnC,MAAM;MAAElC,UAAU;MAAEK,KAAK;AAAE+C,MAAAA;AAAU,KAAA,GAAGtG,OAAO;AAC/C,IAAA,IAAIkD,UAAU,EACV,OAAOkC,aAAA,GACDc,cAAA,GACAK,eAAe,CAAA,KACpB,IAAIhD,KAAK,EACV,OAAO6B,aAAA,GACDe,UAAA,GACAQ,WAAW,CAAA,KAChB,IAAIL,QAAQ,EACb,OAAOlB,aAAA,GACDiB,cAAA,GACAK,eAAe,CAAA,KAErB,OAAOtB,aAAA,GACDgB,WAAA,GACAK,YAAY;AAC1B;EACAR,cAAA,CAAAtF,KAAa,GAAGA,KAAK;;;;;;;;;;ECvDrB,IAAIkD,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;AACnE,IAAA,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;AAAE,MAAA,SAAS,EAAEA;KAAK;GAC5D;AACDlF,EAAAA,MAAM,CAACC,cAAc,CAACgI,aAAO,EAAE,YAAY,EAAE;AAAE9H,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAChD8H,EAAAA,aAAA,CAAAlG,KAAA,GAAG,MAAM;AACtB,EAAA,MAAMsD,IAAI,GAAGJ,eAAe,CAACzE,YAAa,CAAC;AAC3C,EAAA,MAAM0H,WAAW,GAAG;AAAEC,IAAAA,aAAa,EAAE;GAAM;AAC3C,EAAA,MAAMC,SAAS,GAAGA,CAAC7C,KAAK,EAAE8C,SAAS,EAAEhG,aAAa,EAAEiG,YAAY,EAAE9C,QAAQ,KAAK;AAC3E,IAAA,IAAI8C,YAAY,GAAG,CAAC,EAChB,OAAO/C,KAAK,CAACE,KAAK,CAACO,OAAO,CAAC,IAAI,EAAET,KAAK,CAAC;AAC3CA,IAAAA,KAAK,CAAC6B,OAAO,CAACpE,IAAI,CAACqF,SAAS,CAAC;AAC7B9C,IAAAA,KAAK,CAAC1B,MAAM,CAAC0E,WAAW,EAAE;AAC1BhD,IAAAA,KAAK,CAACE,KAAK,CAACE,OAAO,EAAE;AACzB;AACA;AACIN,IAAAA,IAAI,CAACO,OAAO,CAAC4C,OAAO,CAACH,SAAS,IAAI,GAAG,EAAEH,WAAW,EAAE,CAACpC,KAAK,EAAE2C,OAAO,GAAG,EAAE,KAAK;AACzEjD,MAAAA,QAAQ,CAACiD,OAAO,EAAEpG,aAAa,EAAEiG,YAAY,CAAC;AAC9C/C,MAAAA,KAAK,CAACE,KAAK,CAACO,OAAO,CAACT,KAAK,CAACnE,OAAO,CAACsE,cAAc,GAAG,IAAI,GAAGI,KAAK,EAAEP,KAAK,CAAC;AAC/E,KAAK,CAAC;GACL;AACD,EAAA,MAAMmD,QAAQ,GAAGA,CAACnD,KAAK,EAAE8C,SAAS,EAAEhG,aAAa,EAAEiG,YAAY,EAAE9C,QAAQ,KAAK;IAC1E,IAAI8C,YAAY,GAAG,CAAC,EAChB;AACJ/C,IAAAA,KAAK,CAAC6B,OAAO,CAACpE,IAAI,CAACqF,SAAS,CAAC;AAC7B9C,IAAAA,KAAK,CAAC1B,MAAM,CAAC0E,WAAW,EAAE;IAC1B,IAAIE,OAAO,GAAG,EAAE;IAChB,IAAI;AACAA,MAAAA,OAAO,GAAGpD,IAAI,CAACO,OAAO,CAAC+C,WAAW,CAACN,SAAS,IAAI,GAAG,EAAEH,WAAW,CAAC;KACzE,CACI,OAAO3B,CAAC,EAAE;MACN,IAAI,CAAChB,KAAK,CAACnE,OAAO,CAACsE,cAAc,EAC7B,MAAMa,CAAC;AACnB;AACIf,IAAAA,QAAQ,CAACiD,OAAO,EAAEpG,aAAa,EAAEiG,YAAY,CAAC;GACjD;EACD,SAASvG,KAAKA,CAACyE,aAAa,EAAE;AAC1B,IAAA,OAAOA,aAAa,GAAGkC,QAAQ,GAAGN,SAAS;AAC/C;EACAH,aAAA,CAAAlG,KAAa,GAAGA,KAAK;;;;;;;;;;ACtCrB/B,EAAAA,MAAM,CAACC,cAAc,CAACwF,KAAO,EAAE,YAAY,EAAE;AAAEtF,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAChDsF,EAAAA,KAAA,CAAAmD,KAAA,GAAG,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,EAAA,MAAMA,KAAK,CAAC;IACRC,YAAY;AACZC,IAAAA,KAAK,GAAG,CAAC;IACTC,WAAWA,CAACF,YAAY,EAAE;MACtB,IAAI,CAACA,YAAY,GAAGA,YAAY;AACxC;AACIlD,IAAAA,OAAOA,GAAG;MACN,IAAI,CAACmD,KAAK,EAAE;AACpB;AACI9C,IAAAA,OAAOA,CAACF,KAAK,EAAEkC,MAAM,EAAE;AACnB,MAAA,IAAI,EAAE,IAAI,CAACc,KAAK,IAAI,CAAC,IAAIhD,KAAK,EAC1B,IAAI,CAAC+C,YAAY,CAAC/C,KAAK,EAAEkC,MAAM,CAAC;AAC5C;AACA;EACAvC,KAAA,CAAAmD,KAAa,GAAGA,KAAK;;;;;;;;;;ACrBrB5I,EAAAA,MAAM,CAACC,cAAc,CAAC+I,OAAO,EAAE,YAAY,EAAE;AAAE7I,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAC9C6I,EAAAA,OAAA,CAAAC,OAAA,GAAG,MAAM;AACxB,EAAA,MAAMA,OAAO,CAAC;AACVC,IAAAA,MAAM,GAAG,CAAC;AACVC,IAAAA,YAAY,GAAG,CAAC;IAChB,IAAIrF,KAAKA,CAACsF,GAAG,EAAE;MACX,IAAI,CAACF,MAAM,GAAGE,GAAG;AACzB;IACI,IAAItF,KAAKA,GAAG;MACR,OAAO,IAAI,CAACoF,MAAM;AAC1B;IACI,IAAIX,WAAWA,CAACa,GAAG,EAAE;MACjB,IAAI,CAACD,YAAY,GAAGC,GAAG;AAC/B;IACI,IAAIb,WAAWA,GAAG;MACd,OAAO,IAAI,CAACY,YAAY;AAChC;AACA;AACA;AACA;AACA;IACI,IAAIE,IAAIA,GAAG;MACP,OAAO,IAAI,CAACF,YAAY;AAChC;AACA;EACAH,OAAA,CAAAC,OAAe,GAAGA,OAAO;;;;;;;;ECzBzB,IAAIK,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,KAAMtJ,MAAM,CAACuJ,MAAM,GAAI,UAASC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;AAC5F,IAAA,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;IAC5B,IAAIG,IAAI,GAAG7J,MAAM,CAAC8J,wBAAwB,CAACL,CAAC,EAAEC,CAAC,CAAC;IAChD,IAAI,CAACG,IAAI,KAAK,KAAK,IAAIA,IAAI,GAAG,CAACJ,CAAC,CAACtE,UAAU,GAAG0E,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACG,YAAY,CAAC,EAAE;AACjFH,MAAAA,IAAI,GAAG;AAAEI,QAAAA,UAAU,EAAE,IAAI;QAAEhD,GAAG,EAAE,YAAW;UAAE,OAAOwC,CAAC,CAACC,CAAC,CAAC;;OAAK;AACnE;IACI1J,MAAM,CAACC,cAAc,CAACuJ,CAAC,EAAEG,EAAE,EAAEE,IAAI,CAAC;GACrC,GAAK,UAASL,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;AACxB,IAAA,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;AAC5BF,IAAAA,CAAC,CAACG,EAAE,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;AAChB,GAAE,CAAC;AACH,EAAA,IAAIQ,kBAAkB,GAAI,IAAI,IAAI,IAAI,CAACA,kBAAkB,KAAMlK,MAAM,CAACuJ,MAAM,GAAI,UAASC,CAAC,EAAEW,CAAC,EAAE;AAC3FnK,IAAAA,MAAM,CAACC,cAAc,CAACuJ,CAAC,EAAE,SAAS,EAAE;AAAES,MAAAA,UAAU,EAAE,IAAI;AAAE9J,MAAAA,KAAK,EAAEgK;KAAG,CAAC;AACvE,GAAC,GAAI,UAASX,CAAC,EAAEW,CAAC,EAAE;AAChBX,IAAAA,CAAC,CAAC,SAAS,CAAC,GAAGW,CAAC;AACpB,GAAC,CAAC;EACF,IAAIC,YAAY,GAAI,IAAI,IAAI,IAAI,CAACA,YAAY,IAAK,UAAUlF,GAAG,EAAE;AAC7D,IAAA,IAAIA,GAAG,IAAIA,GAAG,CAACC,UAAU,EAAE,OAAOD,GAAG;IACrC,IAAImF,MAAM,GAAG,EAAE;AACf,IAAA,IAAInF,GAAG,IAAI,IAAI,EAAE,KAAK,IAAIwE,CAAC,IAAIxE,GAAG,EAAE,IAAIwE,CAAC,KAAK,SAAS,IAAI1J,MAAM,CAACsK,SAAS,CAACC,cAAc,CAACC,IAAI,CAACtF,GAAG,EAAEwE,CAAC,CAAC,EAAEJ,eAAe,CAACe,MAAM,EAAEnF,GAAG,EAAEwE,CAAC,CAAC;AACxIQ,IAAAA,kBAAkB,CAACG,MAAM,EAAEnF,GAAG,CAAC;AAC/B,IAAA,OAAOmF,MAAM;GAChB;AACDrK,EAAAA,MAAM,CAACC,cAAc,CAACwK,MAAO,EAAE,YAAY,EAAE;AAAEtK,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAC/CsK,EAAAA,MAAA,CAAAC,MAAA,GAAG,MAAM;EACvB,MAAMnK,MAAM,GAAGC,UAAe;AAC9B,EAAA,MAAM0B,OAAO,GAAGC,cAAmB,EAAA;AACnC,EAAA,MAAMO,QAAQ,GAAG0H,YAAY,CAACO,iBAAgC,CAAC;AAC/D,EAAA,MAAMrH,aAAa,GAAG8G,YAAY,CAACQ,sBAAqC,CAAC;AACzE,EAAA,MAAMxG,QAAQ,GAAGgG,YAAY,CAACS,iBAAgC,CAAC;AAC/D,EAAA,MAAMrG,QAAQ,GAAG4F,YAAY,CAACU,iBAAgC,CAAC;AAC/D,EAAA,MAAMjG,UAAU,GAAGuF,YAAY,CAACW,mBAAkC,CAAC;AACnE,EAAA,MAAM3F,cAAc,GAAGgF,YAAY,CAACY,uBAAsC,CAAC;AAC3E,EAAA,MAAM3D,cAAc,GAAG+C,YAAY,CAACa,uBAAsC,CAAC;AAC3E,EAAA,MAAMhD,aAAa,GAAGmC,YAAY,CAACc,sBAAqC,CAAC;AACzE,EAAA,MAAMC,OAAO,GAAGC,YAAkB,EAAA;AAClC,EAAA,MAAMC,SAAS,GAAGC,cAAoB,EAAA;AACtC,EAAA,MAAMZ,MAAM,CAAC;IACTnI,IAAI;IACJiE,aAAa;IACbjB,KAAK;IACL7C,QAAQ;IACRY,aAAa;IACbc,QAAQ;IACRI,QAAQ;IACRK,UAAU;IACVO,cAAc;IACd6C,aAAa;IACbsD,eAAe;AACfxC,IAAAA,WAAWA,CAACxG,IAAI,EAAEnB,OAAO,EAAEoE,QAAQ,EAAE;AACjC,MAAA,IAAI,CAACgB,aAAa,GAAG,CAAChB,QAAQ;AAC9B,MAAA,IAAI,CAAC+F,eAAe,GAAGlE,cAAc,CAACtF,KAAK,CAACX,OAAO,EAAE,IAAI,CAACoF,aAAa,CAAC;AACxE,MAAA,IAAI,CAACjE,IAAI,GAAG,IAAIL,OAAO,CAAC9B,aAAa,EAAEmC,IAAI,EAAEnB,OAAO,CAAC;MACrD,IAAI,CAACmE,KAAK,GAAG;QACThD,IAAI,EAAE,IAAIL,OAAO,CAAChB,eAAe,EAAE,IAAI,CAACqB,IAAI,CAAC,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI,CAACA,IAAI,CAACmC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAC9F;QACY3B,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC2B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACvBI,QAAAA,MAAM,EAAE,EAAE;AACVjB,QAAAA,MAAM,EAAE,IAAIwH,SAAS,CAACpC,OAAO,EAAE;QAC/B7H,OAAO;QACPqE,KAAK,EAAE,IAAI0F,OAAO,CAACvC,KAAK,CAAC,CAAC9C,KAAK,EAAEP,KAAK,KAAK,IAAI,CAACgG,eAAe,CAAChG,KAAK,EAAEO,KAAK,EAAEN,QAAQ,CAAC,CAAC;AACxFwB,QAAAA,QAAQ,EAAE,IAAIwE,GAAG,EAAE;QACnBpE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC1C,KAAK,CAAC,CAAC,EAAE,CAAC;OAC3B;AACT;AACA;AACA;AACA;AACA;AACQ,MAAA,IAAI,CAAChC,QAAQ,GAAGA,QAAQ,CAACX,KAAK,CAAC,IAAI,CAACQ,IAAI,EAAEnB,OAAO,CAAC;AAClD,MAAA,IAAI,CAACkC,aAAa,GAAGA,aAAa,CAACvB,KAAK,CAAC,IAAI,CAACQ,IAAI,EAAEnB,OAAO,CAAC;MAC5D,IAAI,CAACgD,QAAQ,GAAGA,QAAQ,CAACrC,KAAK,CAACX,OAAO,CAAC;MACvC,IAAI,CAACoD,QAAQ,GAAGA,QAAQ,CAACzC,KAAK,CAACX,OAAO,CAAC;MACvC,IAAI,CAACyD,UAAU,GAAGA,UAAU,CAAC9C,KAAK,CAACX,OAAO,CAAC;AAC3C,MAAA,IAAI,CAACgE,cAAc,GAAGA,cAAc,CAACrD,KAAK,CAACX,OAAO,EAAE,IAAI,CAACoF,aAAa,CAAC;MACvE,IAAI,CAACyB,aAAa,GAAGA,aAAa,CAAClG,KAAK,CAAC,IAAI,CAACyE,aAAa,CAAC;AACpE;AACIiF,IAAAA,KAAKA,GAAG;MACJ,IAAI,CAACxD,aAAa,CAAC,IAAI,CAAC1C,KAAK,EAAE,IAAI,CAAChD,IAAI,EAAE,IAAI,CAACA,IAAI,EAAE,IAAI,CAACgD,KAAK,CAACnE,OAAO,CAACsK,QAAQ,EAAE,IAAI,CAACC,IAAI,CAAC;AAC5F,MAAA,OAAO,IAAI,CAACnF,aAAa,GAAG,IAAI,CAAC+E,eAAe,CAAC,IAAI,CAAChG,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI;AACjF;AACIoG,IAAAA,IAAI,GAAGA,CAAClD,OAAO,EAAEpG,aAAa,EAAE0E,KAAK,KAAK;MACtC,MAAM;QAAEhE,KAAK;AAAE3B,QAAAA,OAAO,EAAE;UAAE8B,OAAO;UAAEkD,eAAe;UAAEK,eAAe;UAAEmF,OAAO;UAAElE,QAAQ;UAAEmE,MAAM;UAAElF,YAAY;AAAErF,UAAAA;AAAa;OAAM,GAAG,IAAI,CAACiE,KAAK;AAC9I,MAAA,IAAKsG,MAAM,IAAIA,MAAM,CAACC,OAAO,IAAMpE,QAAQ,IAAI3E,KAAK,CAACnC,MAAM,GAAG8G,QAAS,EACnE;MACJ,IAAI,CAACpE,aAAa,CAACjB,aAAa,EAAEU,KAAK,EAAEG,OAAO,CAAC;MACjD,MAAMY,KAAK,GAAG,IAAI,CAACU,QAAQ,CAAC,IAAI,CAACe,KAAK,CAACxC,KAAK,CAAC;AAC7C,MAAA,KAAK,IAAIgJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtD,OAAO,CAAC7H,MAAM,EAAE,EAAEmL,CAAC,EAAE;AACrC,QAAA,MAAMC,KAAK,GAAGvD,OAAO,CAACsD,CAAC,CAAC;AACxB,QAAA,IAAIC,KAAK,CAACC,MAAM,EAAE,IACbD,KAAK,CAACE,cAAc,EAAE,IAAI,CAAC9F,eAAe,IAAI,CAACK,eAAgB,EAAE;UAClE,MAAMrE,QAAQ,GAAG,IAAI,CAACM,QAAQ,CAACsJ,KAAK,CAACG,IAAI,EAAE9J,aAAa,CAAC;AACzD,UAAA,IAAI,CAAC+B,QAAQ,CAAChC,QAAQ,EAAE0B,KAAK,EAAE,IAAI,CAACyB,KAAK,CAAC1B,MAAM,EAAEX,OAAO,CAAC;AAC1E,SAAA,MACiB,IAAI8I,KAAK,CAAC9F,WAAW,EAAE,EAAE;AAC1B,UAAA,IAAIzF,IAAI,GAAGiC,QAAQ,CAACV,iBAAiB,CAACgK,KAAK,CAACG,IAAI,EAAE9J,aAAa,EAAE,IAAI,CAACkD,KAAK,CAACnE,OAAO,CAACE,aAAa,CAAC;UAClG,IAAIsK,OAAO,IAAIA,OAAO,CAACI,KAAK,CAACG,IAAI,EAAE1L,IAAI,CAAC,EACpC;AACJ,UAAA,IAAI,CAACwH,aAAa,CAAC,IAAI,CAAC1C,KAAK,EAAE9E,IAAI,EAAEA,IAAI,EAAEsG,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC4E,IAAI,CAAC;SAChF,MACiB,IAAIK,KAAK,CAACE,cAAc,EAAE,IAAI,IAAI,CAAC9G,cAAc,EAAE;UACpD,IAAI3E,IAAI,GAAGiC,QAAQ,CAACT,oBAAoB,CAAC+J,KAAK,CAACG,IAAI,EAAE9J,aAAa,CAAC;AACnE,UAAA,IAAI,CAAC+C,cAAc,CAAC3E,IAAI,EAAE,IAAI,CAAC8E,KAAK,EAAE,CAACU,IAAI,EAAEF,YAAY,KAAK;AAC1D,YAAA,IAAIE,IAAI,CAACC,WAAW,EAAE,EAAE;AACpBH,cAAAA,YAAY,GAAG,IAAI7D,OAAO,CAAC9B,aAAa,EAAE2F,YAAY,EAAE,IAAI,CAACR,KAAK,CAACnE,OAAO,CAAC;AAC3E,cAAA,IAAIwK,OAAO,IACPA,OAAO,CAACI,KAAK,CAACG,IAAI,EAAExF,YAAY,GAAGZ,YAAY,GAAGtF,IAAI,GAAGa,aAAa,CAAC,EACvE;cACJ,IAAI,CAAC2G,aAAa,CAAC,IAAI,CAAC1C,KAAK,EAAEQ,YAAY,EAAEY,YAAY,GAAGZ,YAAY,GAAGtF,IAAI,GAAGa,aAAa,EAAEyF,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC4E,IAAI,CAAC;AAC9I,aAAA,MACyB;AACD5F,cAAAA,YAAY,GAAGY,YAAY,GAAGZ,YAAY,GAAGtF,IAAI;cACjD,MAAM2B,QAAQ,GAAG,IAAI7B,MAAM,CAAC6L,QAAQ,EAAErG,YAAY,CAAC;cACnD,MAAM1D,aAAa,GAAG,IAAIH,OAAO,CAAC9B,aAAa,EAAE,IAAIG,MAAM,CAACuG,OAAO,EAAEf,YAAY,CAAC,EAAE,IAAI,CAACR,KAAK,CAACnE,OAAO,CAAC;cACvG2E,YAAY,GAAG,IAAI,CAACrD,QAAQ,CAACN,QAAQ,EAAEC,aAAa,CAAC;AACrD,cAAA,IAAI,CAAC+B,QAAQ,CAAC2B,YAAY,EAAEjC,KAAK,EAAE,IAAI,CAACyB,KAAK,CAAC1B,MAAM,EAAEX,OAAO,CAAC;AACtF;AACA,WAAiB,CAAC;AAClB;AACA;AACQ,MAAA,IAAI,CAAC2B,UAAU,CAAC,IAAI,CAACU,KAAK,CAACT,MAAM,EAAEzC,aAAa,EAAEyB,KAAK,CAAC;KAC3D;AACL;EACA2G,MAAA,CAAAC,MAAc,GAAGA,MAAM;;;;;;;;AC3HvB1K,EAAAA,MAAM,CAACC,cAAc,CAACoM,KAAO,EAAE,YAAY,EAAE;AAAElM,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;EAC7DkM,KAAA,CAAA7G,QAAgB,GAAG6G,KAAA,CAAAC,OAAe,GAAG,MAAM;AAC3C,EAAA,MAAMC,QAAQ,GAAG/L,aAAmB,EAAA;AACpC,EAAA,SAAS8L,OAAOA,CAAC/J,IAAI,EAAEnB,OAAO,EAAE;AAC5B,IAAA,OAAO,IAAIoL,OAAO,CAAC,CAAC5K,OAAO,EAAE6K,MAAM,KAAK;MACpCjH,QAAQ,CAACjD,IAAI,EAAEnB,OAAO,EAAE,CAACsL,GAAG,EAAE1E,MAAM,KAAK;AACrC,QAAA,IAAI0E,GAAG,EACH,OAAOD,MAAM,CAACC,GAAG,CAAC;QACtB9K,OAAO,CAACoG,MAAM,CAAC;AAC3B,OAAS,CAAC;AACV,KAAK,CAAC;AACN;EACAqE,KAAA,CAAAC,OAAe,GAAGA,OAAO;AACzB,EAAA,SAAS9G,QAAQA,CAACjD,IAAI,EAAEnB,OAAO,EAAEoE,QAAQ,EAAE;AACvC,IAAA,IAAIiF,MAAM,GAAG,IAAI8B,QAAQ,CAAC7B,MAAM,CAACnI,IAAI,EAAEnB,OAAO,EAAEoE,QAAQ,CAAC;IACzDiF,MAAM,CAACgB,KAAK,EAAE;AAClB;EACAY,KAAA,CAAA7G,QAAgB,GAAGA,QAAQ;;;;;;;;;;ACjB3BxF,EAAAA,MAAM,CAACC,cAAc,CAAC0M,IAAO,EAAE,YAAY,EAAE;AAAExM,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AACjDwM,EAAAA,IAAA,CAAAC,IAAA,GAAG,MAAM;AACrB,EAAA,MAAML,QAAQ,GAAG/L,aAAmB,EAAA;AACpC,EAAA,SAASoM,MAAIA,CAACrK,IAAI,EAAEnB,OAAO,EAAE;IACzB,MAAMqJ,MAAM,GAAG,IAAI8B,QAAQ,CAAC7B,MAAM,CAACnI,IAAI,EAAEnB,OAAO,CAAC;AACjD,IAAA,OAAOqJ,MAAM,CAACgB,KAAK,EAAE;AACzB;EACAkB,IAAA,CAAAC,IAAY,GAAGA,MAAI;;;;;;;;ACPnB5M,EAAAA,MAAM,CAACC,cAAc,CAAC4M,UAAO,EAAE,YAAY,EAAE;AAAE1M,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAC3C0M,EAAAA,UAAA,CAAAC,UAAA,GAAG,MAAM;AAC3B,EAAA,MAAMC,OAAO,GAAGvM,YAAuB,EAAA;AACvC,EAAA,MAAMmM,MAAM,GAAGxK,WAAsB,EAAA;AACrC,EAAA,MAAM2K,UAAU,CAAC;IACbvK,IAAI;IACJnB,OAAO;AACP2H,IAAAA,WAAWA,CAACxG,IAAI,EAAEnB,OAAO,EAAE;MACvB,IAAI,CAACmB,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACnB,OAAO,GAAGA,OAAO;AAC9B;AACI4L,IAAAA,WAAWA,GAAG;AACV,MAAA,OAAO,IAAID,OAAO,CAACT,OAAO,EAAE,IAAI,CAAC/J,IAAI,EAAE,IAAI,CAACnB,OAAO,CAAC;AAC5D;IACI6L,YAAYA,CAACC,EAAE,EAAE;AACb,MAAA,IAAIH,OAAO,CAACvH,QAAQ,EAAE,IAAI,CAACjD,IAAI,EAAE,IAAI,CAACnB,OAAO,EAAE8L,EAAE,CAAC;AAC1D;AACIN,IAAAA,IAAIA,GAAG;AACH,MAAA,OAAO,IAAID,MAAM,CAACC,IAAI,EAAE,IAAI,CAACrK,IAAI,EAAE,IAAI,CAACnB,OAAO,CAAC;AACxD;AACA;EACAyL,UAAA,CAAAC,UAAkB,GAAGA,UAAU;;;;;;;;;;;ECpB/B,MAAMK,SAAS,GAAG,OAAO;AACzB,EAAA,MAAMC,YAAY,GAAG,CAAKD,EAAAA,EAAAA,SAAS,CAAG,CAAA,CAAA;;AAEtC;AACA;AACA;;EAEA,MAAME,WAAW,GAAG,KAAK;EACzB,MAAMC,YAAY,GAAG,KAAK;EAC1B,MAAMC,aAAa,GAAG,KAAK;EAC3B,MAAMC,aAAa,GAAG,KAAK;EAC3B,MAAMC,QAAQ,GAAG,OAAO;EACxB,MAAMC,KAAK,GAAG,MAAM;AACpB,EAAA,MAAMC,UAAU,GAAG,CAAMH,GAAAA,EAAAA,aAAa,CAAK,GAAA,CAAA;AAC3C,EAAA,MAAMI,YAAY,GAAG,CAAQJ,KAAAA,EAAAA,aAAa,CAAG,CAAA,CAAA;AAC7C,EAAA,MAAMK,UAAU,GAAG,CAAA,EAAGR,WAAW,CAAA,KAAA,EAAQM,UAAU,CAAE,CAAA;AACrD,EAAA,MAAMG,MAAM,GAAG,CAAMT,GAAAA,EAAAA,WAAW,CAAG,CAAA,CAAA;AACnC,EAAA,MAAMU,OAAO,GAAG,CAAA,GAAA,EAAMH,YAAY,CAAA,EAAGC,UAAU,CAAG,CAAA,CAAA;AAClD,EAAA,MAAMG,YAAY,GAAG,CAAA,GAAA,EAAMX,WAAW,CAAA,KAAA,EAAQM,UAAU,CAAG,CAAA,CAAA;AAC3D,EAAA,MAAMM,aAAa,GAAG,CAAMJ,GAAAA,EAAAA,UAAU,CAAG,CAAA,CAAA;AACzC,EAAA,MAAMK,YAAY,GAAG,CAAMV,GAAAA,EAAAA,aAAa,CAAG,CAAA,CAAA;AAC3C,EAAA,MAAMW,IAAI,GAAG,CAAGT,EAAAA,KAAK,CAAI,EAAA,CAAA;EACzB,MAAMU,GAAG,GAAG,GAAG;AAEf,EAAA,MAAMC,WAAW,GAAG;IAClBhB,WAAW;IACXC,YAAY;IACZC,aAAa;IACbC,aAAa;IACbC,QAAQ;IACRC,KAAK;IACLC,UAAU;IACVE,UAAU;IACVC,MAAM;IACNC,OAAO;IACPC,YAAY;IACZC,aAAa;IACbC,YAAY;IACZC,IAAI;IACJP,YAAY;AACZQ,IAAAA;GACD;;AAED;AACA;AACA;;AAEA,EAAA,MAAME,aAAa,GAAG;AACpB,IAAA,GAAGD,WAAW;IAEdb,aAAa,EAAE,CAAIL,CAAAA,EAAAA,SAAS,CAAG,CAAA,CAAA;AAC/BO,IAAAA,KAAK,EAAEN,YAAY;IACnBe,IAAI,EAAE,CAAGf,EAAAA,YAAY,CAAI,EAAA,CAAA;AACzBS,IAAAA,UAAU,EAAE,CAAA,EAAGR,WAAW,CAAA,SAAA,EAAYF,SAAS,CAAM,IAAA,CAAA;IACrDW,MAAM,EAAE,CAAMT,GAAAA,EAAAA,WAAW,CAAG,CAAA,CAAA;AAC5BU,IAAAA,OAAO,EAAE,CAAYZ,SAAAA,EAAAA,SAAS,KAAKE,WAAW,CAAA,SAAA,EAAYF,SAAS,CAAO,KAAA,CAAA;AAC1Ea,IAAAA,YAAY,EAAE,CAAA,GAAA,EAAMX,WAAW,CAAA,SAAA,EAAYF,SAAS,CAAO,KAAA,CAAA;AAC3Dc,IAAAA,aAAa,EAAE,CAAA,GAAA,EAAMZ,WAAW,CAAA,SAAA,EAAYF,SAAS,CAAO,KAAA,CAAA;IAC5De,YAAY,EAAE,CAAMf,GAAAA,EAAAA,SAAS,CAAG,CAAA,CAAA;IAChCS,YAAY,EAAE,CAAST,MAAAA,EAAAA,SAAS,CAAI,EAAA,CAAA;IACpCQ,UAAU,EAAE,CAAOR,IAAAA,EAAAA,SAAS,CAAM,IAAA,CAAA;AAClCiB,IAAAA,GAAG,EAAE;GACN;;AAED;AACA;AACA;;AAEA,EAAA,MAAMG,kBAAkB,GAAG;AACzBC,IAAAA,KAAK,EAAE,WAAW;AAClBC,IAAAA,KAAK,EAAE,QAAQ;AACfC,IAAAA,KAAK,EAAE,aAAa;AACpBC,IAAAA,KAAK,EAAE,MAAM;AACbC,IAAAA,KAAK,EAAE,kBAAkB;AACzBC,IAAAA,KAAK,EAAE,KAAK;AACZC,IAAAA,KAAK,EAAE,aAAa;AACpBC,IAAAA,KAAK,EAAE,KAAK;AACZC,IAAAA,KAAK,EAAE,cAAc;AACrBC,IAAAA,KAAK,EAAE,wCAAwC;AAC/CC,IAAAA,KAAK,EAAE,kBAAkB;AACzBC,IAAAA,KAAK,EAAE,KAAK;AACZC,IAAAA,IAAI,EAAE,YAAY;AAClBC,IAAAA,MAAM,EAAE;GACT;AAEDC,EAAAA,SAAc,GAAG;IACfC,UAAU,EAAE,IAAI,GAAG,EAAE;IACrBhB,kBAAkB;AAEpB;AACEiB,IAAAA,eAAe,EAAE,wBAAwB;AACzCC,IAAAA,uBAAuB,EAAE,2BAA2B;AACpDC,IAAAA,mBAAmB,EAAE,mBAAmB;AACxCC,IAAAA,2BAA2B,EAAE,mBAAmB;AAChDC,IAAAA,0BAA0B,EAAE,sBAAsB;AAClDC,IAAAA,sBAAsB,EAAE,2BAA2B;AAErD;AACEC,IAAAA,YAAY,EAAE;AACZ,MAAA,KAAK,EAAE,GAAG;AACV,MAAA,OAAO,EAAE,IAAI;AACb,MAAA,UAAU,EAAE;KACb;AAEH;AACEC,IAAAA,MAAM,EAAE,EAAE;AAAA;AACVC,IAAAA,MAAM,EAAE,EAAE;AAAA;;AAEZ;AACEC,IAAAA,gBAAgB,EAAE,EAAE;AAAA;AACpBC,IAAAA,gBAAgB,EAAE,EAAE;AAAA;AACpBC,IAAAA,gBAAgB,EAAE,EAAE;AAAA;AACpBC,IAAAA,gBAAgB,EAAE,GAAG;AAAA;;AAErBC,IAAAA,qBAAqB,EAAE,EAAE;AAAA;AACzBC,IAAAA,sBAAsB,EAAE,EAAE;AAAA;;AAE1BC,IAAAA,aAAa,EAAE,EAAE;AAAA;;AAEnB;AACEC,IAAAA,cAAc,EAAE,EAAE;AAAA;AAClBC,IAAAA,OAAO,EAAE,EAAE;AAAA;AACXC,IAAAA,mBAAmB,EAAE,EAAE;AAAA;AACvBC,IAAAA,oBAAoB,EAAE,EAAE;AAAA;AACxBC,IAAAA,sBAAsB,EAAE,EAAE;AAAA;AAC1BC,IAAAA,UAAU,EAAE,EAAE;AAAA;AACdC,IAAAA,UAAU,EAAE,EAAE;AAAA;AACdC,IAAAA,QAAQ,EAAE,EAAE;AAAA;AACZC,IAAAA,iBAAiB,EAAE,EAAE;AAAA;AACrBC,IAAAA,UAAU,EAAE,EAAE;AAAA;AACdC,IAAAA,qBAAqB,EAAE,EAAE;AAAA;AACzBC,IAAAA,cAAc,EAAE,EAAE;AAAA;AAClBC,IAAAA,kBAAkB,EAAE,EAAE;AAAA;AACtBC,IAAAA,iBAAiB,EAAE,EAAE;AAAA;AACrBC,IAAAA,SAAS,EAAE,EAAE;AAAA;AACbC,IAAAA,iBAAiB,EAAE,EAAE;AAAA;AACrBC,IAAAA,uBAAuB,EAAE,EAAE;AAAA;AAC3BC,IAAAA,qBAAqB,EAAE,GAAG;AAAA;AAC1BC,IAAAA,wBAAwB,EAAE,EAAE;AAAA;AAC5BC,IAAAA,cAAc,EAAE,EAAE;AAAA;AAClBC,IAAAA,mBAAmB,EAAE,GAAG;AAAA;AACxBC,IAAAA,YAAY,EAAE,EAAE;AAAA;AAChBC,IAAAA,SAAS,EAAE,EAAE;AAAA;AACbC,IAAAA,kBAAkB,EAAE,EAAE;AAAA;AACtBC,IAAAA,wBAAwB,EAAE,EAAE;AAAA;AAC5BC,IAAAA,sBAAsB,EAAE,GAAG;AAAA;AAC3BC,IAAAA,yBAAyB,EAAE,EAAE;AAAA;AAC7BC,IAAAA,cAAc,EAAE,EAAE;AAAA;AAClBC,IAAAA,iBAAiB,EAAE,EAAE;AAAA;AACrBC,IAAAA,UAAU,EAAE,EAAE;AAAA;AACdC,IAAAA,QAAQ,EAAE,CAAC;AAAA;AACXC,IAAAA,eAAe,EAAE,EAAE;AAAA;AACnBC,IAAAA,kBAAkB,EAAE,GAAG;AAAA;AACvBC,IAAAA,6BAA6B,EAAE,KAAK;AAAA;;AAEtC;AACA;AACA;;IAEEC,YAAYA,CAACC,KAAK,EAAE;MAClB,OAAO;AACL,QAAA,GAAG,EAAE;AAAEC,UAAAA,IAAI,EAAE,QAAQ;AAAEC,UAAAA,IAAI,EAAE,WAAW;AAAEC,UAAAA,KAAK,EAAE,CAAA,EAAA,EAAKH,KAAK,CAACxE,IAAI,CAAA,CAAA;SAAK;AACrE,QAAA,GAAG,EAAE;AAAEyE,UAAAA,IAAI,EAAE,OAAO;AAAEC,UAAAA,IAAI,EAAE,KAAK;AAAEC,UAAAA,KAAK,EAAE;SAAM;AAChD,QAAA,GAAG,EAAE;AAAEF,UAAAA,IAAI,EAAE,MAAM;AAAEC,UAAAA,IAAI,EAAE,KAAK;AAAEC,UAAAA,KAAK,EAAE;SAAM;AAC/C,QAAA,GAAG,EAAE;AAAEF,UAAAA,IAAI,EAAE,MAAM;AAAEC,UAAAA,IAAI,EAAE,KAAK;AAAEC,UAAAA,KAAK,EAAE;SAAM;AAC/C,QAAA,GAAG,EAAE;AAAEF,UAAAA,IAAI,EAAE,IAAI;AAAEC,UAAAA,IAAI,EAAE,KAAK;AAAEC,UAAAA,KAAK,EAAE;AAAG;OAC3C;KACF;AAEH;AACA;AACA;;IAEEC,SAASA,CAACC,KAAK,EAAE;AACf,MAAA,OAAOA,KAAK,KAAK,IAAI,GAAG1E,aAAa,GAAGD,WAAW;AACvD;GACC;;;;;;;;;;;IC/KD,MAAM;MACJmB,eAAe;MACfK,sBAAsB;MACtBH,mBAAmB;AACnBE,MAAAA;AACF,KAAC,gBAAyBpP,gBAAA,EAAA;IAE1ByS,OAAA,CAAAC,QAAA,GAAmBC,GAAG,IAAIA,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC;IACxFF,OAAA,CAAAK,aAAA,GAAwBC,GAAG,IAAI7D,mBAAmB,CAACvO,IAAI,CAACoS,GAAG,CAAC;AAC5DN,IAAAA,OAAA,CAAAO,WAAA,GAAsBD,GAAG,IAAIA,GAAG,CAAC3S,MAAM,KAAK,CAAC,IAAIqS,OAAO,CAACK,aAAa,CAACC,GAAG,CAAC;AAC3EN,IAAAA,OAAsB,CAAAQ,WAAA,GAAAF,GAAG,IAAIA,GAAG,CAACtS,OAAO,CAAC2O,0BAA0B,EAAE,MAAM,CAAC;AAC5EqD,IAAAA,OAAyB,CAAAS,cAAA,GAAAH,GAAG,IAAIA,GAAG,CAACtS,OAAO,CAACuO,eAAe,EAAE,GAAG,CAAC;IAEjEyD,OAAA,CAAAU,SAAA,GAAoB,MAAM;MACxB,IAAI,OAAOC,SAAS,KAAK,WAAW,IAAIA,SAAS,CAACnS,QAAQ,EAAE;QAC1D,MAAMA,QAAQ,GAAGmS,SAAS,CAACnS,QAAQ,CAACoS,WAAW,EAAE;AACjD,QAAA,OAAOpS,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,SAAS;AACzD;MAEE,IAAI,OAAOD,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,QAAQ,EAAE;AACtD,QAAA,OAAOD,OAAO,CAACC,QAAQ,KAAK,OAAO;AACvC;AAEE,MAAA,OAAO,KAAK;KACb;AAEDwR,IAAAA,OAAA,CAAAa,iBAAA,GAA4BP,GAAG,IAAI;AACjC,MAAA,OAAOA,GAAG,CAACtS,OAAO,CAAC4O,sBAAsB,EAAEkE,KAAK,IAAI;AAClD,QAAA,OAAOA,KAAK,KAAK,IAAI,GAAG,EAAE,GAAGA,KAAK;AACtC,OAAG,CAAC;KACH;IAEDd,OAAA,CAAAe,UAAA,GAAqB,CAACC,KAAK,EAAEC,IAAI,EAAEC,OAAO,KAAK;MAC7C,MAAMC,GAAG,GAAGH,KAAK,CAACI,WAAW,CAACH,IAAI,EAAEC,OAAO,CAAC;AAC5C,MAAA,IAAIC,GAAG,KAAK,EAAE,EAAE,OAAOH,KAAK;MAC5B,IAAIA,KAAK,CAACG,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,OAAOnB,OAAO,CAACe,UAAU,CAACC,KAAK,EAAEC,IAAI,EAAEE,GAAG,GAAG,CAAC,CAAC;AAC5E,MAAA,OAAO,GAAGH,KAAK,CAACvP,KAAK,CAAC,CAAC,EAAE0P,GAAG,CAAC,CAAA,EAAA,EAAKH,KAAK,CAACvP,KAAK,CAAC0P,GAAG,CAAC,CAAE,CAAA;KACrD;IAEDnB,OAAA,CAAAqB,YAAA,GAAuB,CAACL,KAAK,EAAE1O,KAAK,GAAG,EAAE,KAAK;MAC5C,IAAIyC,MAAM,GAAGiM,KAAK;AAClB,MAAA,IAAIjM,MAAM,CAACrG,UAAU,CAAC,IAAI,CAAC,EAAE;AAC3BqG,QAAAA,MAAM,GAAGA,MAAM,CAACtD,KAAK,CAAC,CAAC,CAAC;QACxBa,KAAK,CAACgP,MAAM,GAAG,IAAI;AACvB;AACE,MAAA,OAAOvM,MAAM;KACd;AAEDiL,IAAAA,OAAqB,CAAAuB,UAAA,GAAA,CAACP,KAAK,EAAE1O,KAAK,GAAG,EAAE,EAAEnE,OAAO,GAAG,EAAE,KAAK;MACxD,MAAMqT,OAAO,GAAGrT,OAAO,CAACsT,QAAQ,GAAG,EAAE,GAAG,GAAG;MAC3C,MAAMC,MAAM,GAAGvT,OAAO,CAACsT,QAAQ,GAAG,EAAE,GAAG,GAAG;MAE1C,IAAI1M,MAAM,GAAG,CAAGyM,EAAAA,OAAO,MAAMR,KAAK,CAAA,CAAA,EAAIU,MAAM,CAAE,CAAA;AAC9C,MAAA,IAAIpP,KAAK,CAACqP,OAAO,KAAK,IAAI,EAAE;QAC1B5M,MAAM,GAAG,CAAUA,OAAAA,EAAAA,MAAM,CAAO,KAAA,CAAA;AACpC;AACE,MAAA,OAAOA,MAAM;KACd;AAEDiL,IAAAA,OAAmB,CAAA7G,QAAA,GAAA,CAAC3L,IAAI,EAAE;AAAEoU,MAAAA;KAAS,GAAG,EAAE,KAAK;MAC7C,MAAMC,IAAI,GAAGrU,IAAI,CAACsU,KAAK,CAACF,OAAO,GAAG,OAAO,GAAG,GAAG,CAAC;MAChD,MAAMG,IAAI,GAAGF,IAAI,CAACA,IAAI,CAAClU,MAAM,GAAG,CAAC,CAAC;MAElC,IAAIoU,IAAI,KAAK,EAAE,EAAE;AACf,QAAA,OAAOF,IAAI,CAACA,IAAI,CAAClU,MAAM,GAAG,CAAC,CAAC;AAChC;AAEE,MAAA,OAAOoU,IAAI;KACZ;;;;;;;;;;ACrED,EAAA,MAAM9U,KAAK,gBAAqBM,YAAA,EAAA;EAChC,MAAM;IACJ+P,aAAa;AAAA;IACbE,OAAO;AAAA;IACPC,mBAAmB;AAAA;IACnBI,UAAU;AAAA;IACVC,QAAQ;AAAA;IACRG,qBAAqB;AAAA;IACrBE,kBAAkB;AAAA;IAClBK,qBAAqB;AAAA;IACrBpB,qBAAqB;AAAA;IACrBqB,wBAAwB;AAAA;IACxBI,SAAS;AAAA;IACTC,kBAAkB;AAAA;IAClBE,sBAAsB;AAAA;IACtB3B,sBAAsB;AAAA;AACtB4B,IAAAA,yBAAyB;AAC3B,GAAC,gBAAyB/P,gBAAA,EAAA;EAE1B,MAAM8S,eAAe,GAAGC,IAAI,IAAI;AAC9B,IAAA,OAAOA,IAAI,KAAK9D,kBAAkB,IAAI8D,IAAI,KAAKxE,mBAAmB;GACnE;EAED,MAAM3J,KAAK,GAAGoO,KAAK,IAAI;AACrB,IAAA,IAAIA,KAAK,CAACC,QAAQ,KAAK,IAAI,EAAE;MAC3BD,KAAK,CAACpO,KAAK,GAAGoO,KAAK,CAACE,UAAU,GAAGC,QAAQ,GAAG,CAAC;AACjD;GACC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAA,MAAMC,IAAI,GAAGA,CAACtB,KAAK,EAAE7S,OAAO,KAAK;AAC/B,IAAA,MAAMoU,IAAI,GAAGpU,OAAO,IAAI,EAAE;AAE1B,IAAA,MAAMR,MAAM,GAAGqT,KAAK,CAACrT,MAAM,GAAG,CAAC;AAC/B,IAAA,MAAM6U,SAAS,GAAGD,IAAI,CAACE,KAAK,KAAK,IAAI,IAAIF,IAAI,CAACC,SAAS,KAAK,IAAI;IAChE,MAAME,OAAO,GAAG,EAAE;IAClB,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMF,KAAK,GAAG,EAAE;IAEhB,IAAInC,GAAG,GAAGU,KAAK;IACf,IAAI4B,KAAK,GAAG,EAAE;IACd,IAAIpK,KAAK,GAAG,CAAC;IACb,IAAIqK,SAAS,GAAG,CAAC;IACjB,IAAIC,OAAO,GAAG,KAAK;IACnB,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAIC,MAAM,GAAG,KAAK;IAClB,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAIb,UAAU,GAAG,KAAK;IACtB,IAAIc,YAAY,GAAG,KAAK;IACxB,IAAIC,WAAW,GAAG,KAAK;IACvB,IAAIxB,OAAO,GAAG,KAAK;IACnB,IAAIyB,cAAc,GAAG,KAAK;IAC1B,IAAIC,QAAQ,GAAG,KAAK;IACpB,IAAIC,MAAM,GAAG,CAAC;AACd,IAAA,IAAIC,IAAI;AACR,IAAA,IAAItB,IAAI;AACR,IAAA,IAAIC,KAAK,GAAG;AAAEhV,MAAAA,KAAK,EAAE,EAAE;AAAE4G,MAAAA,KAAK,EAAE,CAAC;AAAEkP,MAAAA,MAAM,EAAE;KAAO;AAElD,IAAA,MAAMQ,GAAG,GAAGA,MAAMZ,KAAK,IAAIjV,MAAM;IACjC,MAAM8V,IAAI,GAAGA,MAAMnD,GAAG,CAACoD,UAAU,CAACd,KAAK,GAAG,CAAC,CAAC;IAC5C,MAAMe,OAAO,GAAGA,MAAM;AACpBJ,MAAAA,IAAI,GAAGtB,IAAI;AACX,MAAA,OAAO3B,GAAG,CAACoD,UAAU,CAAC,EAAEd,KAAK,CAAC;KAC/B;IAED,OAAOA,KAAK,GAAGjV,MAAM,EAAE;MACrBsU,IAAI,GAAG0B,OAAO,EAAE;AAChB,MAAA,IAAIC,IAAI;MAER,IAAI3B,IAAI,KAAKxE,mBAAmB,EAAE;AAChC0F,QAAAA,WAAW,GAAGjB,KAAK,CAACiB,WAAW,GAAG,IAAI;QACtClB,IAAI,GAAG0B,OAAO,EAAE;QAEhB,IAAI1B,IAAI,KAAKzD,qBAAqB,EAAE;AAClC0E,UAAAA,YAAY,GAAG,IAAI;AAC3B;AACM,QAAA;AACN;AAEI,MAAA,IAAIA,YAAY,KAAK,IAAI,IAAIjB,IAAI,KAAKzD,qBAAqB,EAAE;AAC3D8E,QAAAA,MAAM,EAAE;AAER,QAAA,OAAOE,GAAG,EAAE,KAAK,IAAI,KAAKvB,IAAI,GAAG0B,OAAO,EAAE,CAAC,EAAE;UAC3C,IAAI1B,IAAI,KAAKxE,mBAAmB,EAAE;AAChC0F,YAAAA,WAAW,GAAGjB,KAAK,CAACiB,WAAW,GAAG,IAAI;AACtCQ,YAAAA,OAAO,EAAE;AACT,YAAA;AACV;UAEQ,IAAI1B,IAAI,KAAKzD,qBAAqB,EAAE;AAClC8E,YAAAA,MAAM,EAAE;AACR,YAAA;AACV;AAEQ,UAAA,IAAIJ,YAAY,KAAK,IAAI,IAAIjB,IAAI,KAAKnE,QAAQ,IAAI,CAACmE,IAAI,GAAG0B,OAAO,EAAE,MAAM7F,QAAQ,EAAE;AACjFgF,YAAAA,OAAO,GAAGZ,KAAK,CAACY,OAAO,GAAG,IAAI;AAC9BE,YAAAA,MAAM,GAAGd,KAAK,CAACc,MAAM,GAAG,IAAI;AAC5BK,YAAAA,QAAQ,GAAG,IAAI;YAEf,IAAIb,SAAS,KAAK,IAAI,EAAE;AACtB,cAAA;AACZ;AAEU,YAAA;AACV;AAEQ,UAAA,IAAIU,YAAY,KAAK,IAAI,IAAIjB,IAAI,KAAKpE,UAAU,EAAE;AAChDiF,YAAAA,OAAO,GAAGZ,KAAK,CAACY,OAAO,GAAG,IAAI;AAC9BE,YAAAA,MAAM,GAAGd,KAAK,CAACc,MAAM,GAAG,IAAI;AAC5BK,YAAAA,QAAQ,GAAG,IAAI;YAEf,IAAIb,SAAS,KAAK,IAAI,EAAE;AACtB,cAAA;AACZ;AAEU,YAAA;AACV;UAEQ,IAAIP,IAAI,KAAKjD,sBAAsB,EAAE;AACnCsE,YAAAA,MAAM,EAAE;YAER,IAAIA,MAAM,KAAK,CAAC,EAAE;AAChBJ,cAAAA,YAAY,GAAG,KAAK;AACpBJ,cAAAA,OAAO,GAAGZ,KAAK,CAACY,OAAO,GAAG,IAAI;AAC9BO,cAAAA,QAAQ,GAAG,IAAI;AACf,cAAA;AACZ;AACA;AACA;QAEM,IAAIb,SAAS,KAAK,IAAI,EAAE;AACtB,UAAA;AACR;AAEM,QAAA;AACN;MAEI,IAAIP,IAAI,KAAK9D,kBAAkB,EAAE;AAC/BuE,QAAAA,OAAO,CAAC3S,IAAI,CAAC6S,KAAK,CAAC;AACnBD,QAAAA,MAAM,CAAC5S,IAAI,CAACmS,KAAK,CAAC;AAClBA,QAAAA,KAAK,GAAG;AAAEhV,UAAAA,KAAK,EAAE,EAAE;AAAE4G,UAAAA,KAAK,EAAE,CAAC;AAAEkP,UAAAA,MAAM,EAAE;SAAO;QAE9C,IAAIK,QAAQ,KAAK,IAAI,EAAE;QACvB,IAAIE,IAAI,KAAKzF,QAAQ,IAAI8E,KAAK,KAAMpK,KAAK,GAAG,CAAE,EAAE;AAC9CA,UAAAA,KAAK,IAAI,CAAC;AACV,UAAA;AACR;QAEMqK,SAAS,GAAGD,KAAK,GAAG,CAAC;AACrB,QAAA;AACN;AAEI,MAAA,IAAIL,IAAI,CAACsB,KAAK,KAAK,IAAI,EAAE;QACvB,MAAMC,aAAa,GAAG7B,IAAI,KAAKpD,SAAA,IAC1BoD,IAAI,KAAKzE,OAAA,IACTyE,IAAI,KAAK3E,aAAA,IACT2E,IAAI,KAAKnD,kBAAA,IACTmD,IAAI,KAAKhE,qBAAqB;QAEnC,IAAI6F,aAAa,KAAK,IAAI,IAAIL,IAAI,EAAE,KAAKrG,qBAAqB,EAAE;AAC9D4F,UAAAA,MAAM,GAAGd,KAAK,CAACc,MAAM,GAAG,IAAI;AAC5BC,UAAAA,SAAS,GAAGf,KAAK,CAACe,SAAS,GAAG,IAAI;AAClCI,UAAAA,QAAQ,GAAG,IAAI;AACf,UAAA,IAAIpB,IAAI,KAAKhE,qBAAqB,IAAI2E,KAAK,KAAKpK,KAAK,EAAE;AACrD4K,YAAAA,cAAc,GAAG,IAAI;AAC/B;UAEQ,IAAIZ,SAAS,KAAK,IAAI,EAAE;AACtB,YAAA,OAAOgB,GAAG,EAAE,KAAK,IAAI,KAAKvB,IAAI,GAAG0B,OAAO,EAAE,CAAC,EAAE;cAC3C,IAAI1B,IAAI,KAAKxE,mBAAmB,EAAE;AAChC0F,gBAAAA,WAAW,GAAGjB,KAAK,CAACiB,WAAW,GAAG,IAAI;gBACtClB,IAAI,GAAG0B,OAAO,EAAE;AAChB,gBAAA;AACd;cAEY,IAAI1B,IAAI,KAAK5E,sBAAsB,EAAE;AACnC2F,gBAAAA,MAAM,GAAGd,KAAK,CAACc,MAAM,GAAG,IAAI;AAC5BK,gBAAAA,QAAQ,GAAG,IAAI;AACf,gBAAA;AACd;AACA;AACU,YAAA;AACV;AACQ,UAAA;AACR;AACA;MAEI,IAAIpB,IAAI,KAAK3E,aAAa,EAAE;QAC1B,IAAIiG,IAAI,KAAKjG,aAAa,EAAE8E,UAAU,GAAGF,KAAK,CAACE,UAAU,GAAG,IAAI;AAChEY,QAAAA,MAAM,GAAGd,KAAK,CAACc,MAAM,GAAG,IAAI;AAC5BK,QAAAA,QAAQ,GAAG,IAAI;QAEf,IAAIb,SAAS,KAAK,IAAI,EAAE;AACtB,UAAA;AACR;AACM,QAAA;AACN;MAEI,IAAIP,IAAI,KAAKnD,kBAAkB,EAAE;AAC/BkE,QAAAA,MAAM,GAAGd,KAAK,CAACc,MAAM,GAAG,IAAI;AAC5BK,QAAAA,QAAQ,GAAG,IAAI;QAEf,IAAIb,SAAS,KAAK,IAAI,EAAE;AACtB,UAAA;AACR;AACM,QAAA;AACN;MAEI,IAAIP,IAAI,KAAKxD,wBAAwB,EAAE;AACrC,QAAA,OAAO+E,GAAG,EAAE,KAAK,IAAI,KAAKI,IAAI,GAAGD,OAAO,EAAE,CAAC,EAAE;UAC3C,IAAIC,IAAI,KAAKnG,mBAAmB,EAAE;AAChC0F,YAAAA,WAAW,GAAGjB,KAAK,CAACiB,WAAW,GAAG,IAAI;AACtCQ,YAAAA,OAAO,EAAE;AACT,YAAA;AACV;UAEQ,IAAIC,IAAI,KAAK3E,yBAAyB,EAAE;AACtC8D,YAAAA,SAAS,GAAGb,KAAK,CAACa,SAAS,GAAG,IAAI;AAClCC,YAAAA,MAAM,GAAGd,KAAK,CAACc,MAAM,GAAG,IAAI;AAC5BK,YAAAA,QAAQ,GAAG,IAAI;AACf,YAAA;AACV;AACA;QAEM,IAAIb,SAAS,KAAK,IAAI,EAAE;AACtB,UAAA;AACR;AAEM,QAAA;AACN;AAEI,MAAA,IAAID,IAAI,CAACwB,QAAQ,KAAK,IAAI,IAAI9B,IAAI,KAAKhE,qBAAqB,IAAI2E,KAAK,KAAKpK,KAAK,EAAE;AAC/EmJ,QAAAA,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAG,IAAI;AAC9BnJ,QAAAA,KAAK,EAAE;AACP,QAAA;AACN;MAEI,IAAI+J,IAAI,CAACyB,OAAO,KAAK,IAAI,IAAI/B,IAAI,KAAK7E,qBAAqB,EAAE;AAC3D4F,QAAAA,MAAM,GAAGd,KAAK,CAACc,MAAM,GAAG,IAAI;QAE5B,IAAIR,SAAS,KAAK,IAAI,EAAE;AACtB,UAAA,OAAOgB,GAAG,EAAE,KAAK,IAAI,KAAKvB,IAAI,GAAG0B,OAAO,EAAE,CAAC,EAAE;YAC3C,IAAI1B,IAAI,KAAK7E,qBAAqB,EAAE;AAClC+F,cAAAA,WAAW,GAAGjB,KAAK,CAACiB,WAAW,GAAG,IAAI;cACtClB,IAAI,GAAG0B,OAAO,EAAE;AAChB,cAAA;AACZ;YAEU,IAAI1B,IAAI,KAAK5E,sBAAsB,EAAE;AACnCgG,cAAAA,QAAQ,GAAG,IAAI;AACf,cAAA;AACZ;AACA;AACQ,UAAA;AACR;AACM,QAAA;AACN;MAEI,IAAIL,MAAM,KAAK,IAAI,EAAE;AACnBK,QAAAA,QAAQ,GAAG,IAAI;QAEf,IAAIb,SAAS,KAAK,IAAI,EAAE;AACtB,UAAA;AACR;AAEM,QAAA;AACN;AACA;AAEE,IAAA,IAAID,IAAI,CAACsB,KAAK,KAAK,IAAI,EAAE;AACvBZ,MAAAA,SAAS,GAAG,KAAK;AACjBD,MAAAA,MAAM,GAAG,KAAK;AAClB;IAEE,IAAIiB,IAAI,GAAG3D,GAAG;IACd,IAAIgB,MAAM,GAAG,EAAE;IACf,IAAI4C,IAAI,GAAG,EAAE;IAEb,IAAI1L,KAAK,GAAG,CAAC,EAAE;MACb8I,MAAM,GAAGhB,GAAG,CAAC7O,KAAK,CAAC,CAAC,EAAE+G,KAAK,CAAC;AAC5B8H,MAAAA,GAAG,GAAGA,GAAG,CAAC7O,KAAK,CAAC+G,KAAK,CAAC;AACtBqK,MAAAA,SAAS,IAAIrK,KAAK;AACtB;IAEE,IAAIyL,IAAI,IAAIjB,MAAM,KAAK,IAAI,IAAIH,SAAS,GAAG,CAAC,EAAE;MAC5CoB,IAAI,GAAG3D,GAAG,CAAC7O,KAAK,CAAC,CAAC,EAAEoR,SAAS,CAAC;AAC9BqB,MAAAA,IAAI,GAAG5D,GAAG,CAAC7O,KAAK,CAACoR,SAAS,CAAC;AAC/B,KAAG,MAAM,IAAIG,MAAM,KAAK,IAAI,EAAE;AAC1BiB,MAAAA,IAAI,GAAG,EAAE;AACTC,MAAAA,IAAI,GAAG5D,GAAG;AACd,KAAG,MAAM;AACL2D,MAAAA,IAAI,GAAG3D,GAAG;AACd;AAEE,IAAA,IAAI2D,IAAI,IAAIA,IAAI,KAAK,EAAE,IAAIA,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK3D,GAAG,EAAE;AACvD,MAAA,IAAI0B,eAAe,CAACiC,IAAI,CAACP,UAAU,CAACO,IAAI,CAACtW,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;QACrDsW,IAAI,GAAGA,IAAI,CAACxS,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAC9B;AACA;AAEE,IAAA,IAAI8Q,IAAI,CAAC4B,QAAQ,KAAK,IAAI,EAAE;MAC1B,IAAID,IAAI,EAAEA,IAAI,GAAGjX,KAAK,CAAC4T,iBAAiB,CAACqD,IAAI,CAAC;AAE9C,MAAA,IAAID,IAAI,IAAId,WAAW,KAAK,IAAI,EAAE;AAChCc,QAAAA,IAAI,GAAGhX,KAAK,CAAC4T,iBAAiB,CAACoD,IAAI,CAAC;AAC1C;AACA;AAEE,IAAA,MAAM3R,KAAK,GAAG;MACZgP,MAAM;MACNN,KAAK;MACLxI,KAAK;MACLyL,IAAI;MACJC,IAAI;MACJpB,OAAO;MACPC,SAAS;MACTC,MAAM;MACNC,SAAS;MACTb,UAAU;MACVT,OAAO;AACPyB,MAAAA;KACD;AAED,IAAA,IAAIb,IAAI,CAACI,MAAM,KAAK,IAAI,EAAE;MACxBrQ,KAAK,CAACmG,QAAQ,GAAG,CAAC;AAClB,MAAA,IAAI,CAACuJ,eAAe,CAACC,IAAI,CAAC,EAAE;AAC1BU,QAAAA,MAAM,CAAC5S,IAAI,CAACmS,KAAK,CAAC;AACxB;MACI5P,KAAK,CAACqQ,MAAM,GAAGA,MAAM;AACzB;IAEE,IAAIJ,IAAI,CAACE,KAAK,KAAK,IAAI,IAAIF,IAAI,CAACI,MAAM,KAAK,IAAI,EAAE;AAC/C,MAAA,IAAIyB,SAAS;AAEb,MAAA,KAAK,IAAIjD,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGuB,OAAO,CAAC/U,MAAM,EAAEwT,GAAG,EAAE,EAAE;QAC7C,MAAMkD,CAAC,GAAGD,SAAS,GAAGA,SAAS,GAAG,CAAC,GAAG5L,KAAK;AAC3C,QAAA,MAAMM,CAAC,GAAG4J,OAAO,CAACvB,GAAG,CAAC;QACtB,MAAMjU,KAAK,GAAG8T,KAAK,CAACvP,KAAK,CAAC4S,CAAC,EAAEvL,CAAC,CAAC;QAC/B,IAAIyJ,IAAI,CAACI,MAAM,EAAE;AACf,UAAA,IAAIxB,GAAG,KAAK,CAAC,IAAI3I,KAAK,KAAK,CAAC,EAAE;AAC5BmK,YAAAA,MAAM,CAACxB,GAAG,CAAC,CAACgB,QAAQ,GAAG,IAAI;AAC3BQ,YAAAA,MAAM,CAACxB,GAAG,CAAC,CAACjU,KAAK,GAAGoU,MAAM;AACpC,WAAS,MAAM;AACLqB,YAAAA,MAAM,CAACxB,GAAG,CAAC,CAACjU,KAAK,GAAGA,KAAK;AACnC;AACQ4G,UAAAA,KAAK,CAAC6O,MAAM,CAACxB,GAAG,CAAC,CAAC;UAClB7O,KAAK,CAACmG,QAAQ,IAAIkK,MAAM,CAACxB,GAAG,CAAC,CAACrN,KAAK;AAC3C;AACM,QAAA,IAAIqN,GAAG,KAAK,CAAC,IAAIjU,KAAK,KAAK,EAAE,EAAE;AAC7BuV,UAAAA,KAAK,CAAC1S,IAAI,CAAC7C,KAAK,CAAC;AACzB;AACMkX,QAAAA,SAAS,GAAGtL,CAAC;AACnB;MAEI,IAAIsL,SAAS,IAAIA,SAAS,GAAG,CAAC,GAAGpD,KAAK,CAACrT,MAAM,EAAE;QAC7C,MAAMT,KAAK,GAAG8T,KAAK,CAACvP,KAAK,CAAC2S,SAAS,GAAG,CAAC,CAAC;AACxC3B,QAAAA,KAAK,CAAC1S,IAAI,CAAC7C,KAAK,CAAC;QAEjB,IAAIqV,IAAI,CAACI,MAAM,EAAE;UACfA,MAAM,CAACA,MAAM,CAAChV,MAAM,GAAG,CAAC,CAAC,CAACT,KAAK,GAAGA,KAAK;UACvC4G,KAAK,CAAC6O,MAAM,CAACA,MAAM,CAAChV,MAAM,GAAG,CAAC,CAAC,CAAC;AAChC2E,UAAAA,KAAK,CAACmG,QAAQ,IAAIkK,MAAM,CAACA,MAAM,CAAChV,MAAM,GAAG,CAAC,CAAC,CAACmG,KAAK;AACzD;AACA;MAEIxB,KAAK,CAACoQ,OAAO,GAAGA,OAAO;MACvBpQ,KAAK,CAACmQ,KAAK,GAAGA,KAAK;AACvB;AAEE,IAAA,OAAOnQ,KAAK;GACb;AAEDgS,EAAAA,MAAc,GAAGhC,IAAI;;;;;;;;;ACpYrB,EAAA,MAAMjG,SAAS,gBAAyB9O,gBAAA,EAAA;AACxC,EAAA,MAAMN,KAAK,gBAAqBiC,YAAA,EAAA;;AAEhC;AACA;AACA;;EAEA,MAAM;IACJoN,UAAU;IACVhB,kBAAkB;IAClBkB,uBAAuB;IACvBE,2BAA2B;AAC3BG,IAAAA;AACF,GAAC,GAAGR,SAAS;;AAEb;AACA;AACA;;AAEA,EAAA,MAAMkI,WAAW,GAAGA,CAACC,IAAI,EAAErW,OAAO,KAAK;AACrC,IAAA,IAAI,OAAOA,OAAO,CAACoW,WAAW,KAAK,UAAU,EAAE;MAC7C,OAAOpW,OAAO,CAACoW,WAAW,CAAC,GAAGC,IAAI,EAAErW,OAAO,CAAC;AAChD;IAEEqW,IAAI,CAACC,IAAI,EAAE;IACX,MAAMvX,KAAK,GAAG,CAAIsX,CAAAA,EAAAA,IAAI,CAACE,IAAI,CAAC,GAAG,CAAC,CAAG,CAAA,CAAA;IAEnC,IAAI;AACN;MACI,IAAIC,MAAM,CAACzX,KAAK,CAAC;KAClB,CAAC,OAAO0X,EAAE,EAAE;AACX,MAAA,OAAOJ,IAAI,CAACK,GAAG,CAAC3N,CAAC,IAAIjK,KAAK,CAACuT,WAAW,CAACtJ,CAAC,CAAC,CAAC,CAACwN,IAAI,CAAC,IAAI,CAAC;AACzD;AAEE,IAAA,OAAOxX,KAAK;GACb;;AAED;AACA;AACA;;AAEA,EAAA,MAAM4X,WAAW,GAAGA,CAACnF,IAAI,EAAEsB,IAAI,KAAK;AAClC,IAAA,OAAO,WAAWtB,IAAI,CAAA,GAAA,EAAMsB,IAAI,CAAA,aAAA,EAAgBA,IAAI,CAA+B,6BAAA,CAAA;GACpF;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAA,MAAM8D,KAAK,GAAGA,CAAC/D,KAAK,EAAE7S,OAAO,KAAK;AAChC,IAAA,IAAI,OAAO6S,KAAK,KAAK,QAAQ,EAAE;AAC7B,MAAA,MAAM,IAAIgE,SAAS,CAAC,mBAAmB,CAAC;AAC5C;AAEEhE,IAAAA,KAAK,GAAGnE,YAAY,CAACmE,KAAK,CAAC,IAAIA,KAAK;AAEpC,IAAA,MAAMuB,IAAI,GAAG;MAAE,GAAGpU;KAAS;IAC3B,MAAM8W,GAAG,GAAG,OAAO1C,IAAI,CAAC2C,SAAS,KAAK,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC9I,UAAU,EAAEiG,IAAI,CAAC2C,SAAS,CAAC,GAAG5I,UAAU;AAElG,IAAA,IAAI+I,GAAG,GAAGrE,KAAK,CAACrT,MAAM;IACtB,IAAI0X,GAAG,GAAGJ,GAAG,EAAE;MACb,MAAM,IAAIK,WAAW,CAAC,CAAA,cAAA,EAAiBD,GAAG,CAAqCJ,kCAAAA,EAAAA,GAAG,EAAE,CAAC;AACzF;AAEE,IAAA,MAAMM,GAAG,GAAG;AAAE5F,MAAAA,IAAI,EAAE,KAAK;AAAEzS,MAAAA,KAAK,EAAE,EAAE;AAAE6H,MAAAA,MAAM,EAAEwN,IAAI,CAACf,OAAO,IAAI;KAAI;AAClE,IAAA,MAAMmB,MAAM,GAAG,CAAC4C,GAAG,CAAC;IAEpB,MAAMC,OAAO,GAAGjD,IAAI,CAACiD,OAAO,GAAG,EAAE,GAAG,IAAI;;AAE1C;IACE,MAAMC,cAAc,GAAGpJ,SAAS,CAACyD,SAAS,CAACyC,IAAI,CAACX,OAAO,CAAC;AACxD,IAAA,MAAM8D,aAAa,GAAGrJ,SAAS,CAACoD,YAAY,CAACgG,cAAc,CAAC;IAE5D,MAAM;MACJrL,WAAW;MACXC,YAAY;MACZE,aAAa;MACbC,QAAQ;MACRI,UAAU;MACVC,MAAM;MACNE,YAAY;MACZC,aAAa;MACbP,KAAK;MACLQ,YAAY;MACZC,IAAI;AACJP,MAAAA;AACJ,KAAG,GAAG8K,cAAc;IAElB,MAAME,QAAQ,GAAGpD,IAAI,IAAI;AACvB,MAAA,OAAO,CAAIiD,CAAAA,EAAAA,OAAO,CAAS7K,MAAAA,EAAAA,YAAY,CAAG4H,EAAAA,IAAI,CAACqD,GAAG,GAAGhL,UAAU,GAAGR,WAAW,CAAQ,MAAA,CAAA;KACtF;IAED,MAAMyL,KAAK,GAAGtD,IAAI,CAACqD,GAAG,GAAG,EAAE,GAAG/K,MAAM;IACpC,MAAMiL,UAAU,GAAGvD,IAAI,CAACqD,GAAG,GAAGnL,KAAK,GAAGQ,YAAY;AAClD,IAAA,IAAI8K,IAAI,GAAGxD,IAAI,CAACyD,IAAI,KAAK,IAAI,GAAGL,QAAQ,CAACpD,IAAI,CAAC,GAAGrH,IAAI;IAErD,IAAIqH,IAAI,CAACiD,OAAO,EAAE;MAChBO,IAAI,GAAG,CAAIA,CAAAA,EAAAA,IAAI,CAAG,CAAA,CAAA;AACtB;;AAEA;AACE,IAAA,IAAI,OAAOxD,IAAI,CAACsB,KAAK,KAAK,SAAS,EAAE;AACnCtB,MAAAA,IAAI,CAAC0D,SAAS,GAAG1D,IAAI,CAACsB,KAAK;AAC/B;AAEE,IAAA,MAAMvR,KAAK,GAAG;MACZ0O,KAAK;MACL4B,KAAK,EAAE,EAAE;AACTpK,MAAAA,KAAK,EAAE,CAAC;AACRoN,MAAAA,GAAG,EAAErD,IAAI,CAACqD,GAAG,KAAK,IAAI;AACtBM,MAAAA,QAAQ,EAAE,EAAE;AACZnR,MAAAA,MAAM,EAAE,EAAE;AACVuM,MAAAA,MAAM,EAAE,EAAE;AACV6E,MAAAA,SAAS,EAAE,KAAK;AAChBxE,MAAAA,OAAO,EAAE,KAAK;AACdyE,MAAAA,QAAQ,EAAE,CAAC;AACX9C,MAAAA,MAAM,EAAE,CAAC;AACT+C,MAAAA,MAAM,EAAE,CAAC;AACTC,MAAAA,MAAM,EAAE,CAAC;AACTX,MAAAA,QAAQ,EAAE,KAAK;AACfhD,MAAAA;KACD;IAED3B,KAAK,GAAG/T,KAAK,CAACoU,YAAY,CAACL,KAAK,EAAE1O,KAAK,CAAC;IACxC+S,GAAG,GAAGrE,KAAK,CAACrT,MAAM;IAElB,MAAM4Y,QAAQ,GAAG,EAAE;IACnB,MAAMjD,MAAM,GAAG,EAAE;IACjB,MAAMkD,KAAK,GAAG,EAAE;IAChB,IAAIjD,IAAI,GAAGgC,GAAG;AACd,IAAA,IAAIrY,KAAK;;AAEX;AACA;AACA;;IAEE,MAAMsW,GAAG,GAAGA,MAAMlR,KAAK,CAACsQ,KAAK,KAAKyC,GAAG,GAAG,CAAC;AACzC,IAAA,MAAM5B,IAAI,GAAGnR,KAAK,CAACmR,IAAI,GAAG,CAACY,CAAC,GAAG,CAAC,KAAKrD,KAAK,CAAC1O,KAAK,CAACsQ,KAAK,GAAGyB,CAAC,CAAC;AAC3D,IAAA,MAAMV,OAAO,GAAGrR,KAAK,CAACqR,OAAO,GAAG,MAAM3C,KAAK,CAAC,EAAE1O,KAAK,CAACsQ,KAAK,CAAC,IAAI,EAAE;AAChE,IAAA,MAAM6D,SAAS,GAAGA,MAAMzF,KAAK,CAACvP,KAAK,CAACa,KAAK,CAACsQ,KAAK,GAAG,CAAC,CAAC;IACpD,MAAM8D,OAAO,GAAGA,CAACxZ,KAAK,GAAG,EAAE,EAAEiJ,GAAG,GAAG,CAAC,KAAK;MACvC7D,KAAK,CAAC4T,QAAQ,IAAIhZ,KAAK;MACvBoF,KAAK,CAACsQ,KAAK,IAAIzM,GAAG;KACnB;IAED,MAAMuL,MAAM,GAAGQ,KAAK,IAAI;AACtB5P,MAAAA,KAAK,CAACyC,MAAM,IAAImN,KAAK,CAACnN,MAAM,IAAI,IAAI,GAAGmN,KAAK,CAACnN,MAAM,GAAGmN,KAAK,CAAChV,KAAK;AACjEwZ,MAAAA,OAAO,CAACxE,KAAK,CAAChV,KAAK,CAAC;KACrB;IAED,MAAMyZ,MAAM,GAAGA,MAAM;MACnB,IAAI9Q,KAAK,GAAG,CAAC;MAEb,OAAO4N,IAAI,EAAE,KAAK,GAAG,KAAKA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE;AAC7DE,QAAAA,OAAO,EAAE;QACTrR,KAAK,CAACkG,KAAK,EAAE;AACb3C,QAAAA,KAAK,EAAE;AACb;AAEI,MAAA,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;AACnB,QAAA,OAAO,KAAK;AAClB;MAEIvD,KAAK,CAACqP,OAAO,GAAG,IAAI;MACpBrP,KAAK,CAACkG,KAAK,EAAE;AACb,MAAA,OAAO,IAAI;KACZ;IAED,MAAMoO,SAAS,GAAGjH,IAAI,IAAI;MACxBrN,KAAK,CAACqN,IAAI,CAAC,EAAE;AACb6G,MAAAA,KAAK,CAACzW,IAAI,CAAC4P,IAAI,CAAC;KACjB;IAED,MAAMkH,SAAS,GAAGlH,IAAI,IAAI;MACxBrN,KAAK,CAACqN,IAAI,CAAC,EAAE;MACb6G,KAAK,CAACM,GAAG,EAAE;KACZ;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;IAEE,MAAM/W,IAAI,GAAGgX,GAAG,IAAI;AAClB,MAAA,IAAIxD,IAAI,CAAC5D,IAAI,KAAK,UAAU,EAAE;AAC5B,QAAA,MAAMmD,OAAO,GAAGxQ,KAAK,CAACgR,MAAM,GAAG,CAAC,KAAKyD,GAAG,CAACpH,IAAI,KAAK,OAAO,IAAIoH,GAAG,CAACpH,IAAI,KAAK,OAAO,CAAC;QAClF,MAAMsD,SAAS,GAAG8D,GAAG,CAACC,OAAO,KAAK,IAAI,IAAKT,QAAQ,CAAC5Y,MAAM,KAAKoZ,GAAG,CAACpH,IAAI,KAAK,MAAM,IAAIoH,GAAG,CAACpH,IAAI,KAAK,OAAO,CAAE;AAE5G,QAAA,IAAIoH,GAAG,CAACpH,IAAI,KAAK,OAAO,IAAIoH,GAAG,CAACpH,IAAI,KAAK,OAAO,IAAI,CAACmD,OAAO,IAAI,CAACG,SAAS,EAAE;AAC1E3Q,UAAAA,KAAK,CAACyC,MAAM,GAAGzC,KAAK,CAACyC,MAAM,CAACtD,KAAK,CAAC,CAAC,EAAE,CAAC8R,IAAI,CAACxO,MAAM,CAACpH,MAAM,CAAC;UACzD4V,IAAI,CAAC5D,IAAI,GAAG,MAAM;UAClB4D,IAAI,CAACrW,KAAK,GAAG,GAAG;UAChBqW,IAAI,CAACxO,MAAM,GAAGgR,IAAI;AAClBzT,UAAAA,KAAK,CAACyC,MAAM,IAAIwO,IAAI,CAACxO,MAAM;AACnC;AACA;MAEI,IAAIwR,QAAQ,CAAC5Y,MAAM,IAAIoZ,GAAG,CAACpH,IAAI,KAAK,OAAO,EAAE;AAC3C4G,QAAAA,QAAQ,CAACA,QAAQ,CAAC5Y,MAAM,GAAG,CAAC,CAAC,CAACsZ,KAAK,IAAIF,GAAG,CAAC7Z,KAAK;AACtD;MAEI,IAAI6Z,GAAG,CAAC7Z,KAAK,IAAI6Z,GAAG,CAAChS,MAAM,EAAE2M,MAAM,CAACqF,GAAG,CAAC;AACxC,MAAA,IAAIxD,IAAI,IAAIA,IAAI,CAAC5D,IAAI,KAAK,MAAM,IAAIoH,GAAG,CAACpH,IAAI,KAAK,MAAM,EAAE;AACvD4D,QAAAA,IAAI,CAACxO,MAAM,GAAG,CAACwO,IAAI,CAACxO,MAAM,IAAIwO,IAAI,CAACrW,KAAK,IAAI6Z,GAAG,CAAC7Z,KAAK;AACrDqW,QAAAA,IAAI,CAACrW,KAAK,IAAI6Z,GAAG,CAAC7Z,KAAK;AACvB,QAAA;AACN;MAEI6Z,GAAG,CAACxD,IAAI,GAAGA,IAAI;AACfZ,MAAAA,MAAM,CAAC5S,IAAI,CAACgX,GAAG,CAAC;AAChBxD,MAAAA,IAAI,GAAGwD,GAAG;KACX;AAED,IAAA,MAAMG,WAAW,GAAGA,CAACvH,IAAI,EAAEzS,KAAK,KAAK;AACnC,MAAA,MAAMgV,KAAK,GAAG;QAAE,GAAGwD,aAAa,CAACxY,KAAK,CAAC;AAAEia,QAAAA,UAAU,EAAE,CAAC;AAAEF,QAAAA,KAAK,EAAE;OAAI;MAEnE/E,KAAK,CAACqB,IAAI,GAAGA,IAAI;AACjBrB,MAAAA,KAAK,CAACmE,MAAM,GAAG/T,KAAK,CAAC+T,MAAM;AAC3BnE,MAAAA,KAAK,CAACnN,MAAM,GAAGzC,KAAK,CAACyC,MAAM;AAC3B,MAAA,MAAMA,MAAM,GAAG,CAACwN,IAAI,CAACiD,OAAO,GAAG,GAAG,GAAG,EAAE,IAAItD,KAAK,CAACtC,IAAI;MAErDgH,SAAS,CAAC,QAAQ,CAAC;AACnB7W,MAAAA,IAAI,CAAC;QAAE4P,IAAI;QAAEzS,KAAK;AAAE6H,QAAAA,MAAM,EAAEzC,KAAK,CAACyC,MAAM,GAAG,EAAE,GAAGyF;OAAU,CAAC;AAC3DzK,MAAAA,IAAI,CAAC;AAAE4P,QAAAA,IAAI,EAAE,OAAO;AAAEqH,QAAAA,OAAO,EAAE,IAAI;QAAE9Z,KAAK,EAAEyW,OAAO,EAAE;AAAE5O,QAAAA;OAAQ,CAAC;AAChEwR,MAAAA,QAAQ,CAACxW,IAAI,CAACmS,KAAK,CAAC;KACrB;IAED,MAAMkF,YAAY,GAAGlF,KAAK,IAAI;AAC5B,MAAA,IAAInN,MAAM,GAAGmN,KAAK,CAACrC,KAAK,IAAI0C,IAAI,CAACiD,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;AACpD,MAAA,IAAI6B,IAAI;AAER,MAAA,IAAInF,KAAK,CAACvC,IAAI,KAAK,QAAQ,EAAE;QAC3B,IAAI2H,WAAW,GAAGvB,IAAI;QAEtB,IAAI7D,KAAK,CAAC+E,KAAK,IAAI/E,KAAK,CAAC+E,KAAK,CAACtZ,MAAM,GAAG,CAAC,IAAIuU,KAAK,CAAC+E,KAAK,CAACxY,QAAQ,CAAC,GAAG,CAAC,EAAE;AACtE6Y,UAAAA,WAAW,GAAG3B,QAAQ,CAACpD,IAAI,CAAC;AACpC;AAEM,QAAA,IAAI+E,WAAW,KAAKvB,IAAI,IAAIvC,GAAG,EAAE,IAAI,OAAO,CAACtV,IAAI,CAACuY,SAAS,EAAE,CAAC,EAAE;AAC9D1R,UAAAA,MAAM,GAAGmN,KAAK,CAACrC,KAAK,GAAG,CAAA,IAAA,EAAOyH,WAAW,CAAE,CAAA;AACnD;QAEM,IAAIpF,KAAK,CAAC+E,KAAK,CAACxY,QAAQ,CAAC,GAAG,CAAC,KAAK4Y,IAAI,GAAGZ,SAAS,EAAE,CAAC,IAAI,cAAc,CAACvY,IAAI,CAACmZ,IAAI,CAAC,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACQ,UAAA,MAAME,UAAU,GAAGxC,KAAK,CAACsC,IAAI,EAAE;AAAE,YAAA,GAAGlZ,OAAO;AAAEqZ,YAAAA,SAAS,EAAE;WAAO,CAAC,CAACzS,MAAM;UAEvEA,MAAM,GAAGmN,KAAK,CAACrC,KAAK,GAAG,CAAI0H,CAAAA,EAAAA,UAAU,CAAID,CAAAA,EAAAA,WAAW,CAAG,CAAA,CAAA;AAC/D;AAEM,QAAA,IAAIpF,KAAK,CAACqB,IAAI,CAAC5D,IAAI,KAAK,KAAK,EAAE;UAC7BrN,KAAK,CAAC8Q,cAAc,GAAG,IAAI;AACnC;AACA;AAEIrT,MAAAA,IAAI,CAAC;AAAE4P,QAAAA,IAAI,EAAE,OAAO;AAAEqH,QAAAA,OAAO,EAAE,IAAI;QAAE9Z,KAAK;AAAE6H,QAAAA;OAAQ,CAAC;MACrD8R,SAAS,CAAC,QAAQ,CAAC;KACpB;;AAEH;AACA;AACA;;AAEE,IAAA,IAAItE,IAAI,CAACiF,SAAS,KAAK,KAAK,IAAI,CAAC,qBAAqB,CAACtZ,IAAI,CAAC8S,KAAK,CAAC,EAAE;MAClE,IAAImC,WAAW,GAAG,KAAK;MAEvB,IAAIpO,MAAM,GAAGiM,KAAK,CAAChT,OAAO,CAAC0O,2BAA2B,EAAE,CAAClG,CAAC,EAAEiR,GAAG,EAAE/H,KAAK,EAAEgI,KAAK,EAAEL,IAAI,EAAEzE,KAAK,KAAK;QAC7F,IAAI8E,KAAK,KAAK,IAAI,EAAE;AAClBvE,UAAAA,WAAW,GAAG,IAAI;AAClB,UAAA,OAAO3M,CAAC;AAChB;QAEM,IAAIkR,KAAK,KAAK,GAAG,EAAE;AACjB,UAAA,IAAID,GAAG,EAAE;AACP,YAAA,OAAOA,GAAG,GAAGC,KAAK,IAAIL,IAAI,GAAG5M,KAAK,CAACkN,MAAM,CAACN,IAAI,CAAC1Z,MAAM,CAAC,GAAG,EAAE,CAAC;AACtE;UACQ,IAAIiV,KAAK,KAAK,CAAC,EAAE;AACf,YAAA,OAAOkD,UAAU,IAAIuB,IAAI,GAAG5M,KAAK,CAACkN,MAAM,CAACN,IAAI,CAAC1Z,MAAM,CAAC,GAAG,EAAE,CAAC;AACrE;AACQ,UAAA,OAAO8M,KAAK,CAACkN,MAAM,CAACjI,KAAK,CAAC/R,MAAM,CAAC;AACzC;QAEM,IAAI+Z,KAAK,KAAK,GAAG,EAAE;AACjB,UAAA,OAAOtN,WAAW,CAACuN,MAAM,CAACjI,KAAK,CAAC/R,MAAM,CAAC;AAC/C;QAEM,IAAI+Z,KAAK,KAAK,GAAG,EAAE;AACjB,UAAA,IAAID,GAAG,EAAE;YACP,OAAOA,GAAG,GAAGC,KAAK,IAAIL,IAAI,GAAGtB,IAAI,GAAG,EAAE,CAAC;AACjD;AACQ,UAAA,OAAOA,IAAI;AACnB;AACM,QAAA,OAAO0B,GAAG,GAAGjR,CAAC,GAAG,CAAA,EAAA,EAAKA,CAAC,CAAE,CAAA;AAC/B,OAAK,CAAC;MAEF,IAAI2M,WAAW,KAAK,IAAI,EAAE;AACxB,QAAA,IAAIZ,IAAI,CAAC4B,QAAQ,KAAK,IAAI,EAAE;UAC1BpP,MAAM,GAAGA,MAAM,CAAC/G,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAC1C,SAAO,MAAM;UACL+G,MAAM,GAAGA,MAAM,CAAC/G,OAAO,CAAC,MAAM,EAAEwI,CAAC,IAAI;AACnC,YAAA,OAAOA,CAAC,CAAC7I,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAI6I,CAAC,GAAG,IAAI,GAAG,EAAG;AAC9D,WAAS,CAAC;AACV;AACA;MAEI,IAAIzB,MAAM,KAAKiM,KAAK,IAAIuB,IAAI,CAACd,QAAQ,KAAK,IAAI,EAAE;QAC9CnP,KAAK,CAACyC,MAAM,GAAGiM,KAAK;AACpB,QAAA,OAAO1O,KAAK;AAClB;AAEIA,MAAAA,KAAK,CAACyC,MAAM,GAAG9H,KAAK,CAACsU,UAAU,CAACxM,MAAM,EAAEzC,KAAK,EAAEnE,OAAO,CAAC;AACvD,MAAA,OAAOmE,KAAK;AAChB;;AAEA;AACA;AACA;;AAEE,IAAA,OAAO,CAACkR,GAAG,EAAE,EAAE;MACbtW,KAAK,GAAGyW,OAAO,EAAE;MAEjB,IAAIzW,KAAK,KAAK,QAAQ,EAAE;AACtB,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAIA,KAAK,KAAK,IAAI,EAAE;AAClB,QAAA,MAAM0W,IAAI,GAAGH,IAAI,EAAE;QAEnB,IAAIG,IAAI,KAAK,GAAG,IAAIrB,IAAI,CAACyD,IAAI,KAAK,IAAI,EAAE;AACtC,UAAA;AACR;AAEM,QAAA,IAAIpC,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,EAAE;AAChC,UAAA;AACR;QAEM,IAAI,CAACA,IAAI,EAAE;AACT1W,UAAAA,KAAK,IAAI,IAAI;AACb6C,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;AAAEzS,YAAAA;AAAK,WAAE,CAAC;AAC7B,UAAA;AACR;;AAEA;QACM,MAAM4T,KAAK,GAAG,MAAM,CAAC8G,IAAI,CAACnB,SAAS,EAAE,CAAC;QACtC,IAAI/D,OAAO,GAAG,CAAC;QAEf,IAAI5B,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACnT,MAAM,GAAG,CAAC,EAAE;AAChC+U,UAAAA,OAAO,GAAG5B,KAAK,CAAC,CAAC,CAAC,CAACnT,MAAM;UACzB2E,KAAK,CAACsQ,KAAK,IAAIF,OAAO;AACtB,UAAA,IAAIA,OAAO,GAAG,CAAC,KAAK,CAAC,EAAE;AACrBxV,YAAAA,KAAK,IAAI,IAAI;AACvB;AACA;AAEM,QAAA,IAAIqV,IAAI,CAAC4B,QAAQ,KAAK,IAAI,EAAE;UAC1BjX,KAAK,GAAGyW,OAAO,EAAE;AACzB,SAAO,MAAM;UACLzW,KAAK,IAAIyW,OAAO,EAAE;AAC1B;AAEM,QAAA,IAAIrR,KAAK,CAAC8T,QAAQ,KAAK,CAAC,EAAE;AACxBrW,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;AAAEzS,YAAAA;AAAK,WAAE,CAAC;AAC7B,UAAA;AACR;AACA;;AAEA;AACA;AACA;AACA;;MAEI,IAAIoF,KAAK,CAAC8T,QAAQ,GAAG,CAAC,KAAKlZ,KAAK,KAAK,GAAG,IAAIqW,IAAI,CAACrW,KAAK,KAAK,GAAG,IAAIqW,IAAI,CAACrW,KAAK,KAAK,IAAI,CAAC,EAAE;QACtF,IAAIqV,IAAI,CAACsF,KAAK,KAAK,KAAK,IAAI3a,KAAK,KAAK,GAAG,EAAE;UACzC,MAAM+Z,KAAK,GAAG1D,IAAI,CAACrW,KAAK,CAACuE,KAAK,CAAC,CAAC,CAAC;AACjC,UAAA,IAAIwV,KAAK,CAACxY,QAAQ,CAAC,GAAG,CAAC,EAAE;YACvB8U,IAAI,CAACsE,KAAK,GAAG,IAAI;AAEjB,YAAA,IAAIZ,KAAK,CAACxY,QAAQ,CAAC,GAAG,CAAC,EAAE;cACvB,MAAM0S,GAAG,GAAGoC,IAAI,CAACrW,KAAK,CAACkU,WAAW,CAAC,GAAG,CAAC;cACvC,MAAM0G,GAAG,GAAGvE,IAAI,CAACrW,KAAK,CAACuE,KAAK,CAAC,CAAC,EAAE0P,GAAG,CAAC;cACpC,MAAMkG,IAAI,GAAG9D,IAAI,CAACrW,KAAK,CAACuE,KAAK,CAAC0P,GAAG,GAAG,CAAC,CAAC;AACtC,cAAA,MAAM0G,KAAK,GAAGvM,kBAAkB,CAAC+L,IAAI,CAAC;AACtC,cAAA,IAAIQ,KAAK,EAAE;AACTtE,gBAAAA,IAAI,CAACrW,KAAK,GAAG4a,GAAG,GAAGD,KAAK;gBACxBvV,KAAK,CAAC6T,SAAS,GAAG,IAAI;AACtBxC,gBAAAA,OAAO,EAAE;AAET,gBAAA,IAAI,CAAC4B,GAAG,CAACxQ,MAAM,IAAI4N,MAAM,CAACoF,OAAO,CAACxE,IAAI,CAAC,KAAK,CAAC,EAAE;kBAC7CgC,GAAG,CAACxQ,MAAM,GAAGyF,QAAQ;AACrC;AACc,gBAAA;AACd;AACA;AACA;AACA;AAEM,QAAA,IAAKtN,KAAK,KAAK,GAAG,IAAIuW,IAAI,EAAE,KAAK,GAAG,IAAMvW,KAAK,KAAK,GAAG,IAAIuW,IAAI,EAAE,KAAK,GAAI,EAAE;UAC1EvW,KAAK,GAAG,CAAKA,EAAAA,EAAAA,KAAK,CAAE,CAAA;AAC5B;AAEM,QAAA,IAAIA,KAAK,KAAK,GAAG,KAAKqW,IAAI,CAACrW,KAAK,KAAK,GAAG,IAAIqW,IAAI,CAACrW,KAAK,KAAK,IAAI,CAAC,EAAE;UAChEA,KAAK,GAAG,CAAKA,EAAAA,EAAAA,KAAK,CAAE,CAAA;AAC5B;AAEM,QAAA,IAAIqV,IAAI,CAACsF,KAAK,KAAK,IAAI,IAAI3a,KAAK,KAAK,GAAG,IAAIqW,IAAI,CAACrW,KAAK,KAAK,GAAG,EAAE;AAC9DA,UAAAA,KAAK,GAAG,GAAG;AACnB;QAEMqW,IAAI,CAACrW,KAAK,IAAIA,KAAK;AACnBwU,QAAAA,MAAM,CAAC;AAAExU,UAAAA;SAAO,CAAC;AACjB,QAAA;AACN;;AAEA;AACA;AACA;AACA;;MAEI,IAAIoF,KAAK,CAACgU,MAAM,KAAK,CAAC,IAAIpZ,KAAK,KAAK,GAAG,EAAE;AACvCA,QAAAA,KAAK,GAAGD,KAAK,CAACuT,WAAW,CAACtT,KAAK,CAAC;QAChCqW,IAAI,CAACrW,KAAK,IAAIA,KAAK;AACnBwU,QAAAA,MAAM,CAAC;AAAExU,UAAAA;SAAO,CAAC;AACjB,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAIA,KAAK,KAAK,GAAG,EAAE;QACjBoF,KAAK,CAACgU,MAAM,GAAGhU,KAAK,CAACgU,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;AACzC,QAAA,IAAI/D,IAAI,CAACyF,UAAU,KAAK,IAAI,EAAE;AAC5BjY,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;AAAEzS,YAAAA;AAAK,WAAE,CAAC;AACrC;AACM,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAIA,KAAK,KAAK,GAAG,EAAE;QACjB0Z,SAAS,CAAC,QAAQ,CAAC;AACnB7W,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,OAAO;AAAEzS,UAAAA;AAAK,SAAE,CAAC;AAC9B,QAAA;AACN;MAEI,IAAIA,KAAK,KAAK,GAAG,EAAE;QACjB,IAAIoF,KAAK,CAAC+T,MAAM,KAAK,CAAC,IAAI9D,IAAI,CAAC0F,cAAc,KAAK,IAAI,EAAE;UACtD,MAAM,IAAI3C,WAAW,CAACR,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAC1D;QAEM,MAAMkC,OAAO,GAAGT,QAAQ,CAACA,QAAQ,CAAC5Y,MAAM,GAAG,CAAC,CAAC;QAC7C,IAAIqZ,OAAO,IAAI1U,KAAK,CAAC+T,MAAM,KAAKW,OAAO,CAACX,MAAM,GAAG,CAAC,EAAE;AAClDe,UAAAA,YAAY,CAACb,QAAQ,CAACO,GAAG,EAAE,CAAC;AAC5B,UAAA;AACR;AAEM/W,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,OAAO;UAAEzS,KAAK;AAAE6H,UAAAA,MAAM,EAAEzC,KAAK,CAAC+T,MAAM,GAAG,GAAG,GAAG;SAAO,CAAC;QAClEQ,SAAS,CAAC,QAAQ,CAAC;AACnB,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAI3Z,KAAK,KAAK,GAAG,EAAE;AACjB,QAAA,IAAIqV,IAAI,CAAC2F,SAAS,KAAK,IAAI,IAAI,CAACzB,SAAS,EAAE,CAAChY,QAAQ,CAAC,GAAG,CAAC,EAAE;UACzD,IAAI8T,IAAI,CAAC2F,SAAS,KAAK,IAAI,IAAI3F,IAAI,CAAC0F,cAAc,KAAK,IAAI,EAAE;YAC3D,MAAM,IAAI3C,WAAW,CAACR,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAC5D;UAEQ5X,KAAK,GAAG,CAAKA,EAAAA,EAAAA,KAAK,CAAE,CAAA;AAC5B,SAAO,MAAM;UACL0Z,SAAS,CAAC,UAAU,CAAC;AAC7B;AAEM7W,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,SAAS;AAAEzS,UAAAA;AAAK,SAAE,CAAC;AAChC,QAAA;AACN;MAEI,IAAIA,KAAK,KAAK,GAAG,EAAE;QACjB,IAAIqV,IAAI,CAAC2F,SAAS,KAAK,IAAI,IAAK3E,IAAI,IAAIA,IAAI,CAAC5D,IAAI,KAAK,SAAS,IAAI4D,IAAI,CAACrW,KAAK,CAACS,MAAM,KAAK,CAAE,EAAE;AAC3FoC,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;YAAEzS,KAAK;YAAE6H,MAAM,EAAE,KAAK7H,KAAK,CAAA;WAAI,CAAC;AACnD,UAAA;AACR;AAEM,QAAA,IAAIoF,KAAK,CAAC8T,QAAQ,KAAK,CAAC,EAAE;AACxB,UAAA,IAAI7D,IAAI,CAAC0F,cAAc,KAAK,IAAI,EAAE;YAChC,MAAM,IAAI3C,WAAW,CAACR,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAC5D;AAEQ/U,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;YAAEzS,KAAK;YAAE6H,MAAM,EAAE,KAAK7H,KAAK,CAAA;WAAI,CAAC;AACnD,UAAA;AACR;QAEM2Z,SAAS,CAAC,UAAU,CAAC;QAErB,MAAMsB,SAAS,GAAG5E,IAAI,CAACrW,KAAK,CAACuE,KAAK,CAAC,CAAC,CAAC;QACrC,IAAI8R,IAAI,CAACsE,KAAK,KAAK,IAAI,IAAIM,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAACA,SAAS,CAAC1Z,QAAQ,CAAC,GAAG,CAAC,EAAE;UAC3EvB,KAAK,GAAG,CAAIA,CAAAA,EAAAA,KAAK,CAAE,CAAA;AAC3B;QAEMqW,IAAI,CAACrW,KAAK,IAAIA,KAAK;AACnBwU,QAAAA,MAAM,CAAC;AAAExU,UAAAA;SAAO,CAAC;;AAEvB;AACA;AACM,QAAA,IAAIqV,IAAI,CAAC6F,eAAe,KAAK,KAAK,IAAInb,KAAK,CAACoT,aAAa,CAAC8H,SAAS,CAAC,EAAE;AACpE,UAAA;AACR;QAEM,MAAME,OAAO,GAAGpb,KAAK,CAACuT,WAAW,CAAC+C,IAAI,CAACrW,KAAK,CAAC;AAC7CoF,QAAAA,KAAK,CAACyC,MAAM,GAAGzC,KAAK,CAACyC,MAAM,CAACtD,KAAK,CAAC,CAAC,EAAE,CAAC8R,IAAI,CAACrW,KAAK,CAACS,MAAM,CAAC;;AAE9D;AACA;AACM,QAAA,IAAI4U,IAAI,CAAC6F,eAAe,KAAK,IAAI,EAAE;UACjC9V,KAAK,CAACyC,MAAM,IAAIsT,OAAO;UACvB9E,IAAI,CAACrW,KAAK,GAAGmb,OAAO;AACpB,UAAA;AACR;;AAEA;QACM9E,IAAI,CAACrW,KAAK,GAAG,CAAIsY,CAAAA,EAAAA,OAAO,CAAG6C,EAAAA,OAAO,CAAI9E,CAAAA,EAAAA,IAAI,CAACrW,KAAK,CAAG,CAAA,CAAA;AACnDoF,QAAAA,KAAK,CAACyC,MAAM,IAAIwO,IAAI,CAACrW,KAAK;AAC1B,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAIA,KAAK,KAAK,GAAG,IAAIqV,IAAI,CAAC+F,OAAO,KAAK,IAAI,EAAE;QAC1C1B,SAAS,CAAC,QAAQ,CAAC;AAEnB,QAAA,MAAMhH,IAAI,GAAG;AACXD,UAAAA,IAAI,EAAE,OAAO;UACbzS,KAAK;AACL6H,UAAAA,MAAM,EAAE,GAAG;AACXwT,UAAAA,WAAW,EAAEjW,KAAK,CAACyC,MAAM,CAACpH,MAAM;AAChC6a,UAAAA,WAAW,EAAElW,KAAK,CAACqQ,MAAM,CAAChV;SAC3B;AAED2V,QAAAA,MAAM,CAACvT,IAAI,CAAC6P,IAAI,CAAC;QACjB7P,IAAI,CAAC6P,IAAI,CAAC;AACV,QAAA;AACN;MAEI,IAAI1S,KAAK,KAAK,GAAG,EAAE;QACjB,MAAMub,KAAK,GAAGnF,MAAM,CAACA,MAAM,CAAC3V,MAAM,GAAG,CAAC,CAAC;QAEvC,IAAI4U,IAAI,CAAC+F,OAAO,KAAK,IAAI,IAAI,CAACG,KAAK,EAAE;AACnC1Y,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;YAAEzS,KAAK;AAAE6H,YAAAA,MAAM,EAAE7H;WAAO,CAAC;AAC5C,UAAA;AACR;QAEM,IAAI6H,MAAM,GAAG,GAAG;AAEhB,QAAA,IAAI0T,KAAK,CAACC,IAAI,KAAK,IAAI,EAAE;AACvB,UAAA,MAAMC,GAAG,GAAGhG,MAAM,CAAClR,KAAK,EAAE;UAC1B,MAAMmX,KAAK,GAAG,EAAE;AAEhB,UAAA,KAAK,IAAI9P,CAAC,GAAG6P,GAAG,CAAChb,MAAM,GAAG,CAAC,EAAEmL,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;YACxC6J,MAAM,CAACmE,GAAG,EAAE;YACZ,IAAI6B,GAAG,CAAC7P,CAAC,CAAC,CAAC6G,IAAI,KAAK,OAAO,EAAE;AAC3B,cAAA;AACZ;YACU,IAAIgJ,GAAG,CAAC7P,CAAC,CAAC,CAAC6G,IAAI,KAAK,MAAM,EAAE;cAC1BiJ,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC7P,CAAC,CAAC,CAAC5L,KAAK,CAAC;AACvC;AACA;AAEQ6H,UAAAA,MAAM,GAAGwP,WAAW,CAACqE,KAAK,EAAErG,IAAI,CAAC;UACjCjQ,KAAK,CAAC6T,SAAS,GAAG,IAAI;AAC9B;QAEM,IAAIsC,KAAK,CAACK,KAAK,KAAK,IAAI,IAAIL,KAAK,CAACC,IAAI,KAAK,IAAI,EAAE;AAC/C,UAAA,MAAMK,GAAG,GAAGzW,KAAK,CAACyC,MAAM,CAACtD,KAAK,CAAC,CAAC,EAAEgX,KAAK,CAACF,WAAW,CAAC;UACpD,MAAMS,IAAI,GAAG1W,KAAK,CAACqQ,MAAM,CAAClR,KAAK,CAACgX,KAAK,CAACD,WAAW,CAAC;AAClDC,UAAAA,KAAK,CAACvb,KAAK,GAAGub,KAAK,CAAC1T,MAAM,GAAG,KAAK;UAClC7H,KAAK,GAAG6H,MAAM,GAAG,KAAK;UACtBzC,KAAK,CAACyC,MAAM,GAAGgU,GAAG;AAClB,UAAA,KAAK,MAAME,CAAC,IAAID,IAAI,EAAE;YACpB1W,KAAK,CAACyC,MAAM,IAAKkU,CAAC,CAAClU,MAAM,IAAIkU,CAAC,CAAC/b,KAAM;AAC/C;AACA;AAEM6C,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,OAAO;UAAEzS,KAAK;AAAE6H,UAAAA;AAAM,SAAE,CAAC;QACtC8R,SAAS,CAAC,QAAQ,CAAC;QACnBvD,MAAM,CAACwD,GAAG,EAAE;AACZ,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAI5Z,KAAK,KAAK,GAAG,EAAE;AACjB,QAAA,IAAIqZ,QAAQ,CAAC5Y,MAAM,GAAG,CAAC,EAAE;UACvB4Y,QAAQ,CAACA,QAAQ,CAAC5Y,MAAM,GAAG,CAAC,CAAC,CAACwZ,UAAU,EAAE;AAClD;AACMpX,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,MAAM;AAAEzS,UAAAA;AAAK,SAAE,CAAC;AAC7B,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAIA,KAAK,KAAK,GAAG,EAAE;QACjB,IAAI6H,MAAM,GAAG7H,KAAK;QAElB,MAAMub,KAAK,GAAGnF,MAAM,CAACA,MAAM,CAAC3V,MAAM,GAAG,CAAC,CAAC;AACvC,QAAA,IAAI8a,KAAK,IAAIjC,KAAK,CAACA,KAAK,CAAC7Y,MAAM,GAAG,CAAC,CAAC,KAAK,QAAQ,EAAE;UACjD8a,KAAK,CAACK,KAAK,GAAG,IAAI;AAClB/T,UAAAA,MAAM,GAAG,GAAG;AACpB;AAEMhF,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,OAAO;UAAEzS,KAAK;AAAE6H,UAAAA;AAAM,SAAE,CAAC;AACtC,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAI7H,KAAK,KAAK,GAAG,EAAE;AACvB;AACA;AACA;AACA;AACM,QAAA,IAAIqW,IAAI,CAAC5D,IAAI,KAAK,KAAK,IAAIrN,KAAK,CAACsQ,KAAK,KAAKtQ,KAAK,CAACkG,KAAK,GAAG,CAAC,EAAE;AAC1DlG,UAAAA,KAAK,CAACkG,KAAK,GAAGlG,KAAK,CAACsQ,KAAK,GAAG,CAAC;UAC7BtQ,KAAK,CAAC4T,QAAQ,GAAG,EAAE;UACnB5T,KAAK,CAACyC,MAAM,GAAG,EAAE;UACjB4N,MAAM,CAACmE,GAAG,EAAE;UACZvD,IAAI,GAAGgC,GAAG,CAAC;AACX,UAAA;AACR;AAEMxV,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,OAAO;UAAEzS,KAAK;AAAE6H,UAAAA,MAAM,EAAEwF;SAAe,CAAC;AACrD,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAIrN,KAAK,KAAK,GAAG,EAAE;QACjB,IAAIoF,KAAK,CAACgR,MAAM,GAAG,CAAC,IAAIC,IAAI,CAAC5D,IAAI,KAAK,KAAK,EAAE;UAC3C,IAAI4D,IAAI,CAACrW,KAAK,KAAK,GAAG,EAAEqW,IAAI,CAACxO,MAAM,GAAGqF,WAAW;UACjD,MAAMqO,KAAK,GAAGnF,MAAM,CAACA,MAAM,CAAC3V,MAAM,GAAG,CAAC,CAAC;UACvC4V,IAAI,CAAC5D,IAAI,GAAG,MAAM;UAClB4D,IAAI,CAACxO,MAAM,IAAI7H,KAAK;UACpBqW,IAAI,CAACrW,KAAK,IAAIA,KAAK;UACnBub,KAAK,CAACC,IAAI,GAAG,IAAI;AACjB,UAAA;AACR;QAEM,IAAKpW,KAAK,CAACgR,MAAM,GAAGhR,KAAK,CAAC+T,MAAM,KAAM,CAAC,IAAI9C,IAAI,CAAC5D,IAAI,KAAK,KAAK,IAAI4D,IAAI,CAAC5D,IAAI,KAAK,OAAO,EAAE;AACvF5P,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;YAAEzS,KAAK;AAAE6H,YAAAA,MAAM,EAAEqF;WAAa,CAAC;AAClD,UAAA;AACR;AAEMrK,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,KAAK;UAAEzS,KAAK;AAAE6H,UAAAA,MAAM,EAAEqF;SAAa,CAAC;AACjD,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAIlN,KAAK,KAAK,GAAG,EAAE;QACjB,MAAMgc,OAAO,GAAG3F,IAAI,IAAIA,IAAI,CAACrW,KAAK,KAAK,GAAG;QAC1C,IAAI,CAACgc,OAAO,IAAI3G,IAAI,CAAC0D,SAAS,KAAK,IAAI,IAAIxC,IAAI,EAAE,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC5EyD,UAAAA,WAAW,CAAC,OAAO,EAAEha,KAAK,CAAC;AAC3B,UAAA;AACR;AAEM,QAAA,IAAIqW,IAAI,IAAIA,IAAI,CAAC5D,IAAI,KAAK,OAAO,EAAE;AACjC,UAAA,MAAMiE,IAAI,GAAGH,IAAI,EAAE;UACnB,IAAI1O,MAAM,GAAG7H,KAAK;UAElB,IAAKqW,IAAI,CAACrW,KAAK,KAAK,GAAG,IAAI,CAAC,QAAQ,CAACgB,IAAI,CAAC0V,IAAI,CAAC,IAAMA,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC1V,IAAI,CAACuY,SAAS,EAAE,CAAE,EAAE;YACvG1R,MAAM,GAAG,CAAK7H,EAAAA,EAAAA,KAAK,CAAE,CAAA;AAC/B;AAEQ6C,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;YAAEzS,KAAK;AAAE6H,YAAAA;AAAM,WAAE,CAAC;AACrC,UAAA;AACR;AAEM,QAAA,IAAIwN,IAAI,CAACqD,GAAG,KAAK,IAAI,KAAKrC,IAAI,CAAC5D,IAAI,KAAK,OAAO,IAAI4D,IAAI,CAAC5D,IAAI,KAAK,KAAK,CAAC,EAAE;AACvE5P,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,OAAO;YAAEzS,KAAK;AAAE6H,YAAAA,MAAM,EAAEkG;WAAc,CAAC;AACpD,UAAA;AACR;AAEMlL,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,OAAO;UAAEzS,KAAK;AAAE6H,UAAAA,MAAM,EAAE0F;SAAO,CAAC;AAC7C,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAIvN,KAAK,KAAK,GAAG,EAAE;QACjB,IAAIqV,IAAI,CAAC0D,SAAS,KAAK,IAAI,IAAIxC,IAAI,EAAE,KAAK,GAAG,EAAE;AAC7C,UAAA,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAACvV,IAAI,CAACuV,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9CyD,YAAAA,WAAW,CAAC,QAAQ,EAAEha,KAAK,CAAC;AAC5B,YAAA;AACV;AACA;QAEM,IAAIqV,IAAI,CAACwB,QAAQ,KAAK,IAAI,IAAIzR,KAAK,CAACsQ,KAAK,KAAK,CAAC,EAAE;AAC/C+D,UAAAA,MAAM,EAAE;AACR,UAAA;AACR;AACA;;AAEA;AACA;AACA;;MAEI,IAAIzZ,KAAK,KAAK,GAAG,EAAE;AACjB,QAAA,IAAIqV,IAAI,CAAC0D,SAAS,KAAK,IAAI,IAAIxC,IAAI,EAAE,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAChEyD,UAAAA,WAAW,CAAC,MAAM,EAAEha,KAAK,CAAC;AAC1B,UAAA;AACR;AAEM,QAAA,IAAKqW,IAAI,IAAIA,IAAI,CAACrW,KAAK,KAAK,GAAG,IAAKqV,IAAI,CAAC4G,KAAK,KAAK,KAAK,EAAE;AACxDpZ,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;YAAEzS,KAAK;AAAE6H,YAAAA,MAAM,EAAEsF;WAAc,CAAC;AACnD,UAAA;AACR;QAEM,IAAKkJ,IAAI,KAAKA,IAAI,CAAC5D,IAAI,KAAK,SAAS,IAAI4D,IAAI,CAAC5D,IAAI,KAAK,OAAO,IAAI4D,IAAI,CAAC5D,IAAI,KAAK,OAAO,CAAC,IAAKrN,KAAK,CAAC+T,MAAM,GAAG,CAAC,EAAE;AAC7GtW,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;AAAEzS,YAAAA;AAAK,WAAE,CAAC;AAC7B,UAAA;AACR;AAEM6C,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,MAAM;AAAEzS,UAAAA,KAAK,EAAEmN;AAAY,SAAE,CAAC;AAC3C,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAInN,KAAK,KAAK,GAAG,EAAE;AACjB,QAAA,IAAIqV,IAAI,CAAC0D,SAAS,KAAK,IAAI,IAAIxC,IAAI,EAAE,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAChE1T,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,IAAI;AAAEqH,YAAAA,OAAO,EAAE,IAAI;YAAE9Z,KAAK;AAAE6H,YAAAA,MAAM,EAAE;WAAI,CAAC;AACtD,UAAA;AACR;AAEMhF,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,MAAM;AAAEzS,UAAAA;AAAK,SAAE,CAAC;AAC7B,QAAA;AACN;;AAEA;AACA;AACA;;MAEI,IAAIA,KAAK,KAAK,GAAG,EAAE;AACjB,QAAA,IAAIA,KAAK,KAAK,GAAG,IAAIA,KAAK,KAAK,GAAG,EAAE;UAClCA,KAAK,GAAG,CAAKA,EAAAA,EAAAA,KAAK,CAAE,CAAA;AAC5B;QAEM,MAAM4T,KAAK,GAAGtE,uBAAuB,CAACoL,IAAI,CAACnB,SAAS,EAAE,CAAC;AACvD,QAAA,IAAI3F,KAAK,EAAE;AACT5T,UAAAA,KAAK,IAAI4T,KAAK,CAAC,CAAC,CAAC;UACjBxO,KAAK,CAACsQ,KAAK,IAAI9B,KAAK,CAAC,CAAC,CAAC,CAACnT,MAAM;AACtC;AAEMoC,QAAAA,IAAI,CAAC;AAAE4P,UAAAA,IAAI,EAAE,MAAM;AAAEzS,UAAAA;AAAK,SAAE,CAAC;AAC7B,QAAA;AACN;;AAEA;AACA;AACA;;AAEI,MAAA,IAAIqW,IAAI,KAAKA,IAAI,CAAC5D,IAAI,KAAK,UAAU,IAAI4D,IAAI,CAACwC,IAAI,KAAK,IAAI,CAAC,EAAE;QAC5DxC,IAAI,CAAC5D,IAAI,GAAG,MAAM;QAClB4D,IAAI,CAACwC,IAAI,GAAG,IAAI;QAChBxC,IAAI,CAACrW,KAAK,IAAIA,KAAK;QACnBqW,IAAI,CAACxO,MAAM,GAAGgR,IAAI;QAClBzT,KAAK,CAAC6T,SAAS,GAAG,IAAI;QACtB7T,KAAK,CAACqT,QAAQ,GAAG,IAAI;QACrBe,OAAO,CAACxZ,KAAK,CAAC;AACd,QAAA;AACN;AAEI,MAAA,IAAIma,IAAI,GAAGZ,SAAS,EAAE;AACtB,MAAA,IAAIlE,IAAI,CAAC0D,SAAS,KAAK,IAAI,IAAI,SAAS,CAAC/X,IAAI,CAACmZ,IAAI,CAAC,EAAE;AACnDH,QAAAA,WAAW,CAAC,MAAM,EAAEha,KAAK,CAAC;AAC1B,QAAA;AACN;AAEI,MAAA,IAAIqW,IAAI,CAAC5D,IAAI,KAAK,MAAM,EAAE;AACxB,QAAA,IAAI4C,IAAI,CAAC6G,UAAU,KAAK,IAAI,EAAE;UAC5B1C,OAAO,CAACxZ,KAAK,CAAC;AACd,UAAA;AACR;AAEM,QAAA,MAAMmc,KAAK,GAAG9F,IAAI,CAACA,IAAI;AACvB,QAAA,MAAM+F,MAAM,GAAGD,KAAK,CAAC9F,IAAI;AACzB,QAAA,MAAMgG,OAAO,GAAGF,KAAK,CAAC1J,IAAI,KAAK,OAAO,IAAI0J,KAAK,CAAC1J,IAAI,KAAK,KAAK;AAC9D,QAAA,MAAM6J,SAAS,GAAGF,MAAM,KAAKA,MAAM,CAAC3J,IAAI,KAAK,MAAM,IAAI2J,MAAM,CAAC3J,IAAI,KAAK,UAAU,CAAC;QAElF,IAAI4C,IAAI,CAACyD,IAAI,KAAK,IAAI,KAAK,CAACuD,OAAO,IAAKlC,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAI,CAAC,EAAE;AACpEtX,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;YAAEzS,KAAK;AAAE6H,YAAAA,MAAM,EAAE;WAAI,CAAC;AACzC,UAAA;AACR;AAEM,QAAA,MAAM+N,OAAO,GAAGxQ,KAAK,CAACgR,MAAM,GAAG,CAAC,KAAK+F,KAAK,CAAC1J,IAAI,KAAK,OAAO,IAAI0J,KAAK,CAAC1J,IAAI,KAAK,OAAO,CAAC;AACtF,QAAA,MAAMsD,SAAS,GAAGsD,QAAQ,CAAC5Y,MAAM,KAAK0b,KAAK,CAAC1J,IAAI,KAAK,MAAM,IAAI0J,KAAK,CAAC1J,IAAI,KAAK,OAAO,CAAC;AACtF,QAAA,IAAI,CAAC4J,OAAO,IAAIF,KAAK,CAAC1J,IAAI,KAAK,OAAO,IAAI,CAACmD,OAAO,IAAI,CAACG,SAAS,EAAE;AAChElT,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,MAAM;YAAEzS,KAAK;AAAE6H,YAAAA,MAAM,EAAE;WAAI,CAAC;AACzC,UAAA;AACR;;AAEA;QACM,OAAOsS,IAAI,CAAC5V,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;UACjC,MAAMgY,KAAK,GAAGzI,KAAK,CAAC1O,KAAK,CAACsQ,KAAK,GAAG,CAAC,CAAC;AACpC,UAAA,IAAI6G,KAAK,IAAIA,KAAK,KAAK,GAAG,EAAE;AAC1B,YAAA;AACV;AACQpC,UAAAA,IAAI,GAAGA,IAAI,CAAC5V,KAAK,CAAC,CAAC,CAAC;AACpBiV,UAAAA,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;AACzB;QAEM,IAAI2C,KAAK,CAAC1J,IAAI,KAAK,KAAK,IAAI6D,GAAG,EAAE,EAAE;UACjCD,IAAI,CAAC5D,IAAI,GAAG,UAAU;UACtB4D,IAAI,CAACrW,KAAK,IAAIA,KAAK;AACnBqW,UAAAA,IAAI,CAACxO,MAAM,GAAG4Q,QAAQ,CAACpD,IAAI,CAAC;AAC5BjQ,UAAAA,KAAK,CAACyC,MAAM,GAAGwO,IAAI,CAACxO,MAAM;UAC1BzC,KAAK,CAACqT,QAAQ,GAAG,IAAI;UACrBe,OAAO,CAACxZ,KAAK,CAAC;AACd,UAAA;AACR;QAEM,IAAImc,KAAK,CAAC1J,IAAI,KAAK,OAAO,IAAI0J,KAAK,CAAC9F,IAAI,CAAC5D,IAAI,KAAK,KAAK,IAAI,CAAC6J,SAAS,IAAIhG,GAAG,EAAE,EAAE;UAC9ElR,KAAK,CAACyC,MAAM,GAAGzC,KAAK,CAACyC,MAAM,CAACtD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC4X,KAAK,CAACtU,MAAM,GAAGwO,IAAI,CAACxO,MAAM,EAAEpH,MAAM,CAAC;AAC1E0b,UAAAA,KAAK,CAACtU,MAAM,GAAG,MAAMsU,KAAK,CAACtU,MAAM,CAAE,CAAA;UAEnCwO,IAAI,CAAC5D,IAAI,GAAG,UAAU;AACtB4D,UAAAA,IAAI,CAACxO,MAAM,GAAG4Q,QAAQ,CAACpD,IAAI,CAAC,IAAIA,IAAI,CAACmH,aAAa,GAAG,GAAG,GAAG,KAAK,CAAC;UACjEnG,IAAI,CAACrW,KAAK,IAAIA,KAAK;UACnBoF,KAAK,CAACqT,QAAQ,GAAG,IAAI;UACrBrT,KAAK,CAACyC,MAAM,IAAIsU,KAAK,CAACtU,MAAM,GAAGwO,IAAI,CAACxO,MAAM;UAC1C2R,OAAO,CAACxZ,KAAK,CAAC;AACd,UAAA;AACR;QAEM,IAAImc,KAAK,CAAC1J,IAAI,KAAK,OAAO,IAAI0J,KAAK,CAAC9F,IAAI,CAAC5D,IAAI,KAAK,KAAK,IAAI0H,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC1E,UAAA,MAAMsC,GAAG,GAAGtC,IAAI,CAAC,CAAC,CAAC,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;UAE1C/U,KAAK,CAACyC,MAAM,GAAGzC,KAAK,CAACyC,MAAM,CAACtD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC4X,KAAK,CAACtU,MAAM,GAAGwO,IAAI,CAACxO,MAAM,EAAEpH,MAAM,CAAC;AAC1E0b,UAAAA,KAAK,CAACtU,MAAM,GAAG,MAAMsU,KAAK,CAACtU,MAAM,CAAE,CAAA;UAEnCwO,IAAI,CAAC5D,IAAI,GAAG,UAAU;AACtB4D,UAAAA,IAAI,CAACxO,MAAM,GAAG,CAAA,EAAG4Q,QAAQ,CAACpD,IAAI,CAAC,CAAA,EAAGhI,aAAa,CAAA,CAAA,EAAIA,aAAa,CAAA,EAAGoP,GAAG,CAAG,CAAA,CAAA;UACzEpG,IAAI,CAACrW,KAAK,IAAIA,KAAK;UAEnBoF,KAAK,CAACyC,MAAM,IAAIsU,KAAK,CAACtU,MAAM,GAAGwO,IAAI,CAACxO,MAAM;UAC1CzC,KAAK,CAACqT,QAAQ,GAAG,IAAI;AAErBe,UAAAA,OAAO,CAACxZ,KAAK,GAAGyW,OAAO,EAAE,CAAC;AAE1B5T,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,OAAO;AAAEzS,YAAAA,KAAK,EAAE,GAAG;AAAE6H,YAAAA,MAAM,EAAE;WAAI,CAAC;AAC/C,UAAA;AACR;AAEM,QAAA,IAAIsU,KAAK,CAAC1J,IAAI,KAAK,KAAK,IAAI0H,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAC3C9D,IAAI,CAAC5D,IAAI,GAAG,UAAU;UACtB4D,IAAI,CAACrW,KAAK,IAAIA,KAAK;AACnBqW,UAAAA,IAAI,CAACxO,MAAM,GAAG,CAAA,KAAA,EAAQwF,aAAa,CAAA,CAAA,EAAIoL,QAAQ,CAACpD,IAAI,CAAC,CAAGhI,EAAAA,aAAa,CAAG,CAAA,CAAA;AACxEjI,UAAAA,KAAK,CAACyC,MAAM,GAAGwO,IAAI,CAACxO,MAAM;UAC1BzC,KAAK,CAACqT,QAAQ,GAAG,IAAI;AACrBe,UAAAA,OAAO,CAACxZ,KAAK,GAAGyW,OAAO,EAAE,CAAC;AAC1B5T,UAAAA,IAAI,CAAC;AAAE4P,YAAAA,IAAI,EAAE,OAAO;AAAEzS,YAAAA,KAAK,EAAE,GAAG;AAAE6H,YAAAA,MAAM,EAAE;WAAI,CAAC;AAC/C,UAAA;AACR;;AAEA;AACMzC,QAAAA,KAAK,CAACyC,MAAM,GAAGzC,KAAK,CAACyC,MAAM,CAACtD,KAAK,CAAC,CAAC,EAAE,CAAC8R,IAAI,CAACxO,MAAM,CAACpH,MAAM,CAAC;;AAE/D;QACM4V,IAAI,CAAC5D,IAAI,GAAG,UAAU;AACtB4D,QAAAA,IAAI,CAACxO,MAAM,GAAG4Q,QAAQ,CAACpD,IAAI,CAAC;QAC5BgB,IAAI,CAACrW,KAAK,IAAIA,KAAK;;AAEzB;AACMoF,QAAAA,KAAK,CAACyC,MAAM,IAAIwO,IAAI,CAACxO,MAAM;QAC3BzC,KAAK,CAACqT,QAAQ,GAAG,IAAI;QACrBe,OAAO,CAACxZ,KAAK,CAAC;AACd,QAAA;AACN;AAEI,MAAA,MAAMgV,KAAK,GAAG;AAAEvC,QAAAA,IAAI,EAAE,MAAM;QAAEzS,KAAK;AAAE6H,QAAAA,MAAM,EAAEgR;OAAM;AAEnD,MAAA,IAAIxD,IAAI,CAACyD,IAAI,KAAK,IAAI,EAAE;QACtB9D,KAAK,CAACnN,MAAM,GAAG,KAAK;QACpB,IAAIwO,IAAI,CAAC5D,IAAI,KAAK,KAAK,IAAI4D,IAAI,CAAC5D,IAAI,KAAK,OAAO,EAAE;AAChDuC,UAAAA,KAAK,CAACnN,MAAM,GAAG8Q,KAAK,GAAG3D,KAAK,CAACnN,MAAM;AAC3C;QACMhF,IAAI,CAACmS,KAAK,CAAC;AACX,QAAA;AACN;MAEI,IAAIqB,IAAI,KAAKA,IAAI,CAAC5D,IAAI,KAAK,SAAS,IAAI4D,IAAI,CAAC5D,IAAI,KAAK,OAAO,CAAC,IAAI4C,IAAI,CAAC4G,KAAK,KAAK,IAAI,EAAE;QACrFjH,KAAK,CAACnN,MAAM,GAAG7H,KAAK;QACpB6C,IAAI,CAACmS,KAAK,CAAC;AACX,QAAA;AACN;AAEI,MAAA,IAAI5P,KAAK,CAACsQ,KAAK,KAAKtQ,KAAK,CAACkG,KAAK,IAAI+K,IAAI,CAAC5D,IAAI,KAAK,OAAO,IAAI4D,IAAI,CAAC5D,IAAI,KAAK,KAAK,EAAE;AAC/E,QAAA,IAAI4D,IAAI,CAAC5D,IAAI,KAAK,KAAK,EAAE;UACvBrN,KAAK,CAACyC,MAAM,IAAIgG,YAAY;UAC5BwI,IAAI,CAACxO,MAAM,IAAIgG,YAAY;AAEnC,SAAO,MAAM,IAAIwH,IAAI,CAACqD,GAAG,KAAK,IAAI,EAAE;UAC5BtT,KAAK,CAACyC,MAAM,IAAIiG,aAAa;UAC7BuI,IAAI,CAACxO,MAAM,IAAIiG,aAAa;AAEpC,SAAO,MAAM;UACL1I,KAAK,CAACyC,MAAM,IAAI8Q,KAAK;UACrBtC,IAAI,CAACxO,MAAM,IAAI8Q,KAAK;AAC5B;AAEM,QAAA,IAAIpC,IAAI,EAAE,KAAK,GAAG,EAAE;UAClBnR,KAAK,CAACyC,MAAM,IAAIyF,QAAQ;UACxB+I,IAAI,CAACxO,MAAM,IAAIyF,QAAQ;AAC/B;AACA;MAEIzK,IAAI,CAACmS,KAAK,CAAC;AACf;AAEE,IAAA,OAAO5P,KAAK,CAAC8T,QAAQ,GAAG,CAAC,EAAE;AACzB,MAAA,IAAI7D,IAAI,CAAC0F,cAAc,KAAK,IAAI,EAAE,MAAM,IAAI3C,WAAW,CAACR,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AACpFxS,MAAAA,KAAK,CAACyC,MAAM,GAAG9H,KAAK,CAAC8T,UAAU,CAACzO,KAAK,CAACyC,MAAM,EAAE,GAAG,CAAC;MAClD8R,SAAS,CAAC,UAAU,CAAC;AACzB;AAEE,IAAA,OAAOvU,KAAK,CAAC+T,MAAM,GAAG,CAAC,EAAE;AACvB,MAAA,IAAI9D,IAAI,CAAC0F,cAAc,KAAK,IAAI,EAAE,MAAM,IAAI3C,WAAW,CAACR,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AACpFxS,MAAAA,KAAK,CAACyC,MAAM,GAAG9H,KAAK,CAAC8T,UAAU,CAACzO,KAAK,CAACyC,MAAM,EAAE,GAAG,CAAC;MAClD8R,SAAS,CAAC,QAAQ,CAAC;AACvB;AAEE,IAAA,OAAOvU,KAAK,CAACgR,MAAM,GAAG,CAAC,EAAE;AACvB,MAAA,IAAIf,IAAI,CAAC0F,cAAc,KAAK,IAAI,EAAE,MAAM,IAAI3C,WAAW,CAACR,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AACpFxS,MAAAA,KAAK,CAACyC,MAAM,GAAG9H,KAAK,CAAC8T,UAAU,CAACzO,KAAK,CAACyC,MAAM,EAAE,GAAG,CAAC;MAClD8R,SAAS,CAAC,QAAQ,CAAC;AACvB;AAEE,IAAA,IAAItE,IAAI,CAACmH,aAAa,KAAK,IAAI,KAAKnG,IAAI,CAAC5D,IAAI,KAAK,MAAM,IAAI4D,IAAI,CAAC5D,IAAI,KAAK,SAAS,CAAC,EAAE;AACpF5P,MAAAA,IAAI,CAAC;AAAE4P,QAAAA,IAAI,EAAE,aAAa;AAAEzS,QAAAA,KAAK,EAAE,EAAE;QAAE6H,MAAM,EAAE,GAAGwF,aAAa,CAAA,CAAA;OAAK,CAAC;AACzE;;AAEA;AACE,IAAA,IAAIjI,KAAK,CAAC6T,SAAS,KAAK,IAAI,EAAE;MAC5B7T,KAAK,CAACyC,MAAM,GAAG,EAAE;AAEjB,MAAA,KAAK,MAAMmN,KAAK,IAAI5P,KAAK,CAACqQ,MAAM,EAAE;AAChCrQ,QAAAA,KAAK,CAACyC,MAAM,IAAImN,KAAK,CAACnN,MAAM,IAAI,IAAI,GAAGmN,KAAK,CAACnN,MAAM,GAAGmN,KAAK,CAAChV,KAAK;QAEjE,IAAIgV,KAAK,CAAC0H,MAAM,EAAE;AAChBtX,UAAAA,KAAK,CAACyC,MAAM,IAAImN,KAAK,CAAC0H,MAAM;AACpC;AACA;AACA;AAEE,IAAA,OAAOtX,KAAK;GACb;;AAED;AACA;AACA;AACA;AACA;;AAEAyS,EAAAA,KAAK,CAACyC,SAAS,GAAG,CAACxG,KAAK,EAAE7S,OAAO,KAAK;AACpC,IAAA,MAAMoU,IAAI,GAAG;MAAE,GAAGpU;KAAS;IAC3B,MAAM8W,GAAG,GAAG,OAAO1C,IAAI,CAAC2C,SAAS,KAAK,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC9I,UAAU,EAAEiG,IAAI,CAAC2C,SAAS,CAAC,GAAG5I,UAAU;AAClG,IAAA,MAAM+I,GAAG,GAAGrE,KAAK,CAACrT,MAAM;IACxB,IAAI0X,GAAG,GAAGJ,GAAG,EAAE;MACb,MAAM,IAAIK,WAAW,CAAC,CAAA,cAAA,EAAiBD,GAAG,CAAqCJ,kCAAAA,EAAAA,GAAG,EAAE,CAAC;AACzF;AAEEjE,IAAAA,KAAK,GAAGnE,YAAY,CAACmE,KAAK,CAAC,IAAIA,KAAK;;AAEtC;IACE,MAAM;MACJ5G,WAAW;MACXG,aAAa;MACbC,QAAQ;MACRI,UAAU;MACVC,MAAM;MACNC,OAAO;MACPE,aAAa;MACbE,IAAI;AACJP,MAAAA;KACD,GAAG0B,SAAS,CAACyD,SAAS,CAACyC,IAAI,CAACX,OAAO,CAAC;IAErC,MAAMiE,KAAK,GAAGtD,IAAI,CAACqD,GAAG,GAAG9K,OAAO,GAAGD,MAAM;IACzC,MAAMgP,QAAQ,GAAGtH,IAAI,CAACqD,GAAG,GAAG5K,aAAa,GAAGH,MAAM;IAClD,MAAM2K,OAAO,GAAGjD,IAAI,CAACiD,OAAO,GAAG,EAAE,GAAG,IAAI;AACxC,IAAA,MAAMlT,KAAK,GAAG;AAAEqP,MAAAA,OAAO,EAAE,KAAK;AAAEL,MAAAA,MAAM,EAAE;KAAI;IAC5C,IAAIyE,IAAI,GAAGxD,IAAI,CAACyD,IAAI,KAAK,IAAI,GAAG,KAAK,GAAG9K,IAAI;IAE5C,IAAIqH,IAAI,CAACiD,OAAO,EAAE;MAChBO,IAAI,GAAG,CAAIA,CAAAA,EAAAA,IAAI,CAAG,CAAA,CAAA;AACtB;IAEE,MAAMJ,QAAQ,GAAGpD,IAAI,IAAI;AACvB,MAAA,IAAIA,IAAI,CAAC6G,UAAU,KAAK,IAAI,EAAE,OAAOrD,IAAI;AACzC,MAAA,OAAO,CAAIP,CAAAA,EAAAA,OAAO,CAAS7K,MAAAA,EAAAA,YAAY,CAAG4H,EAAAA,IAAI,CAACqD,GAAG,GAAGhL,UAAU,GAAGR,WAAW,CAAQ,MAAA,CAAA;KACtF;IAED,MAAM9D,MAAM,GAAGgK,GAAG,IAAI;AACpB,MAAA,QAAQA,GAAG;AACT,QAAA,KAAK,GAAG;AACN,UAAA,OAAO,GAAGuF,KAAK,CAAA,EAAGrL,QAAQ,CAAA,EAAGuL,IAAI,CAAE,CAAA;AAErC,QAAA,KAAK,IAAI;AACP,UAAA,OAAO,GAAG3L,WAAW,CAAA,EAAGI,QAAQ,CAAA,EAAGuL,IAAI,CAAE,CAAA;AAE3C,QAAA,KAAK,KAAK;UACR,OAAO,CAAA,EAAGF,KAAK,CAAA,EAAGE,IAAI,CAAA,EAAG3L,WAAW,CAAGI,EAAAA,QAAQ,CAAGuL,EAAAA,IAAI,CAAE,CAAA;AAE1D,QAAA,KAAK,KAAK;AACR,UAAA,OAAO,CAAGF,EAAAA,KAAK,CAAGE,EAAAA,IAAI,CAAGxL,EAAAA,aAAa,CAAGC,EAAAA,QAAQ,CAAGqP,EAAAA,QAAQ,CAAG9D,EAAAA,IAAI,CAAE,CAAA;AAEvE,QAAA,KAAK,IAAI;AACP,UAAA,OAAOF,KAAK,GAAGF,QAAQ,CAACpD,IAAI,CAAC;AAE/B,QAAA,KAAK,MAAM;AACT,UAAA,OAAO,CAAMsD,GAAAA,EAAAA,KAAK,CAAGF,EAAAA,QAAQ,CAACpD,IAAI,CAAC,CAAGhI,EAAAA,aAAa,KAAKsP,QAAQ,CAAA,EAAGrP,QAAQ,CAAA,EAAGuL,IAAI,CAAE,CAAA;AAEtF,QAAA,KAAK,QAAQ;AACX,UAAA,OAAO,MAAMF,KAAK,CAAA,EAAGF,QAAQ,CAACpD,IAAI,CAAC,CAAGhI,EAAAA,aAAa,KAAKsP,QAAQ,CAAA,EAAG9D,IAAI,CAAG3L,EAAAA,WAAW,GAAGI,QAAQ,CAAA,EAAGuL,IAAI,CAAE,CAAA;AAE3G,QAAA,KAAK,OAAO;AACV,UAAA,OAAO,CAAMF,GAAAA,EAAAA,KAAK,CAAGF,EAAAA,QAAQ,CAACpD,IAAI,CAAC,CAAGhI,EAAAA,aAAa,KAAKH,WAAW,CAAA,EAAGI,QAAQ,CAAA,EAAGuL,IAAI,CAAE,CAAA;AAEzF,QAAA;AAAS,UAAA;AACP,YAAA,MAAMjF,KAAK,GAAG,gBAAgB,CAAC8G,IAAI,CAACtH,GAAG,CAAC;YACxC,IAAI,CAACQ,KAAK,EAAE;YAEZ,MAAMgJ,MAAM,GAAGxT,MAAM,CAACwK,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAACgJ,MAAM,EAAE;AAEb,YAAA,OAAOA,MAAM,GAAG1P,WAAW,GAAG0G,KAAK,CAAC,CAAC,CAAC;AAC9C;AACA;KACG;IAED,MAAM/L,MAAM,GAAG9H,KAAK,CAACoU,YAAY,CAACL,KAAK,EAAE1O,KAAK,CAAC;AAC/C,IAAA,IAAIwX,MAAM,GAAGxT,MAAM,CAACvB,MAAM,CAAC;AAE3B,IAAA,IAAI+U,MAAM,IAAIvH,IAAI,CAACmH,aAAa,KAAK,IAAI,EAAE;MACzCI,MAAM,IAAI,CAAGvP,EAAAA,aAAa,CAAG,CAAA,CAAA;AACjC;AAEE,IAAA,OAAOuP,MAAM;GACd;AAEDC,EAAAA,OAAc,GAAGhF,KAAK;;;;;;;;;AC1jCtB,EAAA,MAAMzC,IAAI,gBAAoB/U,WAAA,EAAA;AAC9B,EAAA,MAAMwX,KAAK,gBAAqB7V,YAAA,EAAA;AAChC,EAAA,MAAMjC,KAAK,gBAAqByK,YAAA,EAAA;AAChC,EAAA,MAAM2E,SAAS,gBAAyB1E,gBAAA,EAAA;AACxC,EAAA,MAAMsI,QAAQ,GAAGC,GAAG,IAAIA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA,MAAM8J,SAAS,GAAGA,CAAC9F,IAAI,EAAE/V,OAAO,EAAE8b,WAAW,GAAG,KAAK,KAAK;AACxD,IAAA,IAAI9J,KAAK,CAACC,OAAO,CAAC8D,IAAI,CAAC,EAAE;AACvB,MAAA,MAAMgG,GAAG,GAAGhG,IAAI,CAACW,GAAG,CAAC7D,KAAK,IAAIgJ,SAAS,CAAChJ,KAAK,EAAE7S,OAAO,EAAE8b,WAAW,CAAC,CAAC;MACrE,MAAME,YAAY,GAAG7J,GAAG,IAAI;AAC1B,QAAA,KAAK,MAAM8J,OAAO,IAAIF,GAAG,EAAE;AACzB,UAAA,MAAM5X,KAAK,GAAG8X,OAAO,CAAC9J,GAAG,CAAC;UAC1B,IAAIhO,KAAK,EAAE,OAAOA,KAAK;AAC/B;AACM,QAAA,OAAO,KAAK;OACb;AACD,MAAA,OAAO6X,YAAY;AACvB;AAEE,IAAA,MAAME,OAAO,GAAGpK,QAAQ,CAACiE,IAAI,CAAC,IAAIA,IAAI,CAACvB,MAAM,IAAIuB,IAAI,CAAClD,KAAK;IAE3D,IAAIkD,IAAI,KAAK,EAAE,IAAK,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACmG,OAAQ,EAAE;AACzD,MAAA,MAAM,IAAIrF,SAAS,CAAC,2CAA2C,CAAC;AACpE;AAEE,IAAA,MAAMzC,IAAI,GAAGpU,OAAO,IAAI,EAAE;AAC1B,IAAA,MAAM0Z,KAAK,GAAGtF,IAAI,CAACX,OAAO;IAC1B,MAAMuH,KAAK,GAAGkB,OAAA,GACVL,SAAS,CAACM,SAAS,CAACpG,IAAI,EAAE/V,OAAO,CAAA,GACjC6b,SAAS,CAACO,MAAM,CAACrG,IAAI,EAAE/V,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC;AAEhD,IAAA,MAAMmE,KAAK,GAAG6W,KAAK,CAAC7W,KAAK;IACzB,OAAO6W,KAAK,CAAC7W,KAAK;AAElB,IAAA,IAAIkY,SAAS,GAAGA,MAAM,KAAK;IAC3B,IAAIjI,IAAI,CAACkI,MAAM,EAAE;AACf,MAAA,MAAMC,UAAU,GAAG;AAAE,QAAA,GAAGvc,OAAO;AAAEsc,QAAAA,MAAM,EAAE,IAAI;AAAEE,QAAAA,OAAO,EAAE,IAAI;AAAEC,QAAAA,QAAQ,EAAE;OAAM;MAC9EJ,SAAS,GAAGR,SAAS,CAACzH,IAAI,CAACkI,MAAM,EAAEC,UAAU,EAAET,WAAW,CAAC;AAC/D;IAEE,MAAMY,OAAO,GAAGA,CAAC7J,KAAK,EAAE8J,YAAY,GAAG,KAAK,KAAK;MAC/C,MAAM;QAAEV,OAAO;QAAEtJ,KAAK;AAAE/L,QAAAA;OAAQ,GAAGiV,SAAS,CAAC9b,IAAI,CAAC8S,KAAK,EAAEmI,KAAK,EAAEhb,OAAO,EAAE;QAAE+V,IAAI;AAAE2D,QAAAA;AAAK,OAAE,CAAC;AACzF,MAAA,MAAMzQ,MAAM,GAAG;QAAE8M,IAAI;QAAE5R,KAAK;QAAE6W,KAAK;QAAEtB,KAAK;QAAE7G,KAAK;QAAEjM,MAAM;QAAE+L,KAAK;AAAEsJ,QAAAA;OAAS;AAE3E,MAAA,IAAI,OAAO7H,IAAI,CAACqI,QAAQ,KAAK,UAAU,EAAE;AACvCrI,QAAAA,IAAI,CAACqI,QAAQ,CAACxT,MAAM,CAAC;AAC3B;MAEI,IAAIgT,OAAO,KAAK,KAAK,EAAE;QACrBhT,MAAM,CAACgT,OAAO,GAAG,KAAK;AACtB,QAAA,OAAOU,YAAY,GAAG1T,MAAM,GAAG,KAAK;AAC1C;AAEI,MAAA,IAAIoT,SAAS,CAACxJ,KAAK,CAAC,EAAE;AACpB,QAAA,IAAI,OAAOuB,IAAI,CAACwI,QAAQ,KAAK,UAAU,EAAE;AACvCxI,UAAAA,IAAI,CAACwI,QAAQ,CAAC3T,MAAM,CAAC;AAC7B;QACMA,MAAM,CAACgT,OAAO,GAAG,KAAK;AACtB,QAAA,OAAOU,YAAY,GAAG1T,MAAM,GAAG,KAAK;AAC1C;AAEI,MAAA,IAAI,OAAOmL,IAAI,CAACoI,OAAO,KAAK,UAAU,EAAE;AACtCpI,QAAAA,IAAI,CAACoI,OAAO,CAACvT,MAAM,CAAC;AAC1B;AACI,MAAA,OAAO0T,YAAY,GAAG1T,MAAM,GAAG,IAAI;KACpC;AAED,IAAA,IAAI6S,WAAW,EAAE;MACfY,OAAO,CAACvY,KAAK,GAAGA,KAAK;AACzB;AAEE,IAAA,OAAOuY,OAAO;GACf;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAb,SAAS,CAAC9b,IAAI,GAAG,CAAC8S,KAAK,EAAEmI,KAAK,EAAEhb,OAAO,EAAE;IAAE+V,IAAI;AAAE2D,IAAAA;GAAO,GAAG,EAAE,KAAK;AAChE,IAAA,IAAI,OAAO7G,KAAK,KAAK,QAAQ,EAAE;AAC7B,MAAA,MAAM,IAAIgE,SAAS,CAAC,+BAA+B,CAAC;AACxD;IAEE,IAAIhE,KAAK,KAAK,EAAE,EAAE;MAChB,OAAO;AAAEoJ,QAAAA,OAAO,EAAE,KAAK;AAAErV,QAAAA,MAAM,EAAE;OAAI;AACzC;AAEE,IAAA,MAAMwN,IAAI,GAAGpU,OAAO,IAAI,EAAE;AAC1B,IAAA,MAAM6c,MAAM,GAAGzI,IAAI,CAACyI,MAAM,KAAKnD,KAAK,GAAG5a,KAAK,CAACwT,cAAc,GAAG,IAAI,CAAC;AACnE,IAAA,IAAIK,KAAK,GAAGE,KAAK,KAAKkD,IAAI;IAC1B,IAAInP,MAAM,GAAI+L,KAAK,IAAIkK,MAAM,GAAIA,MAAM,CAAChK,KAAK,CAAC,GAAGA,KAAK;IAEtD,IAAIF,KAAK,KAAK,KAAK,EAAE;MACnB/L,MAAM,GAAGiW,MAAM,GAAGA,MAAM,CAAChK,KAAK,CAAC,GAAGA,KAAK;MACvCF,KAAK,GAAG/L,MAAM,KAAKmP,IAAI;AAC3B;IAEE,IAAIpD,KAAK,KAAK,KAAK,IAAIyB,IAAI,CAACiD,OAAO,KAAK,IAAI,EAAE;MAC5C,IAAIjD,IAAI,CAAC0I,SAAS,KAAK,IAAI,IAAI1I,IAAI,CAACpJ,QAAQ,KAAK,IAAI,EAAE;AACrD2H,QAAAA,KAAK,GAAGkJ,SAAS,CAACiB,SAAS,CAACjK,KAAK,EAAEmI,KAAK,EAAEhb,OAAO,EAAE0Z,KAAK,CAAC;AAC/D,OAAK,MAAM;AACL/G,QAAAA,KAAK,GAAGqI,KAAK,CAACvB,IAAI,CAAC7S,MAAM,CAAC;AAChC;AACA;IAEE,OAAO;AAAEqV,MAAAA,OAAO,EAAEc,OAAO,CAACpK,KAAK,CAAC;MAAEA,KAAK;AAAE/L,MAAAA;KAAQ;GAClD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAiV,SAAS,CAACiB,SAAS,GAAG,CAACjK,KAAK,EAAEkD,IAAI,EAAE/V,OAAO,KAAK;AAC9C,IAAA,MAAMgb,KAAK,GAAGjF,IAAI,YAAYS,MAAM,GAAGT,IAAI,GAAG8F,SAAS,CAACO,MAAM,CAACrG,IAAI,EAAE/V,OAAO,CAAC;IAC7E,OAAOgb,KAAK,CAACjb,IAAI,CAACjB,KAAK,CAACkM,QAAQ,CAAC6H,KAAK,CAAC,CAAC;GACzC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAgJ,EAAAA,SAAS,CAACI,OAAO,GAAG,CAAC9J,GAAG,EAAE6K,QAAQ,EAAEhd,OAAO,KAAK6b,SAAS,CAACmB,QAAQ,EAAEhd,OAAO,CAAC,CAACmS,GAAG,CAAC;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA0J,EAAAA,SAAS,CAACjF,KAAK,GAAG,CAACqG,OAAO,EAAEjd,OAAO,KAAK;IACtC,IAAIgS,KAAK,CAACC,OAAO,CAACgL,OAAO,CAAC,EAAE,OAAOA,OAAO,CAACvG,GAAG,CAACwG,CAAC,IAAIrB,SAAS,CAACjF,KAAK,CAACsG,CAAC,EAAEld,OAAO,CAAC,CAAC;IAChF,OAAO4W,KAAK,CAACqG,OAAO,EAAE;AAAE,MAAA,GAAGjd,OAAO;AAAEqZ,MAAAA,SAAS,EAAE;KAAO,CAAC;GACxD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAwC,EAAAA,SAAS,CAAC1H,IAAI,GAAG,CAACtB,KAAK,EAAE7S,OAAO,KAAKmU,IAAI,CAACtB,KAAK,EAAE7S,OAAO,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA6b,EAAAA,SAAS,CAACM,SAAS,GAAG,CAAChY,KAAK,EAAEnE,OAAO,EAAEmd,YAAY,GAAG,KAAK,EAAErB,WAAW,GAAG,KAAK,KAAK;IACnF,IAAIqB,YAAY,KAAK,IAAI,EAAE;MACzB,OAAOhZ,KAAK,CAACyC,MAAM;AACvB;AAEE,IAAA,MAAMwN,IAAI,GAAGpU,OAAO,IAAI,EAAE;IAC1B,MAAMqT,OAAO,GAAGe,IAAI,CAACd,QAAQ,GAAG,EAAE,GAAG,GAAG;IACxC,MAAMC,MAAM,GAAGa,IAAI,CAACd,QAAQ,GAAG,EAAE,GAAG,GAAG;IAEvC,IAAIqI,MAAM,GAAG,CAAA,EAAGtI,OAAO,CAAA,GAAA,EAAMlP,KAAK,CAACyC,MAAM,CAAI2M,CAAAA,EAAAA,MAAM,CAAE,CAAA;AACrD,IAAA,IAAIpP,KAAK,IAAIA,KAAK,CAACqP,OAAO,KAAK,IAAI,EAAE;MACnCmI,MAAM,GAAG,CAAOA,IAAAA,EAAAA,MAAM,CAAM,IAAA,CAAA;AAChC;IAEE,MAAMX,KAAK,GAAGa,SAAS,CAACuB,OAAO,CAACzB,MAAM,EAAE3b,OAAO,CAAC;IAChD,IAAI8b,WAAW,KAAK,IAAI,EAAE;MACxBd,KAAK,CAAC7W,KAAK,GAAGA,KAAK;AACvB;AAEE,IAAA,OAAO6W,KAAK;GACb;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAa,EAAAA,SAAS,CAACO,MAAM,GAAG,CAACvJ,KAAK,EAAE7S,OAAO,GAAG,EAAE,EAAEmd,YAAY,GAAG,KAAK,EAAErB,WAAW,GAAG,KAAK,KAAK;AACrF,IAAA,IAAI,CAACjJ,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;AACvC,MAAA,MAAM,IAAIgE,SAAS,CAAC,6BAA6B,CAAC;AACtD;AAEE,IAAA,IAAIwG,MAAM,GAAG;AAAE7J,MAAAA,OAAO,EAAE,KAAK;AAAE6F,MAAAA,SAAS,EAAE;KAAM;IAEhD,IAAIrZ,OAAO,CAACqZ,SAAS,KAAK,KAAK,KAAKxG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE;MACzEwK,MAAM,CAACzW,MAAM,GAAGgQ,KAAK,CAACyC,SAAS,CAACxG,KAAK,EAAE7S,OAAO,CAAC;AACnD;AAEE,IAAA,IAAI,CAACqd,MAAM,CAACzW,MAAM,EAAE;AAClByW,MAAAA,MAAM,GAAGzG,KAAK,CAAC/D,KAAK,EAAE7S,OAAO,CAAC;AAClC;IAEE,OAAO6b,SAAS,CAACM,SAAS,CAACkB,MAAM,EAAErd,OAAO,EAAEmd,YAAY,EAAErB,WAAW,CAAC;GACvE;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAACuB,OAAO,GAAG,CAACzB,MAAM,EAAE3b,OAAO,KAAK;IACvC,IAAI;AACF,MAAA,MAAMoU,IAAI,GAAGpU,OAAO,IAAI,EAAE;AAC1B,MAAA,OAAO,IAAIwW,MAAM,CAACmF,MAAM,EAAEvH,IAAI,CAACkJ,KAAK,KAAKlJ,IAAI,CAACmJ,MAAM,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;KAClE,CAAC,OAAOjS,GAAG,EAAE;MACZ,IAAItL,OAAO,IAAIA,OAAO,CAACwd,KAAK,KAAK,IAAI,EAAE,MAAMlS,GAAG;AAChD,MAAA,OAAO,IAAI;AACf;GACC;;AAED;AACA;AACA;AACA;;EAEAuQ,SAAS,CAAC3N,SAAS,GAAGA,SAAS;;AAE/B;AACA;AACA;;AAEAuP,EAAAA,aAAc,GAAG5B,SAAS;;;;;;;;;AClV1B,EAAA,MAAM6B,IAAI,gBAA6Bte,kBAAA,EAAA;AACvC,EAAA,MAAMN,KAAK,gBAAyBiC,YAAA,EAAA;EAEpC,SAAS8a,SAASA,CAAC9F,IAAI,EAAE/V,OAAO,EAAE8b,WAAW,GAAG,KAAK,EAAE;AACvD;AACE,IAAA,IAAI9b,OAAO,KAAKA,OAAO,CAACyT,OAAO,KAAK,IAAI,IAAIzT,OAAO,CAACyT,OAAO,KAAKjL,SAAS,CAAC,EAAE;AAC9E;AACIxI,MAAAA,OAAO,GAAG;AAAE,QAAA,GAAGA,OAAO;AAAEyT,QAAAA,OAAO,EAAE3U,KAAK,CAACyT,SAAS;OAAI;AACxD;AAEE,IAAA,OAAOmL,IAAI,CAAC3H,IAAI,EAAE/V,OAAO,EAAE8b,WAAW,CAAC;AACzC;AAEAld,EAAAA,MAAM,CAAC+e,MAAM,CAAC9B,SAAS,EAAE6B,IAAI,CAAC;AAC9BD,EAAAA,WAAc,GAAG5B,SAAS;;;;;;;;ACf1Bjd,EAAAA,MAAM,CAACC,cAAc,CAAC+e,OAAO,EAAE,YAAY,EAAE;AAAE7e,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;AAC9C6e,EAAAA,OAAA,CAAAC,OAAA,GAAG,MAAM;EACxB,MAAM1e,MAAM,GAAGC,UAAe;AAC9B,EAAA,MAAM0e,aAAa,GAAG/c,iBAAwB,EAAA;EAC9C,IAAIgd,EAAE,GAAG,IAAI;AACb;EACA,IAAI;AACAC,IAAAA,OAAO,CAACxd,OAAO,CAAC,WAAW,CAAC;AAC5Bud,IAAAA,EAAE,gBAAuBxU,gBAAA,EAAA;GAC7B,CACA,OAAO0U,EAAE,EAAE;AACX;AAAA;AAEA,EAAA,MAAMJ,OAAO,CAAC;IACVK,SAAS,GAAG,EAAE;AACdle,IAAAA,OAAO,GAAG;AACNsK,MAAAA,QAAQ,EAAE4J,QAAQ;AAClB5P,MAAAA,cAAc,EAAE,IAAI;MACpBpE,aAAa,EAAEf,MAAM,CAACM,GAAG;AACzBqC,MAAAA,OAAO,EAAE;KACZ;IACDqc,YAAY;IACZxW,WAAWA,CAAC3H,OAAO,EAAE;MACjB,IAAI,CAACA,OAAO,GAAG;QAAE,GAAG,IAAI,CAACA,OAAO;QAAE,GAAGA;OAAS;AAC9C,MAAA,IAAI,CAACme,YAAY,GAAG,IAAI,CAACne,OAAO,CAACme,YAAY;AACrD;AACI5a,IAAAA,KAAKA,GAAG;AACJ,MAAA,IAAI,CAACvD,OAAO,CAACuD,KAAK,GAAG,IAAI;AACzB,MAAA,OAAO,IAAI;AACnB;IACI6a,iBAAiBA,CAACxe,SAAS,EAAE;AACzB,MAAA,IAAI,CAACI,OAAO,CAACE,aAAa,GAAGN,SAAS;AACtC,MAAA,OAAO,IAAI;AACnB;AACIye,IAAAA,YAAYA,GAAG;AACX,MAAA,IAAI,CAACre,OAAO,CAACwB,eAAe,GAAG,IAAI;AACnC,MAAA,OAAO,IAAI;AACnB;AACI8c,IAAAA,iBAAiBA,GAAG;AAChB,MAAA,IAAI,CAACte,OAAO,CAACuB,aAAa,GAAG,IAAI;AACjC,MAAA,OAAO,IAAI;AACnB;AACIgd,IAAAA,QAAQA,GAAG;AACP,MAAA,IAAI,CAACve,OAAO,CAACqC,WAAW,GAAG,IAAI;AAC/B,MAAA,OAAO,IAAI;AACnB;IACImc,YAAYA,CAAC7Y,KAAK,EAAE;AAChB,MAAA,IAAI,CAAC3F,OAAO,CAACsK,QAAQ,GAAG3E,KAAK;AAC7B,MAAA,OAAO,IAAI;AACnB;IACI8Y,YAAYA,CAACC,KAAK,EAAE;AAChB,MAAA,IAAI,CAAC1e,OAAO,CAACsG,QAAQ,GAAGoY,KAAK;AAC7B,MAAA,OAAO,IAAI;AACnB;AACIC,IAAAA,aAAaA,GAAG;AACZ,MAAA,IAAI,CAAC3e,OAAO,CAACC,YAAY,GAAG,IAAI;AAChC,MAAA,IAAI,CAACD,OAAO,CAACwB,eAAe,GAAG,IAAI;AACnC,MAAA,OAAO,IAAI;AACnB;AACIod,IAAAA,UAAUA,GAAG;AACT,MAAA,IAAI,CAAC5e,OAAO,CAACsE,cAAc,GAAG,KAAK;AACnC,MAAA,OAAO,IAAI;AACnB;AACIua,IAAAA,YAAYA,CAAC;AAAE5e,MAAAA,YAAY,GAAG;KAAM,GAAG,EAAE,EAAE;AACvC,MAAA,IAAI,CAACD,OAAO,CAACgF,eAAe,GAAG,IAAI;AACnC,MAAA,IAAI,CAAChF,OAAO,CAACuF,YAAY,GAAGtF,YAAY;AACxC,MAAA,OAAO,IAAI,CAAC0e,aAAa,EAAE;AACnC;IACIG,eAAeA,CAACrU,MAAM,EAAE;AACpB,MAAA,IAAI,CAACzK,OAAO,CAACyK,MAAM,GAAGA,MAAM;AAC5B,MAAA,OAAO,IAAI;AACnB;AACIlL,IAAAA,SAASA,GAAG;AACR,MAAA,IAAI,CAACS,OAAO,CAAChB,aAAa,GAAG,IAAI;AACjC,MAAA,OAAO,IAAI;AACnB;IACIiD,MAAMA,CAAC8c,SAAS,EAAE;MACd,IAAI,CAAC/e,OAAO,CAAC8B,OAAO,CAACF,IAAI,CAACmd,SAAS,CAAC;AACpC,MAAA,OAAO,IAAI;AACnB;AACIC,IAAAA,QAAQA,GAAG;AACP,MAAA,IAAI,CAAChf,OAAO,CAACiD,YAAY,GAAG,IAAI;AAChC,MAAA,IAAI,CAACjD,OAAO,CAACqC,WAAW,GAAG,IAAI;AAC/B,MAAA,OAAO,IAAI;AACnB;IACImI,OAAOA,CAACuU,SAAS,EAAE;AACf,MAAA,IAAI,CAAC/e,OAAO,CAACwK,OAAO,GAAGuU,SAAS;AAChC,MAAA,OAAO,IAAI;AACnB;AACI7b,IAAAA,UAAUA,GAAG;AACT,MAAA,IAAI,CAAClD,OAAO,CAACkD,UAAU,GAAG,IAAI;AAC9B,MAAA,OAAO,IAAI;AACnB;IACI+b,KAAKA,CAAC9d,IAAI,EAAE;AACR,MAAA,OAAO,IAAI2c,aAAa,CAACpS,UAAU,CAACvK,IAAI,IAAI,GAAG,EAAE,IAAI,CAACnB,OAAO,CAAC;AACtE;IACIkf,gBAAgBA,CAACC,EAAE,EAAE;AACzB;MACQ,IAAI,CAAChB,YAAY,GAAGgB,EAAE;AACtB,MAAA,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,IAAAA,gBAAgBA,CAACje,IAAI,EAAEnB,OAAO,EAAE;MAC5B,IAAI,CAACA,OAAO,GAAG;QAAE,GAAG,IAAI,CAACA,OAAO;QAAE,GAAGA;OAAS;AAC9C,MAAA,OAAO,IAAI8d,aAAa,CAACpS,UAAU,CAACvK,IAAI,IAAI,GAAG,EAAE,IAAI,CAACnB,OAAO,CAAC;AACtE;IACI+V,IAAIA,CAAC,GAAGiH,QAAQ,EAAE;MACd,IAAI,IAAI,CAACmB,YAAY,EAAE;AACnB,QAAA,OAAO,IAAI,CAACkB,eAAe,CAACrC,QAAQ,CAAC;AACjD;AACQ,MAAA,OAAO,IAAI,CAACqC,eAAe,CAACrC,QAAQ,EAAE,GAAG,CAAC;AAAEvF,QAAAA,GAAG,EAAE;AAAI,OAAE,CAAC,CAAC;AACjE;AACI4H,IAAAA,eAAeA,CAACrC,QAAQ,EAAE,GAAGhd,OAAO,EAAE;AAClC,MAAA,MAAMsf,MAAM,GAAI,IAAI,CAACnB,YAAY,IAAIJ,EAAG;AAChD;MACQ,IAAI,CAACuB,MAAM,EAAE;AACT,QAAA,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;AACnF;AACQ,MAAA,IAAItD,OAAO,GAAG,IAAI,CAACiC,SAAS,CAAClB,QAAQ,CAACzG,IAAI,CAAC,IAAI,CAAC,CAAC;MACjD,IAAI,CAAC0F,OAAO,EAAE;AACVA,QAAAA,OAAO,GAAGqD,MAAM,CAACtC,QAAQ,EAAE,GAAGhd,OAAO,CAAC;QACtC,IAAI,CAACke,SAAS,CAAClB,QAAQ,CAACzG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG0F,OAAO;AACzD;AACQ,MAAA,IAAI,CAACjc,OAAO,CAAC8B,OAAO,CAACF,IAAI,CAAEvC,IAAI,IAAK4c,OAAO,CAAC5c,IAAI,CAAC,CAAC;AAClD,MAAA,OAAO,IAAI;AACnB;AACA;EACAue,OAAA,CAAAC,OAAe,GAAGA,OAAO;;;;;;;;;;ACtIzBjf,EAAAA,MAAM,CAACC,cAAc,CAAC2gB,KAAO,EAAE,YAAY,EAAE;AAAEzgB,IAAAA,KAAK,EAAE;AAAI,GAAE,CAAC;;;;;;;;;;ICA7D,IAAImJ,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,KAAMtJ,MAAM,CAACuJ,MAAM,GAAI,UAASC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;AAC5F,MAAA,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;MAC5B,IAAIG,IAAI,GAAG7J,MAAM,CAAC8J,wBAAwB,CAACL,CAAC,EAAEC,CAAC,CAAC;MAChD,IAAI,CAACG,IAAI,KAAK,KAAK,IAAIA,IAAI,GAAG,CAACJ,CAAC,CAACtE,UAAU,GAAG0E,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACG,YAAY,CAAC,EAAE;AACjFH,QAAAA,IAAI,GAAG;AAAEI,UAAAA,UAAU,EAAE,IAAI;UAAEhD,GAAG,EAAE,YAAW;YAAE,OAAOwC,CAAC,CAACC,CAAC,CAAC;;SAAK;AACnE;MACI1J,MAAM,CAACC,cAAc,CAACuJ,CAAC,EAAEG,EAAE,EAAEE,IAAI,CAAC;KACrC,GAAK,UAASL,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;AACxB,MAAA,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;AAC5BF,MAAAA,CAAC,CAACG,EAAE,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;AAChB,KAAE,CAAC;AACH,IAAA,IAAImX,YAAY,GAAI,IAAI,IAAI,IAAI,CAACA,YAAY,IAAK,UAASpX,CAAC,EAAEwJ,OAAO,EAAE;AACnE,MAAA,KAAK,IAAIqL,CAAC,IAAI7U,CAAC,EAAE,IAAI6U,CAAC,KAAK,SAAS,IAAI,CAACte,MAAM,CAACsK,SAAS,CAACC,cAAc,CAACC,IAAI,CAACyI,OAAO,EAAEqL,CAAC,CAAC,EAAEhV,eAAe,CAAC2J,OAAO,EAAExJ,CAAC,EAAE6U,CAAC,CAAC;KAC5H;AACDte,IAAAA,MAAM,CAACC,cAAc,CAAAgT,OAAA,EAAU,YAAY,EAAE;AAAE9S,MAAAA,KAAK,EAAE;AAAI,KAAE,CAAC;AAC7D8S,IAAAA,OAAA,CAAA6N,IAAA,GAAe,MAAM;AACrB,IAAA,MAAMC,SAAS,GAAGvgB,cAAoB,EAAA;AACtCR,IAAAA,MAAM,CAACC,cAAc,CAACgT,OAAO,EAAE,MAAM,EAAE;AAAEhJ,MAAAA,UAAU,EAAE,IAAI;MAAEhD,GAAG,EAAE,YAAY;QAAE,OAAO8Z,SAAS,CAAC9B,OAAO;AAAG;AAAA,KAAE,CAAC;AAC5G4B,IAAAA,YAAY,CAAC1e,YAAA,EAAkB,EAAE8Q,OAAO,CAAC;;;;;;;;;;AClBzC,EAAA,IAAI+N,QAAQ,GAAGhhB,MAAM,CAACuJ,MAAM;AAC5B,EAAA,IAAI0X,SAAS,GAAGjhB,MAAM,CAACC,cAAc;AACrC,EAAA,IAAIihB,gBAAgB,GAAGlhB,MAAM,CAAC8J,wBAAwB;AACtD,EAAA,IAAIqX,iBAAiB,GAAGnhB,MAAM,CAACohB,mBAAmB;AAClD,EAAA,IAAIC,YAAY,GAAGrhB,MAAM,CAACshB,cAAc;AACxC,EAAA,IAAIC,YAAY,GAAGvhB,MAAM,CAACsK,SAAS,CAACC,cAAc;AAClD,EAAA,IAAIiX,QAAQ,GAAGA,CAACC,MAAM,EAAEC,GAAG,KAAK;IAC9B,KAAK,IAAIvV,IAAI,IAAIuV,GAAG,EAClBT,SAAS,CAACQ,MAAM,EAAEtV,IAAI,EAAE;AAAElF,MAAAA,GAAG,EAAEya,GAAG,CAACvV,IAAI,CAAC;AAAElC,MAAAA,UAAU,EAAE;KAAM,CAAC;GAChE;EACD,IAAI0X,WAAW,GAAGA,CAACC,EAAE,EAAEC,IAAI,EAAEC,MAAM,EAAEjY,IAAI,KAAK;IAC5C,IAAIgY,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE;AAClE,MAAA,KAAK,IAAIE,GAAG,IAAIZ,iBAAiB,CAACU,IAAI,CAAC,EACrC,IAAI,CAACN,YAAY,CAAC/W,IAAI,CAACoX,EAAE,EAAEG,GAAG,CAAC,IAAIA,GAAG,KAAKD,MAAM,EAC/Cb,SAAS,CAACW,EAAE,EAAEG,GAAG,EAAE;AAAE9a,QAAAA,GAAG,EAAEA,MAAM4a,IAAI,CAACE,GAAG,CAAC;AAAE9X,QAAAA,UAAU,EAAE,EAAEJ,IAAI,GAAGqX,gBAAgB,CAACW,IAAI,EAAEE,GAAG,CAAC,CAAC,IAAIlY,IAAI,CAACI;OAAY,CAAC;AAC1H;AACE,IAAA,OAAO2X,EAAE;GACV;EACD,IAAII,OAAO,GAAGA,CAAC9c,GAAG,EAAE+c,UAAU,EAAER,MAAM,MAAMA,MAAM,GAAGvc,GAAG,IAAI,IAAI,GAAG8b,QAAQ,CAACK,YAAY,CAACnc,GAAG,CAAC,CAAC,GAAG,EAAE,EAAEyc,WAAW;AAChH;AACA;AACA;AACA;AACEM,EAAc,CAAC/c,GAAG,IAAI,CAACA,GAAG,CAACC,UAAU,GAAG8b,SAAS,CAACQ,MAAM,EAAE,SAAS,EAAE;AAAEthB,IAAAA,KAAK,EAAE+E,GAAG;AAAE+E,IAAAA,UAAU,EAAE;AAAI,GAAE,CAAC,GAAGwX,MAAM,EAC/Gvc,GACF,CAAC,CAAC;AACF,EAAA,IAAIgd,YAAY,GAAIhd,GAAG,IAAKyc,WAAW,CAACV,SAAS,CAAC,EAAE,EAAE,YAAY,EAAE;AAAE9gB,IAAAA,KAAK,EAAE;GAAM,CAAC,EAAE+E,GAAG,CAAC;;AAE1F;EACA,IAAIid,aAAa,GAAG,EAAE;EACtBX,QAAQ,CAACW,aAAa,EAAE;IACtBC,oBAAoB,EAAEA,MAAMA,oBAAoB;IAChDC,UAAU,EAAEA,MAAMA,UAAU;IAC5BlL,IAAI,EAAEA,MAAMA,IAAI;IAChBmL,QAAQ,EAAEA,MAAMA,QAAQ;IACxBC,gBAAgB,EAAEA,MAAMA;AAC1B,GAAC,CAAC;AACFC,EAAAA,IAAc,GAAGN,YAAY,CAACC,aAAa,CAAC;AAC5C,EAAA,IAAIM,gBAAgB,GAAGT,OAAO,CAACxhB,UAAe,CAAC;AAC/C,EAAA,IAAIkiB,WAAW,GAAGvgB,aAAe,EAAA;EACjC,IAAIwgB,iBAAiB,GAAGX,OAAO,gCAAqB,CAAC;;AAErD;EACA,IAAIY,gBAAgB,GAAGZ,OAAO,gCAAqB,CAAC;EACpD,IAAIa,uBAAuB,GAAG,cAAc;AAC5C,EAAA,SAASC,iBAAiBA,CAAC1E,QAAQ,EAAEhd,OAAO,EAAE;AAC5C,IAAA,MAAM2hB,aAAa,GAAG3E,QAAQ,CAACxd,MAAM;AACrC,IAAA,MAAMoiB,aAAa,GAAG5P,KAAK,CAAC2P,aAAa,CAAC;AAC1C,IAAA,MAAME,OAAO,GAAG7P,KAAK,CAAC2P,aAAa,CAAC;IACpC,KAAK,IAAIhX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgX,aAAa,EAAEhX,CAAC,EAAE,EAAE;MACtC,MAAM2J,KAAK,GAAGwN,YAAY,CAAC9E,QAAQ,CAACrS,CAAC,CAAC,CAAC;AACvCiX,MAAAA,aAAa,CAACjX,CAAC,CAAC,GAAG2J,KAAK;AACxB,MAAA,MAAMyN,UAAU,GAAGzN,KAAK,CAAC9U,MAAM;AAC/B,MAAA,MAAMwiB,WAAW,GAAGhQ,KAAK,CAAC+P,UAAU,CAAC;MACrC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;AACnCD,QAAAA,WAAW,CAACC,CAAC,CAAC,GAAGT,gBAAgB,CAAChd,OAAO,CAAC4X,MAAM,CAAC9H,KAAK,CAAC2N,CAAC,CAAC,EAAEjiB,OAAO,CAAC;AACzE;AACI6hB,MAAAA,OAAO,CAAClX,CAAC,CAAC,GAAGqX,WAAW;AAC5B;AACE,IAAA,OAAQnP,KAAK,IAAK;AAChB,MAAA,MAAMqP,UAAU,GAAGrP,KAAK,CAACc,KAAK,CAAC,GAAG,CAAC;AACnC,MAAA,IAAIuO,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,IAAIT,uBAAuB,CAAC1hB,IAAI,CAAC8S,KAAK,CAAC,EAAE;AACjE,QAAA,OAAO,IAAI;AACjB;AACI,MAAA,KAAK,IAAIlI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqS,QAAQ,CAACxd,MAAM,EAAEmL,CAAC,EAAE,EAAE;AACxC,QAAA,MAAMwX,YAAY,GAAGP,aAAa,CAACjX,CAAC,CAAC;AACrC,QAAA,MAAMqQ,KAAK,GAAG6G,OAAO,CAAClX,CAAC,CAAC;AACxB,QAAA,MAAMyX,iBAAiB,GAAGF,UAAU,CAAC1iB,MAAM;QAC3C,MAAM6iB,QAAQ,GAAGrL,IAAI,CAACC,GAAG,CAACmL,iBAAiB,EAAED,YAAY,CAAC3iB,MAAM,CAAC;QACjE,IAAIyiB,CAAC,GAAG,CAAC;QACT,OAAOA,CAAC,GAAGI,QAAQ,EAAE;AACnB,UAAA,MAAMC,IAAI,GAAGH,YAAY,CAACF,CAAC,CAAC;AAC5B,UAAA,IAAIK,IAAI,CAAChiB,QAAQ,CAAC,GAAG,CAAC,EAAE;AACtB,YAAA,OAAO,IAAI;AACrB;AACQ,UAAA,MAAMqS,KAAK,GAAGqI,KAAK,CAACiH,CAAC,CAAC,CAACliB,IAAI,CAACmiB,UAAU,CAACD,CAAC,CAAC,CAAC;UAC1C,IAAI,CAACtP,KAAK,EAAE;AACV,YAAA;AACV;UACQ,IAAI2P,IAAI,KAAK,IAAI,EAAE;AACjB,YAAA,OAAO,IAAI;AACrB;AACQL,UAAAA,CAAC,EAAE;AACX;QACM,IAAIA,CAAC,KAAKG,iBAAiB,EAAE;AAC3B,UAAA,OAAO,IAAI;AACnB;AACA;AACI,MAAA,OAAO,KAAK;KACb;AACH;AACA,EAAA,IAAIG,mBAAmB,GAAG;AAAEjO,IAAAA,KAAK,EAAE;GAAM;EACzC,SAASwN,YAAYA,CAACU,KAAK,EAAE;AAC3B,IAAA,IAAIC,EAAE;IACN,MAAMxZ,MAAM,GAAGuY,gBAAgB,CAAChd,OAAO,CAAC2P,IAAI,CAACqO,KAAK,EAAED,mBAAmB,CAAC;IACxE,OAAO,CAAC,CAACE,EAAE,GAAGxZ,MAAM,CAACqL,KAAK,KAAK,IAAI,GAAG,MAAM,GAAGmO,EAAE,CAACjjB,MAAM,IAAIyJ,MAAM,CAACqL,KAAK,GAAG,CAACkO,KAAK,CAAC;AACpF;AACA,EAAA,IAAIE,KAAK,GAAGtiB,OAAO,CAACC,QAAQ,KAAK,OAAO;EACxC,IAAIsiB,yBAAyB,GAAG,qBAAqB;EACrD,SAASC,yBAAyBA,CAACJ,KAAK,EAAE;IACxC,OAAOK,eAAe,CAACL,KAAK,CAAC;AAC/B;EACA,SAASM,yBAAyBA,CAACN,KAAK,EAAE;IACxC,OAAOO,eAAe,CAACP,KAAK,CAAC,CAAC3iB,OAAO,CAAC8iB,yBAAyB,EAAE,GAAG,CAAC;AACvE;AACA,EAAA,IAAI3B,oBAAoB,GAAG0B,KAAK,GAAGI,yBAAyB,GAAGF,yBAAyB;EACxF,IAAII,4BAA4B,GAAG,6DAA6D;EAChG,IAAIC,4BAA4B,GAAG,oCAAoC;EACvE,IAAIJ,eAAe,GAAIL,KAAK,IAAKA,KAAK,CAAC3iB,OAAO,CAACmjB,4BAA4B,EAAE,MAAM,CAAC;EACpF,IAAID,eAAe,GAAIP,KAAK,IAAKA,KAAK,CAAC3iB,OAAO,CAACojB,4BAA4B,EAAE,MAAM,CAAC;AACpF,EAAA,IAAIhC,UAAU,GAAGyB,KAAK,GAAGK,eAAe,GAAGF,eAAe;AAC1D,EAAA,SAAS1B,gBAAgBA,CAAClE,OAAO,EAAEjd,OAAO,EAAE;AAC1C,IAAA,IAAI,CAACA,OAAO,IAAI,IAAI,GAAG,MAAM,GAAGA,OAAO,CAACkjB,kBAAkB,MAAM,KAAK,EAAE;AACrE,MAAA,OAAO,IAAI;AACf;IACE,MAAM/O,IAAI,GAAGqN,gBAAgB,CAAChd,OAAO,CAAC2P,IAAI,CAAC8I,OAAO,CAAC;AACnD,IAAA,OAAO9I,IAAI,CAACU,MAAM,IAAIV,IAAI,CAACX,OAAO;AACpC;AACA,EAAA,SAAS2P,GAAGA,CAAC,GAAGC,KAAK,EAAE;AACrBC,IAAAA,OAAO,CAACF,GAAG,CAAC,eAAe,gBAAiB,IAAIG,IAAI,EAAE,EAAEC,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAGH,KAAK,CAAC;AAChG;;AAEA;EACA,IAAII,gBAAgB,GAAG,aAAa;EACpC,IAAIC,oBAAoB,GAAG,wBAAwB;EACnD,IAAIC,WAAW,GAAG,KAAK;EACvB,SAASC,gBAAgBA,CAAC1G,OAAO,EAAE2G,iBAAiB,EAAEC,GAAG,EAAEC,KAAK,EAAEC,QAAQ,EAAE;AAC1E,IAAA,IAAItB,EAAE;IACN,IAAIxZ,MAAM,GAAGgU,OAAO;AACpB,IAAA,IAAIA,OAAO,CAAC+G,QAAQ,CAAC,GAAG,CAAC,EAAE;MACzB/a,MAAM,GAAGgU,OAAO,CAAC3Z,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AACjC;IACE,IAAI,CAAC2F,MAAM,CAAC+a,QAAQ,CAAC,GAAG,CAAC,IAAIJ,iBAAiB,EAAE;AAC9C3a,MAAAA,MAAM,IAAI,KAAK;AACnB;AACE,IAAA,IAAIoY,gBAAgB,CAAC7c,OAAO,CAACyf,UAAU,CAAChb,MAAM,CAACpJ,OAAO,CAAC4jB,oBAAoB,EAAE,EAAE,CAAC,CAAC,EAAE;AACjFxa,MAAAA,MAAM,GAAGoY,gBAAgB,CAAC3H,KAAK,CAACrY,QAAQ,CAAC4f,UAAU,CAAC4C,GAAG,CAAC,EAAE5a,MAAM,CAAC;AACrE,KAAG,MAAM;MACLA,MAAM,GAAGoY,gBAAgB,CAAC3H,KAAK,CAACna,SAAS,CAAC0J,MAAM,CAAC;AACrD;AACE,IAAA,MAAMib,oBAAoB,GAAGV,gBAAgB,CAAC/J,IAAI,CAACxQ,MAAM,CAAC;IAC1D,IAAIib,oBAAoB,IAAI,IAAI,GAAG,MAAM,GAAGA,oBAAoB,CAAC,CAAC,CAAC,EAAE;AACnE,MAAA,MAAMC,aAAa,GAAG9C,gBAAgB,CAAC3H,KAAK,CAACnD,IAAI,CAACsN,GAAG,EAAEK,oBAAoB,CAAC,CAAC,CAAC,CAAC;MAC/E,IAAIJ,KAAK,CAAC3iB,IAAI,CAAC3B,MAAM,GAAG2kB,aAAa,CAAC3kB,MAAM,EAAE;QAC5CskB,KAAK,CAAC3iB,IAAI,GAAGgjB,aAAa;AAC1BL,QAAAA,KAAK,CAACM,WAAW,GAAG,EAAEF,oBAAoB,CAAC,CAAC,CAAC,CAAC1kB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;AACnE;KACG,MAAM,IAAI,CAACukB,QAAQ,IAAID,KAAK,CAACM,WAAW,IAAI,CAAC,EAAE;AAC9C,MAAA,MAAM9P,KAAK,GAAGwN,YAAY,CAAC7Y,MAAM,CAAC;AAClC,MAAA,CAACwZ,EAAE,GAAGqB,KAAK,CAACO,UAAU,KAAK,IAAI,GAAG5B,EAAE,GAAGqB,KAAK,CAACO,UAAU,GAAG/P,KAAK;MAC/D,MAAMgQ,aAAa,GAAG,EAAE;AACxB,MAAA,MAAM9kB,MAAM,GAAGwX,IAAI,CAACC,GAAG,CAAC6M,KAAK,CAACO,UAAU,CAAC7kB,MAAM,EAAE8U,KAAK,CAAC9U,MAAM,CAAC;MAC9D,KAAK,IAAImL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnL,MAAM,EAAEmL,CAAC,EAAE,EAAE;AAC/B,QAAA,MAAM2X,IAAI,GAAGhO,KAAK,CAAC3J,CAAC,CAAC;QACrB,IAAI2X,IAAI,KAAK,IAAI,IAAI,CAAChO,KAAK,CAAC3J,CAAC,GAAG,CAAC,CAAC,EAAE;UAClC2Z,aAAa,CAAC3L,GAAG,EAAE;AACnB,UAAA;AACR;QACM,IAAI2J,IAAI,KAAKwB,KAAK,CAACO,UAAU,CAAC1Z,CAAC,CAAC,IAAIwW,gBAAgB,CAACmB,IAAI,CAAC,IAAI3X,CAAC,KAAK2J,KAAK,CAAC9U,MAAM,GAAG,CAAC,EAAE;AACpF,UAAA;AACR;AACM8kB,QAAAA,aAAa,CAAC1iB,IAAI,CAAC0gB,IAAI,CAAC;AAC9B;AACIwB,MAAAA,KAAK,CAACM,WAAW,GAAGE,aAAa,CAAC9kB,MAAM;MACxCskB,KAAK,CAACO,UAAU,GAAGC,aAAa;MAChCR,KAAK,CAAC3iB,IAAI,GAAGmjB,aAAa,CAAC9kB,MAAM,GAAG,CAAC,GAAG6hB,gBAAgB,CAAC7c,OAAO,CAACkV,KAAK,CAACnD,IAAI,CAACsN,GAAG,EAAE,GAAGS,aAAa,CAAC,GAAGT,GAAG;AAC5G;AACE,IAAA,OAAO5a,MAAM;AACf;AACA,EAAA,SAASsb,eAAeA,CAAC;IAAEvH,QAAQ;AAAEV,IAAAA,MAAM,GAAG,EAAE;AAAEsH,IAAAA,iBAAiB,GAAG;AAAI,GAAE,EAAEC,GAAG,EAAEC,KAAK,EAAE;AACxF,IAAA,IAAI,OAAO9G,QAAQ,KAAK,QAAQ,EAAE;MAChCA,QAAQ,GAAG,CAACA,QAAQ,CAAC;AACzB,KAAG,MAAM,IAAI,CAACA,QAAQ,EAAE;MACpBA,QAAQ,GAAG,CAAC,MAAM,CAAC;AACvB;AACE,IAAA,IAAI,OAAOV,MAAM,KAAK,QAAQ,EAAE;MAC9BA,MAAM,GAAG,CAACA,MAAM,CAAC;AACrB;IACE,MAAMkI,aAAa,GAAG,EAAE;IACxB,MAAMC,cAAc,GAAG,EAAE;AACzB,IAAA,KAAK,MAAMxH,OAAO,IAAIX,MAAM,EAAE;MAC5B,IAAI,CAACW,OAAO,EAAE;AACZ,QAAA;AACN;AACI,MAAA,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC5CwH,QAAAA,cAAc,CAAC7iB,IAAI,CAAC+hB,gBAAgB,CAAC1G,OAAO,EAAE2G,iBAAiB,EAAEC,GAAG,EAAEC,KAAK,EAAE,IAAI,CAAC,CAAC;AACzF;AACA;AACE,IAAA,KAAK,MAAM7G,OAAO,IAAID,QAAQ,EAAE;MAC9B,IAAI,CAACC,OAAO,EAAE;AACZ,QAAA;AACN;AACI,MAAA,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC5CuH,QAAAA,aAAa,CAAC5iB,IAAI,CAAC+hB,gBAAgB,CAAC1G,OAAO,EAAE2G,iBAAiB,EAAEC,GAAG,EAAEC,KAAK,EAAE,KAAK,CAAC,CAAC;AACzF,OAAK,MAAM,IAAI7G,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACnDwH,cAAc,CAAC7iB,IAAI,CAAC+hB,gBAAgB,CAAC1G,OAAO,CAAC3Z,KAAK,CAAC,CAAC,CAAC,EAAEsgB,iBAAiB,EAAEC,GAAG,EAAEC,KAAK,EAAE,IAAI,CAAC,CAAC;AAClG;AACA;IACE,OAAO;AAAEnR,MAAAA,KAAK,EAAE6R,aAAa;AAAElI,MAAAA,MAAM,EAAEmI;KAAgB;AACzD;AACA,EAAA,SAASC,eAAeA,CAAClC,KAAK,EAAEqB,GAAG,EAAE1iB,IAAI,EAAE;AACzC,IAAA,OAAOkgB,gBAAgB,CAAC3H,KAAK,CAACrY,QAAQ,CAACwiB,GAAG,EAAE,CAAA,EAAG1iB,IAAI,CAAIqhB,CAAAA,EAAAA,KAAK,CAAE,CAAA,CAAC,IAAI,GAAG;AACxE;EACA,SAASmC,WAAWA,CAACnC,KAAK,EAAEqB,GAAG,EAAE1iB,IAAI,EAAE2D,WAAW,EAAE8f,QAAQ,EAAE;IAC5D,MAAM7iB,YAAY,GAAG6iB,QAAQ,GAAGpC,KAAK,CAAClf,KAAK,CAACnC,IAAI,KAAK,GAAG,GAAG,CAAC,GAAGA,IAAI,CAAC3B,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,GAAGgjB,KAAK;IAC9F,IAAIrhB,IAAI,KAAK0iB,GAAG,EAAE;AAChB,MAAA,OAAO/e,WAAW,IAAI/C,YAAY,KAAK,GAAG,GAAGA,YAAY,CAACuB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGvB,YAAY;AACzF;AACE,IAAA,OAAO2iB,eAAe,CAAC3iB,YAAY,EAAE8hB,GAAG,EAAE1iB,IAAI,CAAC;AACjD;AACA,EAAA,SAAS0jB,WAAWA,CAACljB,KAAK,EAAEkiB,GAAG,EAAE1iB,IAAI,EAAE;AACrC,IAAA,KAAK,IAAIwJ,CAAC,GAAGhJ,KAAK,CAACnC,MAAM,GAAG,CAAC,EAAEmL,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AAC1C,MAAA,MAAM6X,KAAK,GAAG7gB,KAAK,CAACgJ,CAAC,CAAC;MACtBhJ,KAAK,CAACgJ,CAAC,CAAC,GAAG+Z,eAAe,CAAClC,KAAK,EAAEqB,GAAG,EAAE1iB,IAAI,CAAC,IAAI,CAACqhB,KAAK,IAAIA,KAAK,CAACwB,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AAC7F;AACE,IAAA,OAAOriB,KAAK;AACd;AACA,EAAA,SAASsd,KAAKA,CAACjf,OAAO,EAAE6jB,GAAG,EAAErY,IAAI,EAAE;AACjC,IAAA,IAAIpL,OAAO,CAAC0kB,GAAG,CAACC,gBAAgB,EAAE;MAChC/kB,OAAO,CAACwd,KAAK,GAAG,IAAI;AACxB;IACE,IAAIxd,OAAO,CAACwd,KAAK,EAAE;MACjB2F,GAAG,CAAC,wBAAwB,EAAEnjB,OAAO,EAAE,MAAM,EAAE6jB,GAAG,CAAC;AACvD;AACE,IAAA,IAAI7R,KAAK,CAACC,OAAO,CAACjS,OAAO,CAACgd,QAAQ,CAAC,IAAIhd,OAAO,CAACgd,QAAQ,CAACxd,MAAM,KAAK,CAAC,EAAE;MACpE,OAAOgM,IAAI,GAAG,EAAE,GAAGJ,OAAO,CAAC5K,OAAO,CAAC,EAAE,CAAC;AAC1C;AACE,IAAA,MAAMsjB,KAAK,GAAG;AACZ3iB,MAAAA,IAAI,EAAE0iB,GAAG;AACTQ,MAAAA,UAAU,EAAE,IAAI;AAChBD,MAAAA,WAAW,EAAE;KACd;IACD,MAAMY,SAAS,GAAGT,eAAe,CAACvkB,OAAO,EAAE6jB,GAAG,EAAEC,KAAK,CAAC;AACtD,IAAA,MAAMvG,MAAM,GAAGvd,OAAO,CAACkjB,kBAAkB,KAAK,KAAK;IACnD,IAAIljB,OAAO,CAACwd,KAAK,EAAE;AACjB2F,MAAAA,GAAG,CAAC,+BAA+B,EAAE6B,SAAS,CAAC;AACnD;AACE,IAAA,MAAMtI,OAAO,GAAG,IAAI6E,iBAAiB,CAAC/c,OAAO,EAAEwgB,SAAS,CAACrS,KAAK,EAAE;MAC9D8E,GAAG,EAAEzX,OAAO,CAACyX,GAAG;MAChB8F,MAAM;MACNjB,MAAM,EAAE0I,SAAS,CAAC1I;AACtB,KAAG,CAAC;AACF,IAAA,MAAMA,MAAM,GAAG,IAAIiF,iBAAiB,CAAC/c,OAAO,EAAEwgB,SAAS,CAAC1I,MAAM,EAAE;MAC9D7E,GAAG,EAAEzX,OAAO,CAACyX,GAAG;AAChB8F,MAAAA;AACJ,KAAG,CAAC;AACF,IAAA,MAAM0H,cAAc,GAAGvD,iBAAiB,CAACsD,SAAS,CAACrS,KAAK,EAAE;MACxD8E,GAAG,EAAEzX,OAAO,CAACyX,GAAG;AAChB8F,MAAAA;AACJ,KAAG,CAAC;AACF,IAAA,MAAM2H,WAAW,GAAG;AACtB;MACIpjB,OAAO,EAAE,CACP9B,OAAO,CAACwd,KAAK,GAAG,CAACN,CAAC,EAAEpY,WAAW,KAAK;AAClC,QAAA,MAAM0d,KAAK,GAAGmC,WAAW,CAACzH,CAAC,EAAE2G,GAAG,EAAEC,KAAK,CAAC3iB,IAAI,EAAE2D,WAAW,EAAE9E,OAAO,CAAC4kB,QAAQ,CAAC;AAC5E,QAAA,MAAMO,OAAO,GAAGzI,OAAO,CAAC8F,KAAK,CAAC;AAC9B,QAAA,IAAI2C,OAAO,EAAE;AACXhC,UAAAA,GAAG,CAAC,CAAA,QAAA,EAAWX,KAAK,CAAA,CAAE,CAAC;AACjC;AACQ,QAAA,OAAO2C,OAAO;OACf,GAAG,CAACjI,CAAC,EAAEpY,WAAW,KAAK4X,OAAO,CAACiI,WAAW,CAACzH,CAAC,EAAE2G,GAAG,EAAEC,KAAK,CAAC3iB,IAAI,EAAE2D,WAAW,EAAE9E,OAAO,CAAC4kB,QAAQ,CAAC,CAAA,CAC/F;MACDpa,OAAO,EAAExK,OAAO,CAACwd,KAAK,GAAG,CAAC4H,CAAC,EAAElI,CAAC,KAAK;AACjC,QAAA,MAAMnb,YAAY,GAAG4iB,WAAW,CAACzH,CAAC,EAAE2G,GAAG,EAAEC,KAAK,CAAC3iB,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAChE,QAAA,MAAMkkB,OAAO,GAAGtjB,YAAY,KAAK,GAAG,IAAI,CAACkjB,cAAc,CAACljB,YAAY,CAAC,IAAIua,MAAM,CAACva,YAAY,CAAC;AAC7F,QAAA,IAAIsjB,OAAO,EAAE;AACXlC,UAAAA,GAAG,CAAC,CAAA,QAAA,EAAWjG,CAAC,CAAA,CAAE,CAAC;AAC3B,SAAO,MAAM;AACLiG,UAAAA,GAAG,CAAC,CAAA,SAAA,EAAYjG,CAAC,CAAA,CAAE,CAAC;AAC5B;AACM,QAAA,OAAOmI,OAAO;AACpB,OAAK,GAAG,CAACD,CAAC,EAAElI,CAAC,KAAK;AACZ,QAAA,MAAMnb,YAAY,GAAG4iB,WAAW,CAACzH,CAAC,EAAE2G,GAAG,EAAEC,KAAK,CAAC3iB,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAChE,QAAA,OAAOY,YAAY,KAAK,GAAG,IAAI,CAACkjB,cAAc,CAACljB,YAAY,CAAC,IAAIua,MAAM,CAACva,YAAY,CAAC;OACrF;AACD7B,MAAAA,aAAa,EAAE,GAAG;AAClBqB,MAAAA,aAAa,EAAE,IAAI;AACnByD,MAAAA,eAAe,EAAE;KAClB;IACD,IAAIhF,OAAO,CAACslB,IAAI,EAAE;AAChBJ,MAAAA,WAAW,CAAC5a,QAAQ,GAAG0M,IAAI,CAACuO,KAAK,CAACvlB,OAAO,CAACslB,IAAI,GAAGxB,KAAK,CAACM,WAAW,CAAC;AACvE;IACE,IAAIpkB,OAAO,CAAC4kB,QAAQ,EAAE;MACpBM,WAAW,CAAC3jB,aAAa,GAAG,KAAK;MACjC2jB,WAAW,CAACjlB,YAAY,GAAG,IAAI;MAC/BilB,WAAW,CAAC1jB,eAAe,GAAG,IAAI;AACtC;AACE,IAAA,IAAIxB,OAAO,CAACwlB,mBAAmB,KAAK,KAAK,EAAE;MACzCN,WAAW,CAAClgB,eAAe,GAAG,KAAK;MACnCkgB,WAAW,CAAC7f,eAAe,GAAG,IAAI;AACtC;IACE,IAAIrF,OAAO,CAACylB,eAAe,EAAE;MAC3BP,WAAW,CAACjiB,YAAY,GAAG,IAAI;MAC/BiiB,WAAW,CAAC7iB,WAAW,GAAG,IAAI;AAClC,KAAG,MAAM,IAAIrC,OAAO,CAAC0lB,SAAS,KAAK,KAAK,EAAE;MACtCR,WAAW,CAAC7iB,WAAW,GAAG,IAAI;AAClC;AACEyhB,IAAAA,KAAK,CAAC3iB,IAAI,GAAG2iB,KAAK,CAAC3iB,IAAI,CAACtB,OAAO,CAAC6jB,WAAW,EAAE,EAAE,CAAC;AAChD,IAAA,MAAMviB,IAAI,GAAG2iB,KAAK,CAAC3iB,IAAI;IACvB,IAAInB,OAAO,CAACwd,KAAK,EAAE;AACjB2F,MAAAA,GAAG,CAAC,sBAAsB,EAAEW,KAAK,CAAC;AACtC;AACE,IAAA,MAAM6B,GAAG,GAAG,IAAIrE,WAAW,CAAC5B,IAAI,CAACwF,WAAW,CAAC,CAACjG,KAAK,CAAC9d,IAAI,CAAC;AACzD,IAAA,IAAI0iB,GAAG,KAAK1iB,IAAI,IAAInB,OAAO,CAAC4kB,QAAQ,EAAE;AACpC,MAAA,OAAOpZ,IAAI,GAAGma,GAAG,CAACna,IAAI,EAAE,GAAGma,GAAG,CAAC/Z,WAAW,EAAE;AAChD;AACE,IAAA,OAAOJ,IAAI,GAAGqZ,WAAW,CAACc,GAAG,CAACna,IAAI,EAAE,EAAEqY,GAAG,EAAE1iB,IAAI,CAAC,GAAGwkB,GAAG,CAAC/Z,WAAW,EAAE,CAACga,IAAI,CAAEjkB,KAAK,IAAKkjB,WAAW,CAACljB,KAAK,EAAEkiB,GAAG,EAAE1iB,IAAI,CAAC,CAAC;AACrH;AACA,EAAA,eAAe4U,IAAIA,CAAC8P,iBAAiB,EAAE7lB,OAAO,EAAE;AAC9C,IAAA,IAAI6lB,iBAAiB,KAAK7lB,OAAO,IAAI,IAAI,GAAG,MAAM,GAAGA,OAAO,CAACgd,QAAQ,CAAC,EAAE;AACtE,MAAA,MAAM,IAAIuC,KAAK,CAAC,wDAAwD,CAAC;AAC7E;AACE,IAAA,MAAMnL,IAAI,GAAGpC,KAAK,CAACC,OAAO,CAAC4T,iBAAiB,CAAC,IAAI,OAAOA,iBAAiB,KAAK,QAAQ,GAAG;AAAE,MAAA,GAAG7lB,OAAO;AAAEgd,MAAAA,QAAQ,EAAE6I;AAAmB,KAAA,GAAGA,iBAAiB;AACxJ,IAAA,MAAMhC,GAAG,GAAGzP,IAAI,CAACyP,GAAG,GAAGxC,gBAAgB,CAAC7c,OAAO,CAAChE,OAAO,CAAC4T,IAAI,CAACyP,GAAG,CAAC,CAAChkB,OAAO,CAAC6jB,WAAW,EAAE,GAAG,CAAC,GAAGtjB,OAAO,CAACyjB,GAAG,EAAE,CAAChkB,OAAO,CAAC6jB,WAAW,EAAE,GAAG,CAAC;AACrI,IAAA,OAAOzE,KAAK,CAAC7K,IAAI,EAAEyP,GAAG,EAAE,KAAK,CAAC;AAChC;AACA,EAAA,SAAS3C,QAAQA,CAAC2E,iBAAiB,EAAE7lB,OAAO,EAAE;AAC5C,IAAA,IAAI6lB,iBAAiB,KAAK7lB,OAAO,IAAI,IAAI,GAAG,MAAM,GAAGA,OAAO,CAACgd,QAAQ,CAAC,EAAE;AACtE,MAAA,MAAM,IAAIuC,KAAK,CAAC,wDAAwD,CAAC;AAC7E;AACE,IAAA,MAAMnL,IAAI,GAAGpC,KAAK,CAACC,OAAO,CAAC4T,iBAAiB,CAAC,IAAI,OAAOA,iBAAiB,KAAK,QAAQ,GAAG;AAAE,MAAA,GAAG7lB,OAAO;AAAEgd,MAAAA,QAAQ,EAAE6I;AAAmB,KAAA,GAAGA,iBAAiB;AACxJ,IAAA,MAAMhC,GAAG,GAAGzP,IAAI,CAACyP,GAAG,GAAGxC,gBAAgB,CAAC7c,OAAO,CAAChE,OAAO,CAAC4T,IAAI,CAACyP,GAAG,CAAC,CAAChkB,OAAO,CAAC6jB,WAAW,EAAE,GAAG,CAAC,GAAGtjB,OAAO,CAACyjB,GAAG,EAAE,CAAChkB,OAAO,CAAC6jB,WAAW,EAAE,GAAG,CAAC;AACrI,IAAA,OAAOzE,KAAK,CAAC7K,IAAI,EAAEyP,GAAG,EAAE,IAAI,CAAC;AAC/B;;;;;;;;","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]}