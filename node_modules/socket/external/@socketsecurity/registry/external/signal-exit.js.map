{"version":3,"file":"signal-exit.js","sources":["../../node_modules/signal-exit/dist/mjs/signals.js","../../node_modules/signal-exit/dist/mjs/index.js"],"sourcesContent":["/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals = [];\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM');\nif (process.platform !== 'win32') {\n    signals.push('SIGALRM', 'SIGABRT', 'SIGVTALRM', 'SIGXCPU', 'SIGXFSZ', 'SIGUSR2', 'SIGTRAP', 'SIGSYS', 'SIGQUIT', 'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n    );\n}\nif (process.platform === 'linux') {\n    signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT');\n}\n//# sourceMappingURL=signals.js.map","// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js';\nexport { signals };\nconst processOk = (process) => !!process &&\n    typeof process === 'object' &&\n    typeof process.removeListener === 'function' &&\n    typeof process.emit === 'function' &&\n    typeof process.reallyExit === 'function' &&\n    typeof process.listeners === 'function' &&\n    typeof process.kill === 'function' &&\n    typeof process.pid === 'number' &&\n    typeof process.on === 'function';\nconst kExitEmitter = Symbol.for('signal-exit emitter');\nconst global = globalThis;\nconst ObjectDefineProperty = Object.defineProperty.bind(Object);\n// teeny special purpose ee\nclass Emitter {\n    emitted = {\n        afterExit: false,\n        exit: false,\n    };\n    listeners = {\n        afterExit: [],\n        exit: [],\n    };\n    count = 0;\n    id = Math.random();\n    constructor() {\n        if (global[kExitEmitter]) {\n            return global[kExitEmitter];\n        }\n        ObjectDefineProperty(global, kExitEmitter, {\n            value: this,\n            writable: false,\n            enumerable: false,\n            configurable: false,\n        });\n    }\n    on(ev, fn) {\n        this.listeners[ev].push(fn);\n    }\n    removeListener(ev, fn) {\n        const list = this.listeners[ev];\n        const i = list.indexOf(fn);\n        /* c8 ignore start */\n        if (i === -1) {\n            return;\n        }\n        /* c8 ignore stop */\n        if (i === 0 && list.length === 1) {\n            list.length = 0;\n        }\n        else {\n            list.splice(i, 1);\n        }\n    }\n    emit(ev, code, signal) {\n        if (this.emitted[ev]) {\n            return false;\n        }\n        this.emitted[ev] = true;\n        let ret = false;\n        for (const fn of this.listeners[ev]) {\n            ret = fn(code, signal) === true || ret;\n        }\n        if (ev === 'exit') {\n            ret = this.emit('afterExit', code, signal) || ret;\n        }\n        return ret;\n    }\n}\nclass SignalExitBase {\n}\nconst signalExitWrap = (handler) => {\n    return {\n        onExit(cb, opts) {\n            return handler.onExit(cb, opts);\n        },\n        load() {\n            return handler.load();\n        },\n        unload() {\n            return handler.unload();\n        },\n    };\n};\nclass SignalExitFallback extends SignalExitBase {\n    onExit() {\n        return () => { };\n    }\n    load() { }\n    unload() { }\n}\nclass SignalExit extends SignalExitBase {\n    // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n    // so use a supported signal instead\n    /* c8 ignore start */\n    #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP';\n    /* c8 ignore stop */\n    #emitter = new Emitter();\n    #process;\n    #originalProcessEmit;\n    #originalProcessReallyExit;\n    #sigListeners = {};\n    #loaded = false;\n    constructor(process) {\n        super();\n        this.#process = process;\n        // { <signal>: <listener fn>, ... }\n        this.#sigListeners = {};\n        for (const sig of signals) {\n            this.#sigListeners[sig] = () => {\n                // If there are no other listeners, an exit is coming!\n                // Simplest way: remove us and then re-send the signal.\n                // We know that this will kill the process, so we can\n                // safely emit now.\n                const listeners = this.#process.listeners(sig);\n                let { count } = this.#emitter;\n                // This is a workaround for the fact that signal-exit v3 and signal\n                // exit v4 are not aware of each other, and each will attempt to let\n                // the other handle it, so neither of them do. To correct this, we\n                // detect if we're the only handler *except* for previous versions\n                // of signal-exit, and increment by the count of listeners it has\n                // created.\n                /* c8 ignore start */\n                const p = process;\n                if (typeof p.__signal_exit_emitter__ === 'object' &&\n                    typeof p.__signal_exit_emitter__.count === 'number') {\n                    count += p.__signal_exit_emitter__.count;\n                }\n                /* c8 ignore stop */\n                if (listeners.length === count) {\n                    this.unload();\n                    const ret = this.#emitter.emit('exit', null, sig);\n                    /* c8 ignore start */\n                    const s = sig === 'SIGHUP' ? this.#hupSig : sig;\n                    if (!ret)\n                        process.kill(process.pid, s);\n                    /* c8 ignore stop */\n                }\n            };\n        }\n        this.#originalProcessReallyExit = process.reallyExit;\n        this.#originalProcessEmit = process.emit;\n    }\n    onExit(cb, opts) {\n        /* c8 ignore start */\n        if (!processOk(this.#process)) {\n            return () => { };\n        }\n        /* c8 ignore stop */\n        if (this.#loaded === false) {\n            this.load();\n        }\n        const ev = opts?.alwaysLast ? 'afterExit' : 'exit';\n        this.#emitter.on(ev, cb);\n        return () => {\n            this.#emitter.removeListener(ev, cb);\n            if (this.#emitter.listeners['exit'].length === 0 &&\n                this.#emitter.listeners['afterExit'].length === 0) {\n                this.unload();\n            }\n        };\n    }\n    load() {\n        if (this.#loaded) {\n            return;\n        }\n        this.#loaded = true;\n        // This is the number of onSignalExit's that are in play.\n        // It's important so that we can count the correct number of\n        // listeners on signals, and don't wait for the other one to\n        // handle it instead of us.\n        this.#emitter.count += 1;\n        for (const sig of signals) {\n            try {\n                const fn = this.#sigListeners[sig];\n                if (fn)\n                    this.#process.on(sig, fn);\n            }\n            catch (_) { }\n        }\n        this.#process.emit = (ev, ...a) => {\n            return this.#processEmit(ev, ...a);\n        };\n        this.#process.reallyExit = (code) => {\n            return this.#processReallyExit(code);\n        };\n    }\n    unload() {\n        if (!this.#loaded) {\n            return;\n        }\n        this.#loaded = false;\n        signals.forEach(sig => {\n            const listener = this.#sigListeners[sig];\n            /* c8 ignore start */\n            if (!listener) {\n                throw new Error('Listener not defined for signal: ' + sig);\n            }\n            /* c8 ignore stop */\n            try {\n                this.#process.removeListener(sig, listener);\n                /* c8 ignore start */\n            }\n            catch (_) { }\n            /* c8 ignore stop */\n        });\n        this.#process.emit = this.#originalProcessEmit;\n        this.#process.reallyExit = this.#originalProcessReallyExit;\n        this.#emitter.count -= 1;\n    }\n    #processReallyExit(code) {\n        /* c8 ignore start */\n        if (!processOk(this.#process)) {\n            return 0;\n        }\n        this.#process.exitCode = code || 0;\n        /* c8 ignore stop */\n        this.#emitter.emit('exit', this.#process.exitCode, null);\n        return this.#originalProcessReallyExit.call(this.#process, this.#process.exitCode);\n    }\n    #processEmit(ev, ...args) {\n        const og = this.#originalProcessEmit;\n        if (ev === 'exit' && processOk(this.#process)) {\n            if (typeof args[0] === 'number') {\n                this.#process.exitCode = args[0];\n                /* c8 ignore start */\n            }\n            /* c8 ignore start */\n            const ret = og.call(this.#process, ev, ...args);\n            /* c8 ignore start */\n            this.#emitter.emit('exit', this.#process.exitCode, null);\n            /* c8 ignore stop */\n            return ret;\n        }\n        else {\n            return og.call(this.#process, ev, ...args);\n        }\n    }\n}\nconst process = globalThis.process;\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const { \n/**\n * Called when the process is exiting, whether via signal, explicit\n * exit, or running out of stuff to do.\n *\n * If the global process object is not suitable for instrumentation,\n * then this will be a no-op.\n *\n * Returns a function that may be used to unload signal-exit.\n */\nonExit, \n/**\n * Load the listeners.  Likely you never need to call this, unless\n * doing a rather deep integration with signal-exit functionality.\n * Mostly exposed for the benefit of testing.\n *\n * @internal\n */\nload, \n/**\n * Unload the listeners.  Likely you never need to call this, unless\n * doing a rather deep integration with signal-exit functionality.\n * Mostly exposed for the benefit of testing.\n *\n * @internal\n */\nunload, } = signalExitWrap(processOk(process) ? new SignalExit(process) : new SignalExitFallback());\n//# sourceMappingURL=index.js.map"],"names":["signals","push","process","platform","processOk","removeListener","emit","reallyExit","listeners","kill","pid","on","kExitEmitter","Symbol","for","global","globalThis","ObjectDefineProperty","Object","defineProperty","bind","Emitter","emitted","afterExit","exit","count","id","Math","random","constructor","value","writable","enumerable","configurable","ev","fn","list","i","indexOf","length","splice","code","signal","ret","SignalExitBase","signalExitWrap","handler","onExit","cb","opts","load","unload","SignalExitFallback","SignalExit","sig","p","__signal_exit_emitter__","s","alwaysLast","_","a","forEach","listener","Error","#processReallyExit","exitCode","call","#processEmit","args","og"],"mappings":"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","x_google_ignoreList":[0,1]}