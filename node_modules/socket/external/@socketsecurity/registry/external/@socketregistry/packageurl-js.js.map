{"version":3,"file":"packageurl-js.js","sources":["../../../node_modules/@socketregistry/packageurl-js/src/error.js","../../../node_modules/@socketregistry/packageurl-js/src/decode.js","../../../node_modules/@socketregistry/packageurl-js/src/constants.js","../../../node_modules/@socketregistry/packageurl-js/src/objects.js","../../../node_modules/@socketregistry/packageurl-js/src/strings.js","../../../node_modules/@socketregistry/packageurl-js/src/encode.js","../../../node_modules/@socketregistry/packageurl-js/src/helpers.js","../../../node_modules/@socketregistry/packageurl-js/src/normalize.js","../../../node_modules/@socketregistry/packageurl-js/src/lang.js","../../../node_modules/@socketregistry/packageurl-js/src/validate.js","../../../node_modules/@socketregistry/packageurl-js/src/purl-component.js","../../../node_modules/@socketregistry/packageurl-js/src/purl-qualifier-names.js","../../../node_modules/@socketregistry/packageurl-js/src/purl-type.js","../../../node_modules/@socketregistry/packageurl-js/src/package-url.js","../../../node_modules/@socketregistry/packageurl-js/index.js"],"sourcesContent":["'use strict'\n\nfunction formatPurlErrorMessage(message = '') {\n  const { length } = message\n  let formatted = ''\n  if (length) {\n    // Lower case start of message.\n    const code0 = message.charCodeAt(0)\n    formatted =\n      code0 >= 65 /*'A'*/ || code0 <= 90 /*'Z'*/\n        ? `${message[0].toLowerCase()}${message.slice(1)}`\n        : message\n    // Remove period from end of message.\n    if (\n      length > 1 &&\n      message.charCodeAt(length - 1) === 46 /*'.'*/ &&\n      message.charCodeAt(length - 2) !== 46\n    ) {\n      formatted = formatted.slice(0, -1)\n    }\n  }\n  return `Invalid purl: ${formatted}`\n}\n\nclass PurlError extends Error {\n  constructor(message) {\n    super(formatPurlErrorMessage(message))\n  }\n}\n\nmodule.exports = {\n  formatPurlErrorMessage,\n  PurlError\n}\n","'use strict'\n\nconst { PurlError } = require('./error')\n\nconst { decodeURIComponent: decodeComponent } = globalThis\n\nfunction decodePurlComponent(comp, encodedComponent) {\n  try {\n    return decodeComponent(encodedComponent)\n  } catch {}\n  throw new PurlError(`unable to decode \"${comp}\" component`)\n}\n\nmodule.exports = {\n  decodePurlComponent\n}\n","'use strict'\n\nconst LOOP_SENTINEL = 1_000_000\n\nconst REUSED_SEARCH_PARAMS = new URLSearchParams()\n\nconst REUSED_SEARCH_PARAMS_KEY = '_'\n\nconst REUSED_SEARCH_PARAMS_OFFSET = 2 // '_='.length\n\nmodule.exports = {\n  LOOP_SENTINEL,\n  REUSED_SEARCH_PARAMS,\n  REUSED_SEARCH_PARAMS_KEY,\n  REUSED_SEARCH_PARAMS_OFFSET\n}\n","'use strict'\n\nconst { LOOP_SENTINEL } = require('./constants')\n\nfunction isObject(value) {\n  return value !== null && typeof value === 'object'\n}\n\nfunction recursiveFreeze(value_) {\n  if (\n    value_ === null ||\n    !(typeof value_ === 'object' || typeof value_ === 'function') ||\n    Object.isFrozen(value_)\n  ) {\n    return value_\n  }\n  const queue = [value_]\n  let { length: queueLength } = queue\n  let pos = 0\n  while (pos < queueLength) {\n    if (pos === LOOP_SENTINEL) {\n      throw new Error(\n        'Detected infinite loop in object crawl of recursiveFreeze'\n      )\n    }\n    const obj = queue[pos++]\n    Object.freeze(obj)\n    if (Array.isArray(obj)) {\n      for (let i = 0, { length } = obj; i < length; i += 1) {\n        const item = obj[i]\n        if (\n          item !== null &&\n          (typeof item === 'object' || typeof item === 'function') &&\n          !Object.isFrozen(item)\n        ) {\n          queue[queueLength++] = item\n        }\n      }\n    } else {\n      const keys = Reflect.ownKeys(obj)\n      for (let i = 0, { length } = keys; i < length; i += 1) {\n        const propValue = obj[keys[i]]\n        if (\n          propValue !== null &&\n          (typeof propValue === 'object' || typeof propValue === 'function') &&\n          !Object.isFrozen(propValue)\n        ) {\n          queue[queueLength++] = propValue\n        }\n      }\n    }\n  }\n  return value_\n}\n\nmodule.exports = {\n  isObject,\n  recursiveFreeze\n}\n","'use strict'\n\n// Intl.Collator is faster than String#localeCompare\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare:\n// > When comparing large numbers of strings, such as in sorting large arrays,\n// > it is better to create an Intl.Collator object and use the function provided\n// > by its compare() method.\nlet _localeCompare\nfunction localeCompare(x, y) {\n  if (_localeCompare === undefined) {\n    // Lazily call new Intl.Collator() because in Node it can take 10-14ms.\n    _localeCompare = new Intl.Collator().compare\n  }\n  return _localeCompare(x, y)\n}\n\n// This regexp is valid as of 2024-08-01.\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst regexSemverNumberedGroups =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/\n\nfunction isBlank(str) {\n  for (let i = 0, { length } = str; i < length; i += 1) {\n    const code = str.charCodeAt(i)\n    // biome-ignore format:\n    if (\n      !(\n        // Whitespace characters according to ECMAScript spec:\n        // https://tc39.es/ecma262/#sec-white-space\n        (\n          code === 0x0020 || // Space\n          code === 0x0009 || // Tab\n          code === 0x000a || // Line Feed\n          code === 0x000b || // Vertical Tab\n          code === 0x000c || // Form Feed\n          code === 0x000d || // Carriage Return\n          code === 0x00a0 || // No-Break Space\n          code === 0x1680 || // Ogham Space Mark\n          code === 0x2000 || // En Quad\n          code === 0x2001 || // Em Quad\n          code === 0x2002 || // En Space\n          code === 0x2003 || // Em Space\n          code === 0x2004 || // Three-Per-Em Space\n          code === 0x2005 || // Four-Per-Em Space\n          code === 0x2006 || // Six-Per-Em Space\n          code === 0x2007 || // Figure Space\n          code === 0x2008 || // Punctuation Space\n          code === 0x2009 || // Thin Space\n          code === 0x200a || // Hair Space\n          code === 0x2028 || // Line Separator\n          code === 0x2029 || // Paragraph Separator\n          code === 0x202f || // Narrow No-Break Space\n          code === 0x205f || // Medium Mathematical Space\n          code === 0x3000 || // Ideographic Space\n          code === 0xfeff    // Byte Order Mark\n        )\n      )\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction isNonEmptyString(value) {\n  return typeof value === 'string' && value.length > 0\n}\n\nfunction isSemverString(value) {\n  return typeof value === 'string' && regexSemverNumberedGroups.test(value)\n}\n\nfunction lowerName(purl) {\n  purl.name = purl.name.toLowerCase()\n}\n\nfunction lowerNamespace(purl) {\n  const { namespace } = purl\n  if (typeof namespace === 'string') {\n    purl.namespace = namespace.toLowerCase()\n  }\n}\n\nfunction lowerVersion(purl) {\n  const { version } = purl\n  if (typeof version === 'string') {\n    purl.version = version.toLowerCase()\n  }\n}\n\nfunction replaceDashesWithUnderscores(str) {\n  // Replace all \"-\" with \"_\"\n  let result = ''\n  let fromIndex = 0\n  let index = 0\n  while ((index = str.indexOf('-', fromIndex)) !== -1) {\n    result = result + str.slice(fromIndex, index) + '_'\n    fromIndex = index + 1\n  }\n  return fromIndex ? result + str.slice(fromIndex) : str\n}\n\nfunction replaceUnderscoresWithDashes(str) {\n  // Replace all \"_\" with \"-\"\n  let result = ''\n  let fromIndex = 0\n  let index = 0\n  while ((index = str.indexOf('_', fromIndex)) !== -1) {\n    result = result + str.slice(fromIndex, index) + '-'\n    fromIndex = index + 1\n  }\n  return fromIndex ? result + str.slice(fromIndex) : str\n}\n\nfunction trimLeadingSlashes(str) {\n  let start = 0\n  while (str.charCodeAt(start) === 47 /*'/'*/) {\n    start += 1\n  }\n  return start === 0 ? str : str.slice(start)\n}\n\nmodule.exports = {\n  isBlank,\n  isNonEmptyString,\n  isSemverString,\n  localeCompare,\n  lowerName,\n  lowerNamespace,\n  lowerVersion,\n  replaceDashesWithUnderscores,\n  replaceUnderscoresWithDashes,\n  trimLeadingSlashes\n}\n","'use strict'\n\nconst {\n  REUSED_SEARCH_PARAMS,\n  REUSED_SEARCH_PARAMS_KEY,\n  REUSED_SEARCH_PARAMS_OFFSET\n} = require('./constants')\nconst { isObject } = require('./objects')\nconst { isNonEmptyString } = require('./strings')\n\nconst { encodeURIComponent: encodeComponent } = globalThis\n\nfunction encodeName(name) {\n  return isNonEmptyString(name)\n    ? encodeComponent(name).replace(/%3A/g, ':')\n    : ''\n}\n\nfunction encodeNamespace(namespace) {\n  return isNonEmptyString(namespace)\n    ? encodeComponent(namespace).replace(/%3A/g, ':').replace(/%2F/g, '/')\n    : ''\n}\n\nfunction encodeQualifierParam(param) {\n  if (isNonEmptyString(param)) {\n    // Param key and value are encoded with `percentEncodeSet` of\n    // 'application/x-www-form-urlencoded' and `spaceAsPlus` of `true`.\n    // https://url.spec.whatwg.org/#urlencoded-serializing\n    REUSED_SEARCH_PARAMS.set(REUSED_SEARCH_PARAMS_KEY, param)\n    return replacePlusSignWithPercentEncodedSpace(\n      REUSED_SEARCH_PARAMS.toString().slice(REUSED_SEARCH_PARAMS_OFFSET)\n    )\n  }\n  return ''\n}\n\nfunction encodeQualifiers(qualifiers) {\n  if (isObject(qualifiers)) {\n    // Sort this list of qualifier strings lexicographically.\n    const qualifiersKeys = Object.keys(qualifiers).sort()\n    const searchParams = new URLSearchParams()\n    for (let i = 0, { length } = qualifiersKeys; i < length; i += 1) {\n      const key = qualifiersKeys[i]\n      searchParams.set(key, qualifiers[key])\n    }\n    return replacePlusSignWithPercentEncodedSpace(searchParams.toString())\n  }\n  return ''\n}\n\nfunction encodeSubpath(subpath) {\n  return isNonEmptyString(subpath)\n    ? encodeComponent(subpath).replace(/%2F/g, '/')\n    : ''\n}\n\nfunction encodeVersion(version) {\n  return isNonEmptyString(version)\n    ? encodeComponent(version).replace(/%3A/g, ':').replace(/%2B/g, '+')\n    : ''\n}\n\nfunction replacePlusSignWithPercentEncodedSpace(str) {\n  // Convert plus signs to %20 for better portability.\n  return str.replace(/\\+/g, '%20')\n}\n\nmodule.exports = {\n  encodeComponent,\n  encodeName,\n  encodeNamespace,\n  encodeVersion,\n  encodeQualifiers,\n  encodeQualifierParam,\n  encodeSubpath\n}\n","'use strict'\n\nfunction createHelpersNamespaceObject(helpers, options_ = {}) {\n  const { comparator, ...defaults } = { __proto__: null, ...options_ }\n  const helperNames = Object.keys(helpers).sort()\n  const propNames = [\n    ...new Set(Object.values(helpers).map(Object.keys).flat())\n  ].sort(comparator)\n  const nsObject = Object.create(null)\n  for (let i = 0, { length } = propNames; i < length; i += 1) {\n    const propName = propNames[i]\n    const helpersForProp = Object.create(null)\n    for (let j = 0, { length: length_j } = helperNames; j < length_j; j += 1) {\n      const helperName = helperNames[j]\n      const helperValue = helpers[helperName][propName] ?? defaults[helperName]\n      if (helperValue !== undefined) {\n        helpersForProp[helperName] = helperValue\n      }\n    }\n    nsObject[propName] = helpersForProp\n  }\n  return nsObject\n}\n\nmodule.exports = {\n  createHelpersNamespaceObject\n}\n","'use strict'\n\nconst { isObject } = require('./objects')\nconst { isBlank } = require('./strings')\n\nfunction normalizeName(rawName) {\n  return typeof rawName === 'string' ? rawName.trim() : undefined\n}\n\nfunction normalizeNamespace(rawNamespace) {\n  return typeof rawNamespace === 'string'\n    ? normalizePath(rawNamespace)\n    : undefined\n}\n\nfunction normalizePath(pathname, callback) {\n  let collapsed = ''\n  let start = 0\n  // Leading and trailing slashes, i.e. '/', are not significant and should be\n  // stripped in the canonical form.\n  while (pathname.charCodeAt(start) === 47 /*'/'*/) {\n    start += 1\n  }\n  let nextIndex = pathname.indexOf('/', start)\n  if (nextIndex === -1) {\n    return pathname.slice(start)\n  }\n  // Discard any empty string segments by collapsing repeated segment\n  // separator slashes, i.e. '/'.\n  while (nextIndex !== -1) {\n    const segment = pathname.slice(start, nextIndex)\n    if (callback === undefined || callback(segment)) {\n      collapsed = collapsed + (collapsed.length === 0 ? '' : '/') + segment\n    }\n    start = nextIndex + 1\n    while (pathname.charCodeAt(start) === 47) {\n      start += 1\n    }\n    nextIndex = pathname.indexOf('/', start)\n  }\n  const lastSegment = pathname.slice(start)\n  if (\n    lastSegment.length !== 0 &&\n    (callback === undefined || callback(lastSegment))\n  ) {\n    collapsed = collapsed + '/' + lastSegment\n  }\n  return collapsed\n}\n\nfunction normalizeQualifiers(rawQualifiers) {\n  let qualifiers\n  for (const { 0: key, 1: value } of qualifiersToEntries(rawQualifiers)) {\n    const strValue = typeof value === 'string' ? value : String(value)\n    const trimmed = strValue.trim()\n    // A key=value pair with an empty value is the same as no key/value\n    // at all for this key.\n    if (trimmed.length === 0) {\n      continue\n    }\n    if (qualifiers === undefined) {\n      qualifiers = { __proto__: null }\n    }\n    // A key is case insensitive. The canonical form is lowercase.\n    qualifiers[key.toLowerCase()] = trimmed\n  }\n  return qualifiers\n}\n\nfunction normalizeSubpath(rawSubpath) {\n  return typeof rawSubpath === 'string'\n    ? normalizePath(rawSubpath, subpathFilter)\n    : undefined\n}\n\nfunction normalizeType(rawType) {\n  // The type must NOT be percent-encoded.\n  // The type is case insensitive. The canonical form is lowercase.\n  return typeof rawType === 'string' ? rawType.trim().toLowerCase() : undefined\n}\n\nfunction normalizeVersion(rawVersion) {\n  return typeof rawVersion === 'string' ? rawVersion.trim() : undefined\n}\n\nfunction qualifiersToEntries(rawQualifiers) {\n  if (isObject(rawQualifiers)) {\n    return rawQualifiers instanceof URLSearchParams\n      ? rawQualifiers.entries()\n      : Object.entries(rawQualifiers)\n  }\n  return typeof rawQualifiers === 'string'\n    ? new URLSearchParams(rawQualifiers).entries()\n    : Object.entries({})\n}\n\nfunction subpathFilter(segment) {\n  // When percent-decoded, a segment\n  //   - must not be any of '.' or '..'\n  //   - must not be empty\n  const { length } = segment\n  if (length === 1 && segment.charCodeAt(0) === 46 /*'.'*/) {\n    return false\n  }\n  if (\n    length === 2 &&\n    segment.charCodeAt(0) === 46 &&\n    segment.charCodeAt(1) === 46\n  ) {\n    return false\n  }\n  return !isBlank(segment)\n}\n\nmodule.exports = {\n  normalizeName,\n  normalizeNamespace,\n  normalizePath,\n  normalizeQualifiers,\n  normalizeSubpath,\n  normalizeType,\n  normalizeVersion\n}\n","'use strict'\n\nfunction isNullishOrEmptyString(value) {\n  return (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'string' && value.length === 0)\n  )\n}\n\nmodule.exports = {\n  isNullishOrEmptyString\n}\n","'use strict'\n\nconst { PurlError } = require('./error')\nconst { isNullishOrEmptyString } = require('./lang')\nconst { isNonEmptyString } = require('./strings')\n\nfunction validateEmptyByType(type, name, value, throws) {\n  if (!isNullishOrEmptyString(value)) {\n    if (throws) {\n      throw new PurlError(`${type} \"${name}\" component must be empty`)\n    }\n    return false\n  }\n  return true\n}\n\nfunction validateName(name, throws) {\n  return (\n    validateRequired('name', name, throws) &&\n    validateStrings('name', name, throws)\n  )\n}\n\nfunction validateNamespace(namespace, throws) {\n  return validateStrings('namespace', namespace, throws)\n}\n\nfunction validateQualifiers(qualifiers, throws) {\n  if (qualifiers === null || qualifiers === undefined) {\n    return true\n  }\n  if (typeof qualifiers !== 'object') {\n    if (throws) {\n      throw new PurlError('\"qualifiers\" must be an object')\n    }\n    return false\n  }\n  const keysIterable =\n    // URL searchParams have an \"keys\" method that returns an iterator.\n    typeof qualifiers.keys === 'function'\n      ? qualifiers.keys()\n      : Object.keys(qualifiers)\n  for (const key of keysIterable) {\n    if (!validateQualifierKey(key, throws)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction validateQualifierKey(key, throws) {\n  // A key cannot start with a number.\n  if (!validateStartsWithoutNumber('qualifier', key, throws)) {\n    return false\n  }\n  // The key must be composed only of ASCII letters and numbers,\n  // '.', '-' and '_' (period, dash and underscore).\n  for (let i = 0, { length } = key; i < length; i += 1) {\n    const code = key.charCodeAt(i)\n    // biome-ignore format:\n    if (\n      !(\n        (\n          (code >= 48 && code <= 57)  || // 0-9\n          (code >= 65 && code <= 90)  || // A-Z\n          (code >= 97 && code <= 122) || // a-z\n          code === 46 || // .\n          code === 45 || // -\n          code === 95    // _\n        )\n      )\n    ) {\n      if (throws) {\n        throw new PurlError(\n          `qualifier \"${key}\" contains an illegal character`\n        )\n      }\n      return false\n    }\n  }\n  return true\n}\n\nfunction validateRequired(name, value, throws) {\n  if (isNullishOrEmptyString(value)) {\n    if (throws) {\n      throw new PurlError(`\"${name}\" is a required component`)\n    }\n    return false\n  }\n  return true\n}\n\nfunction validateRequiredByType(type, name, value, throws) {\n  if (isNullishOrEmptyString(value)) {\n    if (throws) {\n      throw new PurlError(`${type} requires a \"${name}\" component`)\n    }\n    return false\n  }\n  return true\n}\n\nfunction validateStartsWithoutNumber(name, value, throws) {\n  if (isNonEmptyString(value)) {\n    const code = value.charCodeAt(0)\n    if (code >= 48 /*'0'*/ && code <= 57 /*'9'*/) {\n      if (throws) {\n        throw new PurlError(`${name} \"${value}\" cannot start with a number`)\n      }\n      return false\n    }\n  }\n  return true\n}\n\nfunction validateStrings(name, value, throws) {\n  if (value === null || value === undefined || typeof value === 'string') {\n    return true\n  }\n  if (throws) {\n    throw new PurlError(`\"'${name}\" must be a string`)\n  }\n  return false\n}\n\nfunction validateSubpath(subpath, throws) {\n  return validateStrings('subpath', subpath, throws)\n}\n\nfunction validateType(type, throws) {\n  // The type cannot be nullish, an empty string, or start with a number.\n  if (\n    !validateRequired('type', type, throws) ||\n    !validateStrings('type', type, throws) ||\n    !validateStartsWithoutNumber('type', type, throws)\n  ) {\n    return false\n  }\n  // The package type is composed only of ASCII letters and numbers,\n  // '.', '+' and '-' (period, plus, and dash)\n  for (let i = 0, { length } = type; i < length; i += 1) {\n    const code = type.charCodeAt(i)\n    // biome-ignore format:\n    if (\n      !(\n        (\n          (code >= 48 && code <= 57)  || // 0-9\n          (code >= 65 && code <= 90)  || // A-Z\n          (code >= 97 && code <= 122) || // a-z\n          code === 46 || // .\n          code === 43 || // +\n          code === 45    // -\n        )\n      )\n    ) {\n      if (throws) {\n        throw new PurlError(\n          `type \"${type}\" contains an illegal character`\n        )\n      }\n      return false\n    }\n  }\n  return true\n}\n\nfunction validateVersion(version, throws) {\n  return validateStrings('version', version, throws)\n}\n\nmodule.exports = {\n  validateEmptyByType,\n  validateName,\n  validateNamespace,\n  validateQualifiers,\n  validateQualifierKey,\n  validateRequired,\n  validateRequiredByType,\n  validateStartsWithoutNumber,\n  validateStrings,\n  validateSubpath,\n  validateType,\n  validateVersion\n}\n","'use strict'\n\nconst {\n  encodeComponent,\n  encodeName,\n  encodeNamespace,\n  encodeQualifierParam,\n  encodeQualifiers,\n  encodeSubpath,\n  encodeVersion\n} = require('./encode')\nconst { createHelpersNamespaceObject } = require('./helpers')\nconst {\n  normalizeName,\n  normalizeNamespace,\n  normalizeQualifiers,\n  normalizeSubpath,\n  normalizeType,\n  normalizeVersion\n} = require('./normalize')\nconst { isNonEmptyString, localeCompare } = require('./strings')\nconst {\n  validateName,\n  validateNamespace,\n  validateQualifierKey,\n  validateQualifiers,\n  validateSubpath,\n  validateType,\n  validateVersion\n} = require('./validate')\n\nconst PurlComponentEncoder = comp =>\n  isNonEmptyString(comp) ? encodeComponent(comp) : ''\n\nconst PurlComponentStringNormalizer = comp =>\n  typeof comp === 'string' ? comp : undefined\n\nconst PurlComponentValidator = (_comp, _throws) => true\n\nconst componentSortOrderLookup = {\n  __proto__: null,\n  type: 0,\n  namespace: 1,\n  name: 2,\n  version: 3,\n  qualifiers: 4,\n  qualifierKey: 5,\n  qualifierValue: 6,\n  subpath: 7\n}\n\nfunction componentSortOrder(comp) {\n  return componentSortOrderLookup[comp] ?? comp\n}\n\nfunction componentComparator(compA, compB) {\n  return localeCompare(componentSortOrder(compA), componentSortOrder(compB))\n}\n\nmodule.exports = {\n  // Rules for each purl component:\n  // https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst#rules-for-each-purl-component\n  PurlComponent: createHelpersNamespaceObject(\n    {\n      encode: {\n        name: encodeName,\n        namespace: encodeNamespace,\n        version: encodeVersion,\n        qualifiers: encodeQualifiers,\n        qualifierKey: encodeQualifierParam,\n        qualifierValue: encodeQualifierParam,\n        subpath: encodeSubpath\n      },\n      normalize: {\n        type: normalizeType,\n        namespace: normalizeNamespace,\n        name: normalizeName,\n        version: normalizeVersion,\n        qualifiers: normalizeQualifiers,\n        subpath: normalizeSubpath\n      },\n      validate: {\n        type: validateType,\n        namespace: validateNamespace,\n        name: validateName,\n        version: validateVersion,\n        qualifierKey: validateQualifierKey,\n        qualifiers: validateQualifiers,\n        subpath: validateSubpath\n      }\n    },\n    {\n      comparator: componentComparator,\n      encode: PurlComponentEncoder,\n      normalize: PurlComponentStringNormalizer,\n      validate: PurlComponentValidator\n    }\n  )\n}\n","'use strict'\n\nmodule.exports = {\n  // Known qualifiers:\n  // https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst#known-qualifiers-keyvalue-pairs\n  PurlQualifierNames: {\n    __proto__: null,\n    RepositoryUrl: 'repository_url',\n    DownloadUrl: 'download_url',\n    VcsUrl: 'vcs_url',\n    FileName: 'file_name',\n    Checksum: 'checksum'\n  }\n}\n","'use strict'\n\nconst { encodeComponent } = require('./encode')\nconst { PurlError } = require('./error')\nconst { createHelpersNamespaceObject } = require('./helpers')\nconst { isNullishOrEmptyString } = require('./lang')\nconst {\n  isSemverString,\n  lowerName,\n  lowerNamespace,\n  lowerVersion,\n  replaceDashesWithUnderscores,\n  replaceUnderscoresWithDashes\n} = require('./strings')\nconst { validateEmptyByType, validateRequiredByType } = require('./validate')\n\nconst PurlTypNormalizer = purl => purl\nconst PurlTypeValidator = (_purl, _throws) => true\n\nconst getNpmBuiltinNames = (() => {\n  let builtinNames\n  return () => {\n    if (builtinNames === undefined) {\n      builtinNames =\n        // Avoid a require('module') call directly so folks can bundle\n        // for the browser without issues.\n        (typeof module === 'object' &&\n          module !== null &&\n          module.constructor?.builtinModules) ||\n        require('../data/npm/builtin-names.json')\n    }\n    return builtinNames\n  }\n})()\n\nconst getNpmLegacyNames = (() => {\n  let legacyNames\n  return () => {\n    if (legacyNames === undefined) {\n      legacyNames = require('../data/npm/legacy-names.json')\n    }\n    return legacyNames\n  }\n})()\n\nfunction getNpmId(purl) {\n  const { name, namespace } = purl\n  return `${namespace?.length > 0 ? `${namespace}/` : ''}${name}`\n}\n\nconst isNpmBuiltinName = id => getNpmBuiltinNames().includes(id.toLowerCase())\n\nconst isNpmLegacyName = id => getNpmLegacyNames().includes(id)\n\nmodule.exports = {\n  // PURL types:\n  // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst\n  PurlType: createHelpersNamespaceObject(\n    {\n      normalize: {\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#alpm\n        alpm(purl) {\n          lowerNamespace(purl)\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#apk\n        apk(purl) {\n          lowerNamespace(purl)\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#bitbucket\n        bitbucket(purl) {\n          lowerNamespace(purl)\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#bitnami\n        bitnami(purl) {\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#composer\n        composer(purl) {\n          lowerNamespace(purl)\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#deb\n        deb(purl) {\n          lowerNamespace(purl)\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#other-candidate-types-to-define\n        gitlab(purl) {\n          lowerNamespace(purl)\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#github\n        github(purl) {\n          lowerNamespace(purl)\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#golang\n        // golang(purl) {\n        //     // Ignore case-insensitive rule because go.mod are case-sensitive.\n        //     // Pending spec change: https://github.com/package-url/purl-spec/pull/196\n        //     lowerNamespace(purl)\n        //     lowerName(purl)\n        //     return purl\n        // },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#hex\n        hex(purl) {\n          lowerNamespace(purl)\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#huggingface\n        huggingface(purl) {\n          lowerVersion(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#mlflow\n        mlflow(purl) {\n          if (purl.qualifiers?.repository_url?.includes('databricks')) {\n            lowerName(purl)\n          }\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#npm\n        npm(purl) {\n          lowerNamespace(purl)\n          // Ignore lowercasing legacy names because they could be mixed case.\n          // https://github.com/npm/validate-npm-package-name/tree/v6.0.0?tab=readme-ov-file#legacy-names\n          if (!isNpmLegacyName(getNpmId(purl))) {\n            lowerName(purl)\n          }\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#luarocks\n        luarocks(purl) {\n          lowerVersion(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#oci\n        oci(purl) {\n          lowerName(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#pub\n        pub(purl) {\n          lowerName(purl)\n          purl.name = replaceDashesWithUnderscores(purl.name)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#pypi\n        pypi(purl) {\n          lowerNamespace(purl)\n          lowerName(purl)\n          purl.name = replaceUnderscoresWithDashes(purl.name)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#qpkg\n        qpkg(purl) {\n          lowerNamespace(purl)\n          return purl\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#rpm\n        rpm(purl) {\n          lowerNamespace(purl)\n          return purl\n        }\n      },\n      validate: {\n        // TODO: cocoapods name validation\n        // TODO: cpan namespace validation\n        // TODO: swid qualifier validation\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#conan\n        conan(purl, throws) {\n          if (isNullishOrEmptyString(purl.namespace)) {\n            if (purl.qualifiers?.channel) {\n              if (throws) {\n                throw new PurlError(\n                  'conan requires a \"namespace\" component when a \"channel\" qualifier is present'\n                )\n              }\n              return false\n            }\n          } else if (isNullishOrEmptyString(purl.qualifiers)) {\n            if (throws) {\n              throw new PurlError(\n                'conan requires a \"qualifiers\" component when a namespace is present'\n              )\n            }\n            return false\n          }\n          return true\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#cran\n        cran(purl, throws) {\n          return validateRequiredByType('cran', 'version', purl.version, throws)\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#golang\n        golang(purl, throws) {\n          // Still being lenient here since the standard changes aren't official.\n          // Pending spec change: https://github.com/package-url/purl-spec/pull/196\n          const { version } = purl\n          const length = typeof version === 'string' ? version.length : 0\n          // If the version starts with a \"v\" then ensure its a valid semver version.\n          // This, by semver semantics, also supports pseudo-version number.\n          // https://go.dev/doc/modules/version-numbers#pseudo-version-number\n          if (\n            length &&\n            version.charCodeAt(0) === 118 /*'v'*/ &&\n            !isSemverString(version.slice(1))\n          ) {\n            if (throws) {\n              throw new PurlError(\n                'golang \"version\" component starting with a \"v\" must be followed by a valid semver version'\n              )\n            }\n            return false\n          }\n          return true\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#maven\n        maven(purl, throws) {\n          return validateRequiredByType(\n            'maven',\n            'namespace',\n            purl.namespace,\n            throws\n          )\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#mlflow\n        mlflow(purl, throws) {\n          return validateEmptyByType(\n            'mlflow',\n            'namespace',\n            purl.namespace,\n            throws\n          )\n        },\n        // Validation based on\n        // https://github.com/npm/validate-npm-package-name/tree/v6.0.0\n        // ISC License\n        // Copyright (c) 2015, npm, Inc\n        npm(purl, throws) {\n          const { name, namespace } = purl\n          const hasNs = namespace?.length > 0\n          const id = getNpmId(purl)\n          const code0 = id.charCodeAt(0)\n          const compName = hasNs ? 'namespace' : 'name'\n          if (code0 === 46 /*'.'*/) {\n            if (throws) {\n              throw new PurlError(\n                `npm \"${compName}\" component cannot start with a period`\n              )\n            }\n            return false\n          }\n          if (code0 === 95 /*'_'*/) {\n            if (throws) {\n              throw new PurlError(\n                `npm \"${compName}\" component cannot start with an underscore`\n              )\n            }\n            return false\n          }\n          if (name.trim() !== name) {\n            if (throws) {\n              throw new PurlError(\n                'npm \"name\" component cannot contain leading or trailing spaces'\n              )\n            }\n            return false\n          }\n          if (encodeComponent(name) !== name) {\n            if (throws) {\n              throw new PurlError(\n                `npm \"name\" component can only contain URL-friendly characters`\n              )\n            }\n            return false\n          }\n          if (hasNs) {\n            if (namespace.trim() !== namespace) {\n              if (throws) {\n                throw new PurlError(\n                  'npm \"namespace\" component cannot contain leading or trailing spaces'\n                )\n              }\n              return false\n            }\n            if (code0 !== 64 /*'@'*/) {\n              throw new PurlError(\n                `npm \"namespace\" component must start with an \"@\" character`\n              )\n            }\n            const namespaceWithoutAtSign = namespace.slice(1)\n            if (\n              encodeComponent(namespaceWithoutAtSign) !== namespaceWithoutAtSign\n            ) {\n              if (throws) {\n                throw new PurlError(\n                  `npm \"namespace\" component can only contain URL-friendly characters`\n                )\n              }\n              return false\n            }\n          }\n          const loweredId = id.toLowerCase()\n          if (loweredId === 'node_modules' || loweredId === 'favicon.ico') {\n            if (throws) {\n              throw new PurlError(\n                `npm \"${compName}\" component of \"${loweredId}\" is not allowed`\n              )\n            }\n            return false\n          }\n          // The remaining checks are only for modern names.\n          // https://github.com/npm/validate-npm-package-name/tree/v6.0.0?tab=readme-ov-file#naming-rules\n          if (!isNpmLegacyName(id)) {\n            if (id.length > 214) {\n              if (throws) {\n                throw new PurlError(\n                  `npm \"namespace\" and \"name\" components can not collectively be more than 214 characters`\n                )\n              }\n              return false\n            }\n            if (loweredId !== id) {\n              if (throws) {\n                throw new PurlError(\n                  `npm \"name\" component can not contain capital letters`\n                )\n              }\n              return false\n            }\n            if (/[~'!()*]/.test(name)) {\n              if (throws) {\n                throw new PurlError(\n                  `npm \"name\" component can not contain special characters (\"~'!()*\")`\n                )\n              }\n              return false\n            }\n            if (isNpmBuiltinName(id)) {\n              if (throws) {\n                throw new PurlError(\n                  'npm \"name\" component can not be a core module name'\n                )\n              }\n              return false\n            }\n          }\n          return true\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#oci\n        oci(purl, throws) {\n          return validateEmptyByType('oci', 'namespace', purl.namespace, throws)\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#pub\n        pub(purl, throws) {\n          const { name } = purl\n          for (let i = 0, { length } = name; i < length; i += 1) {\n            const code = name.charCodeAt(i)\n            // biome-ignore format:\n            if (\n              !(\n                (\n                  (code >= 48 && code <= 57)  || // 0-9\n                  (code >= 97 && code <= 122) || // a-z\n                  code === 95 // _\n                )\n              )\n            ) {\n              if (throws) {\n                throw new PurlError(\n                  'pub \"name\" component may only contain [a-z0-9_] characters'\n                )\n              }\n              return false\n            }\n          }\n          return true\n        },\n        // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#swift\n        swift(purl, throws) {\n          return (\n            validateRequiredByType(\n              'swift',\n              'namespace',\n              purl.namespace,\n              throws\n            ) &&\n            validateRequiredByType('swift', 'version', purl.version, throws)\n          )\n        }\n      }\n    },\n    {\n      normalize: PurlTypNormalizer,\n      validate: PurlTypeValidator\n    }\n  )\n}\n","/*!\nCopyright (c) the purl authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n'use strict'\n\nconst { decodePurlComponent } = require('./decode')\nconst { PurlError } = require('./error')\nconst { isObject, recursiveFreeze } = require('./objects')\nconst { PurlComponent } = require('./purl-component')\nconst { PurlQualifierNames } = require('./purl-qualifier-names')\nconst { PurlType } = require('./purl-type')\nconst { isBlank, isNonEmptyString, trimLeadingSlashes } = require('./strings')\n\nclass PackageURL {\n  static Component = recursiveFreeze(PurlComponent)\n  static KnownQualifierNames = recursiveFreeze(PurlQualifierNames)\n  static Type = recursiveFreeze(PurlType)\n\n  constructor(\n    rawType,\n    rawNamespace,\n    rawName,\n    rawVersion,\n    rawQualifiers,\n    rawSubpath\n  ) {\n    const type = isNonEmptyString(rawType)\n      ? PurlComponent.type.normalize(rawType)\n      : rawType\n    PurlComponent.type.validate(type, true)\n\n    const namespace = isNonEmptyString(rawNamespace)\n      ? PurlComponent.namespace.normalize(rawNamespace)\n      : rawNamespace\n    PurlComponent.namespace.validate(namespace, true)\n\n    const name = isNonEmptyString(rawName)\n      ? PurlComponent.name.normalize(rawName)\n      : rawName\n    PurlComponent.name.validate(name, true)\n\n    const version = isNonEmptyString(rawVersion)\n      ? PurlComponent.version.normalize(rawVersion)\n      : rawVersion\n    PurlComponent.version.validate(version, true)\n\n    const qualifiers =\n      typeof rawQualifiers === 'string' || isObject(rawQualifiers)\n        ? PurlComponent.qualifiers.normalize(rawQualifiers)\n        : rawQualifiers\n    PurlComponent.qualifiers.validate(qualifiers, true)\n\n    const subpath = isNonEmptyString(rawSubpath)\n      ? PurlComponent.subpath.normalize(rawSubpath)\n      : rawSubpath\n    PurlComponent.subpath.validate(subpath, true)\n\n    this.type = type\n    this.name = name\n    this.namespace = namespace ?? undefined\n    this.version = version ?? undefined\n    this.qualifiers = qualifiers ?? undefined\n    this.subpath = subpath ?? undefined\n\n    const typeHelpers = PurlType[type]\n    if (typeHelpers) {\n      typeHelpers.normalize(this)\n      typeHelpers.validate(this, true)\n    }\n  }\n\n  toString() {\n    const { name, namespace, qualifiers, subpath, type, version } = this\n    let purlStr = `pkg:${PurlComponent.type.encode(type)}/`\n    if (namespace) {\n      purlStr = `${purlStr}${PurlComponent.namespace.encode(namespace)}/`\n    }\n    purlStr = `${purlStr}${PurlComponent.name.encode(name)}`\n    if (version) {\n      purlStr = `${purlStr}@${PurlComponent.version.encode(version)}`\n    }\n    if (qualifiers) {\n      purlStr = `${purlStr}?${PurlComponent.qualifiers.encode(qualifiers)}`\n    }\n    if (subpath) {\n      purlStr = `${purlStr}#${PurlComponent.subpath.encode(subpath)}`\n    }\n    return purlStr\n  }\n\n  static fromString(purlStr) {\n    return new PackageURL(...PackageURL.parseString(purlStr))\n  }\n\n  static parseString(purlStr) {\n    // https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst#how-to-parse-a-purl-string-in-its-components\n    if (typeof purlStr !== 'string') {\n      throw new Error('A purl string argument is required.')\n    }\n    if (isBlank(purlStr)) {\n      return [undefined, undefined, undefined, undefined, undefined, undefined]\n    }\n\n    // Split the remainder once from left on ':'.\n    const colonIndex = purlStr.indexOf(':')\n    // Use WHATWG URL to split up the purl string.\n    //   - Split the purl string once from right on '#'\n    //   - Split the remainder once from right on '?'\n    //   - Split the remainder once from left on ':'\n    let url\n    let maybeUrlWithAuth\n    if (colonIndex !== -1) {\n      try {\n        // Since a purl never contains a URL Authority, its scheme\n        // must not be suffixed with double slash as in 'pkg://'\n        // and should use instead 'pkg:'. Purl parsers must accept\n        // URLs such as 'pkg://' and must ignore the '//'\n        const beforeColon = purlStr.slice(0, colonIndex)\n        const afterColon = purlStr.slice(colonIndex + 1)\n        const trimmedAfterColon = trimLeadingSlashes(afterColon)\n        url = new URL(`${beforeColon}:${trimmedAfterColon}`)\n        maybeUrlWithAuth =\n          afterColon.length === trimmedAfterColon.length\n            ? url\n            : new URL(purlStr)\n      } catch (e) {\n        throw new PurlError('failed to parse as URL', {\n          cause: e\n        })\n      }\n    }\n    // The scheme is a constant with the value \"pkg\".\n    if (url?.protocol !== 'pkg:') {\n      throw new PurlError('missing required \"pkg\" scheme component')\n    }\n    // A purl must NOT contain a URL Authority i.e. there is no support for\n    // username, password, host and port components.\n    if (maybeUrlWithAuth.username !== '' || maybeUrlWithAuth.password !== '') {\n      throw new PurlError('cannot contain a \"user:pass@host:port\"')\n    }\n\n    const { pathname } = url\n    const firstSlashIndex = pathname.indexOf('/')\n    const rawType = decodePurlComponent(\n      'type',\n      firstSlashIndex === -1 ? pathname : pathname.slice(0, firstSlashIndex)\n    )\n    if (firstSlashIndex < 1) {\n      return [rawType, undefined, undefined, undefined, undefined, undefined]\n    }\n\n    let rawVersion\n    let atSignIndex =\n      rawType === 'npm'\n        ? // Deviate from the specification to handle a special npm purl type case for\n          // pnpm ids such as 'pkg:npm/next@14.2.10(react-dom@18.3.1(react@18.3.1))(react@18.3.1)'.\n          pathname.indexOf('@', firstSlashIndex + 2)\n        : pathname.lastIndexOf('@')\n    // When a forward slash ('/') is directly preceding an '@' symbol,\n    // then the '@' symbol is NOT considered a version separator.\n    if (\n      atSignIndex !== -1 &&\n      pathname.charCodeAt(atSignIndex - 1) === 47 /*'/'*/\n    ) {\n      atSignIndex = -1\n    }\n    const beforeVersion = pathname.slice(\n      rawType.length + 1,\n      atSignIndex === -1 ? pathname.length : atSignIndex\n    )\n    if (atSignIndex !== -1) {\n      // Split the remainder once from right on '@'.\n      rawVersion = decodePurlComponent(\n        'version',\n        pathname.slice(atSignIndex + 1)\n      )\n    }\n\n    let rawNamespace\n    let rawName\n    const lastSlashIndex = beforeVersion.lastIndexOf('/')\n    if (lastSlashIndex === -1) {\n      // Split the remainder once from right on '/'.\n      rawName = decodePurlComponent('name', beforeVersion)\n    } else {\n      // Split the remainder once from right on '/'.\n      rawName = decodePurlComponent(\n        'name',\n        beforeVersion.slice(lastSlashIndex + 1)\n      )\n      // Split the remainder on '/'.\n      rawNamespace = decodePurlComponent(\n        'namespace',\n        beforeVersion.slice(0, lastSlashIndex)\n      )\n    }\n\n    let rawQualifiers\n    const { searchParams } = url\n    if (searchParams.size !== 0) {\n      searchParams.forEach(value => decodePurlComponent('qualifiers', value))\n      // Split the remainder once from right on '?'.\n      rawQualifiers = searchParams\n    }\n\n    let rawSubpath\n    const { hash } = url\n    if (hash.length !== 0) {\n      // Split the purl string once from right on '#'.\n      rawSubpath = decodePurlComponent('subpath', hash.slice(1))\n    }\n\n    return [\n      rawType,\n      rawNamespace,\n      rawName,\n      rawVersion,\n      rawQualifiers,\n      rawSubpath\n    ]\n  }\n}\n\nfor (const staticProp of ['Component', 'KnownQualifierNames', 'Type']) {\n  Reflect.defineProperty(PackageURL, staticProp, {\n    ...Reflect.getOwnPropertyDescriptor(PackageURL, staticProp),\n    writable: false\n  })\n}\n\nReflect.setPrototypeOf(PackageURL.prototype, null)\n\nmodule.exports = {\n  PackageURL,\n  PurlComponent,\n  PurlQualifierNames,\n  PurlType\n}\n","/*!\nCopyright (c) the purl authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n'use strict'\n\nconst {\n  PackageURL,\n  PurlComponent,\n  PurlQualifierNames,\n  PurlType\n} = require('./src/package-url')\n\nmodule.exports = {\n  PackageURL,\n  PurlComponent,\n  PurlQualifierNames,\n  PurlType\n}\n"],"names":["formatPurlErrorMessage","message","length","formatted","code0","charCodeAt","toLowerCase","slice","PurlError","Error","constructor","error","require$$0","decodeURIComponent","decodeComponent","globalThis","decodePurlComponent","comp","encodedComponent","decode","LOOP_SENTINEL","REUSED_SEARCH_PARAMS","URLSearchParams","REUSED_SEARCH_PARAMS_KEY","REUSED_SEARCH_PARAMS_OFFSET","constants","isObject","value","recursiveFreeze","value_","Object","isFrozen","queue","queueLength","pos","obj","freeze","Array","isArray","i","item","keys","Reflect","ownKeys","propValue","objects","_localeCompare","localeCompare","x","y","undefined","Intl","Collator","compare","regexSemverNumberedGroups","isBlank","str","code","isNonEmptyString","isSemverString","test","lowerName","purl","name","lowerNamespace","namespace","lowerVersion","version","replaceDashesWithUnderscores","result","fromIndex","index","indexOf","replaceUnderscoresWithDashes","trimLeadingSlashes","start","strings","require$$1","require$$2","encodeURIComponent","encodeComponent","encodeName","replace","encodeNamespace","encodeQualifierParam","param","set","replacePlusSignWithPercentEncodedSpace","toString","encodeQualifiers","qualifiers","qualifiersKeys","sort","searchParams","key","encodeSubpath","subpath","encodeVersion","encode","createHelpersNamespaceObject","helpers","options_","comparator","defaults","__proto__","helperNames","propNames","Set","values","map","flat","nsObject","create","propName","helpersForProp","j","length_j","helperName","helperValue","normalizeName","rawName","trim","normalizeNamespace","rawNamespace","normalizePath","pathname","callback","collapsed","nextIndex","segment","lastSegment","normalizeQualifiers","rawQualifiers","qualifiersToEntries","strValue","String","trimmed","normalizeSubpath","rawSubpath","subpathFilter","normalizeType","rawType","normalizeVersion","rawVersion","entries","normalize","isNullishOrEmptyString","lang","validateEmptyByType","type","throws","validateName","validateRequired","validateStrings","validateNamespace","validateQualifiers","keysIterable","validateQualifierKey","validateStartsWithoutNumber","validateRequiredByType","validateSubpath","validateType","validateVersion","validate","require$$3","require$$4","PurlComponentEncoder","PurlComponentStringNormalizer","PurlComponentValidator","_comp","_throws","componentSortOrderLookup","qualifierKey","qualifierValue","componentSortOrder","componentComparator","compA","compB","purlComponent","PurlComponent","purlQualifierNames","PurlQualifierNames","RepositoryUrl","DownloadUrl","VcsUrl","FileName","Checksum","require$$5","PurlTypNormalizer","PurlTypeValidator","_purl","getNpmBuiltinNames","builtinNames","module","builtinModules","require$$6","getNpmLegacyNames","legacyNames","require$$7","getNpmId","isNpmBuiltinName","id","includes","isNpmLegacyName","exports","PurlType","alpm","apk","bitbucket","bitnami","composer","deb","gitlab","github","hex","huggingface","mlflow","repository_url","npm","luarocks","oci","pub","pypi","qpkg","rpm","conan","channel","cran","golang","maven","hasNs","compName","namespaceWithoutAtSign","loweredId","swift","PackageURL","Component","KnownQualifierNames","Type","typeHelpers","purlStr","fromString","parseString","colonIndex","url","maybeUrlWithAuth","beforeColon","afterColon","trimmedAfterColon","URL","e","cause","protocol","username","password","firstSlashIndex","atSignIndex","lastIndexOf","beforeVersion","lastSlashIndex","size","forEach","hash","staticProp","defineProperty","getOwnPropertyDescriptor","writable","setPrototypeOf","prototype","packageUrl","packageurlJs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}