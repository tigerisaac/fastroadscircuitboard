import { fetchPackagePackument } from '@socketsecurity/registry/lib/packages'
import type { RangeStyle } from '../../utils/semver.mts'
import type { SafeArborist } from './arborist/lib/arborist/index.mts'
import type { Diff } from './arborist/lib/arborist/types.mts'
import type { SafeNode } from './arborist/lib/node.mts'
import type {
  AlertIncludeFilter,
  AlertsByPkgId
} from '../../utils/socket-package-alert.mts'
import type { EditablePackageJson } from '@socketsecurity/registry/lib/packages'
import type { Spinner } from '@socketsecurity/registry/lib/spinner'
export declare function findBestPatchVersion(
  node: SafeNode,
  availableVersions: string[],
  vulnerableVersionRange?: string,
  _firstPatchedVersionIdentifier?: string | undefined
): string | null
export declare function findPackageNode(
  tree: SafeNode,
  name: string,
  version?: string | undefined
): SafeNode | undefined
export declare function findPackageNodes(
  tree: SafeNode,
  name: string,
  version?: string | undefined
): SafeNode[]
export type GetAlertsMapFromArboristOptions = {
  consolidate?: boolean | undefined
  include?: AlertIncludeFilter | undefined
  nothrow?: boolean | undefined
  spinner?: Spinner | undefined
}
export declare function getAlertsMapFromArborist(
  arb: SafeArborist,
  options_?: GetAlertsMapFromArboristOptions | undefined
): Promise<AlertsByPkgId>
export type DiffQueryIncludeFilter = {
  unchanged?: boolean | undefined
  unknownOrigin?: boolean | undefined
}
export type DiffQueryOptions = {
  include?: DiffQueryIncludeFilter | undefined
}
export type PackageDetail = {
  node: SafeNode
  existing?: SafeNode | undefined
}
export declare function getDetailsFromDiff(
  diff_: Diff | null,
  options?: DiffQueryOptions | undefined
): PackageDetail[]
export declare function isTopLevel(tree: SafeNode, node: SafeNode): boolean
export type Packument = Exclude<
  Awaited<ReturnType<typeof fetchPackagePackument>>,
  null
>
export declare function updateNode(
  node: SafeNode,
  newVersion: string,
  newVersionPackument: Packument['versions'][number]
): void
export declare function updatePackageJsonFromNode(
  editablePkgJson: EditablePackageJson,
  tree: SafeNode,
  node: SafeNode,
  newVersion: string,
  rangeStyle?: RangeStyle | undefined
): boolean
//# sourceMappingURL=arborist-helpers.d.mts.map
