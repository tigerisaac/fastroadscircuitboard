import type { CResult, OutputKind } from '../../types.mts'
import type { SocketSdkReturnType } from '@socketsecurity/sdk'
export declare function outputAnalytics(
  result: CResult<
    | SocketSdkReturnType<'getOrgAnalytics'>['data']
    | SocketSdkReturnType<'getRepoAnalytics'>['data']
  >,
  {
    filePath,
    outputKind,
    repo,
    scope,
    time
  }: {
    scope: string
    time: number
    repo: string
    outputKind: OutputKind
    filePath: string
  }
): Promise<void>
export interface FormattedData {
  top_five_alert_types: Record<string, number>
  total_critical_alerts: Record<string, number>
  total_high_alerts: Record<string, number>
  total_medium_alerts: Record<string, number>
  total_low_alerts: Record<string, number>
  total_critical_added: Record<string, number>
  total_medium_added: Record<string, number>
  total_low_added: Record<string, number>
  total_high_added: Record<string, number>
  total_critical_prevented: Record<string, number>
  total_high_prevented: Record<string, number>
  total_medium_prevented: Record<string, number>
  total_low_prevented: Record<string, number>
}
export declare function renderMarkdown(
  data: FormattedData,
  days: number,
  repoSlug: string
): string
export declare function formatDataRepo(
  data: SocketSdkReturnType<'getRepoAnalytics'>['data']
): FormattedData
export declare function formatDataOrg(
  data: SocketSdkReturnType<'getOrgAnalytics'>['data']
): FormattedData
//# sourceMappingURL=output-analytics.d.mts.map
