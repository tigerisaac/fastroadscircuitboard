import type { ScanReport } from './generate-report.mts'
import type { CResult, OutputKind } from '../../types.mts'
import type { SocketSdkReturnType } from '@socketsecurity/sdk'
import type { components } from '@socketsecurity/sdk/types/api'
export declare function outputScanReport(
  result: CResult<{
    scan: Array<components['schemas']['SocketArtifact']>
    securityPolicy: SocketSdkReturnType<'getOrgSecurityPolicy'>['data']
  }>,
  {
    filePath,
    fold,
    includeLicensePolicy,
    orgSlug,
    outputKind,
    reportLevel,
    scanId,
    short
  }: {
    orgSlug: string
    scanId: string
    includeLicensePolicy: boolean
    outputKind: OutputKind
    filePath: string
    fold: 'pkg' | 'version' | 'file' | 'none'
    reportLevel: 'defer' | 'ignore' | 'monitor' | 'warn' | 'error'
    short: boolean
  }
): Promise<void>
export declare function toJsonReport(
  report: ScanReport,
  includeLicensePolicy?: boolean | undefined
): string
export declare function toMarkdownReport(
  report: ScanReport,
  includeLicensePolicy?: boolean | undefined
): string
//# sourceMappingURL=output-scan-report.d.mts.map
